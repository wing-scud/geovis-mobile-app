{"version":3,"file":"createPlaneGeometry.js","sources":["../../../../Source/Core/PlaneGeometry.js","../../../../Source/WorkersES6/createPlaneGeometry.js"],"sourcesContent":["import BoundingSphere from './BoundingSphere.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport ComponentDatatype from './ComponentDatatype.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryAttribute from './GeometryAttribute.js';\r\nimport GeometryAttributes from './GeometryAttributes.js';\r\nimport PrimitiveType from './PrimitiveType.js';\r\nimport VertexFormat from './VertexFormat.js';\r\n\r\n    /**\r\n     * Describes geometry representing a plane centered at the origin, with a unit width and length.\r\n     *\r\n     * @alias PlaneGeometry\r\n     * @constructor\r\n     *\r\n     * @param {Object} options Object with the following properties:\r\n     * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\r\n     *\r\n     * @example\r\n     * var planeGeometry = new Cesium.PlaneGeometry({\r\n     *   vertexFormat : Cesium.VertexFormat.POSITION_ONLY\r\n     * });\r\n     */\r\n    function PlaneGeometry(options) {\r\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n        var vertexFormat = defaultValue(options.vertexFormat, VertexFormat.DEFAULT);\r\n\r\n        this._vertexFormat = vertexFormat;\r\n        this._workerName = 'createPlaneGeometry';\r\n    }\r\n\r\n    /**\r\n     * The number of elements used to pack the object into an array.\r\n     * @type {Number}\r\n     */\r\n    PlaneGeometry.packedLength = VertexFormat.packedLength;\r\n\r\n    /**\r\n     * Stores the provided instance into the provided array.\r\n     *\r\n     * @param {PlaneGeometry} value The value to pack.\r\n     * @param {Number[]} array The array to pack into.\r\n     * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n     *\r\n     * @returns {Number[]} The array that was packed into\r\n     */\r\n    PlaneGeometry.pack = function(value, array, startingIndex) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('value', value);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        startingIndex = defaultValue(startingIndex, 0);\r\n\r\n        VertexFormat.pack(value._vertexFormat, array, startingIndex);\r\n\r\n        return array;\r\n    };\r\n\r\n    var scratchVertexFormat = new VertexFormat();\r\n    var scratchOptions = {\r\n        vertexFormat: scratchVertexFormat\r\n    };\r\n\r\n    /**\r\n     * Retrieves an instance from a packed array.\r\n     *\r\n     * @param {Number[]} array The packed array.\r\n     * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n     * @param {PlaneGeometry} [result] The object into which to store the result.\r\n     * @returns {PlaneGeometry} The modified result parameter or a new PlaneGeometry instance if one was not provided.\r\n     */\r\n    PlaneGeometry.unpack = function(array, startingIndex, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        startingIndex = defaultValue(startingIndex, 0);\r\n\r\n        var vertexFormat = VertexFormat.unpack(array, startingIndex, scratchVertexFormat);\r\n\r\n        if (!defined(result)) {\r\n            return new PlaneGeometry(scratchOptions);\r\n        }\r\n\r\n        result._vertexFormat = VertexFormat.clone(vertexFormat, result._vertexFormat);\r\n\r\n        return result;\r\n    };\r\n\r\n    var min = new Cartesian3(-0.5, -0.5, 0.0);\r\n    var max = new Cartesian3( 0.5,  0.5, 0.0);\r\n\r\n    /**\r\n     * Computes the geometric representation of a plane, including its vertices, indices, and a bounding sphere.\r\n     *\r\n     * @param {PlaneGeometry} planeGeometry A description of the plane.\r\n     * @returns {Geometry|undefined} The computed vertices and indices.\r\n     */\r\n    PlaneGeometry.createGeometry = function(planeGeometry) {\r\n        var vertexFormat = planeGeometry._vertexFormat;\r\n\r\n        var attributes = new GeometryAttributes();\r\n        var indices;\r\n        var positions;\r\n\r\n        if (vertexFormat.position) {\r\n            // 4 corner points.  Duplicated 3 times each for each incident edge/face.\r\n            positions = new Float64Array(4 * 3);\r\n\r\n            // +z face\r\n            positions[0]  = min.x;\r\n            positions[1]  = min.y;\r\n            positions[2]  = 0.0;\r\n            positions[3]  = max.x;\r\n            positions[4]  = min.y;\r\n            positions[5]  = 0.0;\r\n            positions[6]  = max.x;\r\n            positions[7]  = max.y;\r\n            positions[8]  = 0.0;\r\n            positions[9]  = min.x;\r\n            positions[10] = max.y;\r\n            positions[11] = 0.0;\r\n\r\n            attributes.position = new GeometryAttribute({\r\n                componentDatatype : ComponentDatatype.DOUBLE,\r\n                componentsPerAttribute : 3,\r\n                values : positions\r\n            });\r\n\r\n            if (vertexFormat.normal) {\r\n                var normals = new Float32Array(4 * 3);\r\n\r\n                // +z face\r\n                normals[0]  = 0.0;\r\n                normals[1]  = 0.0;\r\n                normals[2]  = 1.0;\r\n                normals[3]  = 0.0;\r\n                normals[4]  = 0.0;\r\n                normals[5]  = 1.0;\r\n                normals[6]  = 0.0;\r\n                normals[7]  = 0.0;\r\n                normals[8]  = 1.0;\r\n                normals[9]  = 0.0;\r\n                normals[10] = 0.0;\r\n                normals[11] = 1.0;\r\n\r\n                attributes.normal = new GeometryAttribute({\r\n                    componentDatatype : ComponentDatatype.FLOAT,\r\n                    componentsPerAttribute : 3,\r\n                    values : normals\r\n                });\r\n            }\r\n\r\n            if (vertexFormat.st) {\r\n                var texCoords = new Float32Array(4 * 2);\r\n\r\n                // +z face\r\n                texCoords[0]  = 0.0;\r\n                texCoords[1]  = 0.0;\r\n                texCoords[2]  = 1.0;\r\n                texCoords[3]  = 0.0;\r\n                texCoords[4]  = 1.0;\r\n                texCoords[5]  = 1.0;\r\n                texCoords[6]  = 0.0;\r\n                texCoords[7]  = 1.0;\r\n\r\n                attributes.st = new GeometryAttribute({\r\n                    componentDatatype : ComponentDatatype.FLOAT,\r\n                    componentsPerAttribute : 2,\r\n                    values : texCoords\r\n                });\r\n            }\r\n\r\n            if (vertexFormat.tangent) {\r\n                var tangents = new Float32Array(4 * 3);\r\n\r\n                // +z face\r\n                tangents[0]  = 1.0;\r\n                tangents[1]  = 0.0;\r\n                tangents[2]  = 0.0;\r\n                tangents[3]  = 1.0;\r\n                tangents[4]  = 0.0;\r\n                tangents[5]  = 0.0;\r\n                tangents[6]  = 1.0;\r\n                tangents[7]  = 0.0;\r\n                tangents[8]  = 0.0;\r\n                tangents[9]  = 1.0;\r\n                tangents[10] = 0.0;\r\n                tangents[11] = 0.0;\r\n\r\n                attributes.tangent = new GeometryAttribute({\r\n                    componentDatatype : ComponentDatatype.FLOAT,\r\n                    componentsPerAttribute : 3,\r\n                    values : tangents\r\n                });\r\n            }\r\n\r\n            if (vertexFormat.bitangent) {\r\n                var bitangents = new Float32Array(4 * 3);\r\n\r\n                // +z face\r\n                bitangents[0] = 0.0;\r\n                bitangents[1] = 1.0;\r\n                bitangents[2] = 0.0;\r\n                bitangents[3] = 0.0;\r\n                bitangents[4] = 1.0;\r\n                bitangents[5] = 0.0;\r\n                bitangents[6] = 0.0;\r\n                bitangents[7] = 1.0;\r\n                bitangents[8] = 0.0;\r\n                bitangents[9] = 0.0;\r\n                bitangents[10] = 1.0;\r\n                bitangents[11] = 0.0;\r\n\r\n                attributes.bitangent = new GeometryAttribute({\r\n                    componentDatatype : ComponentDatatype.FLOAT,\r\n                    componentsPerAttribute : 3,\r\n                    values : bitangents\r\n                });\r\n            }\r\n\r\n            // 2 triangles\r\n            indices = new Uint16Array(2 * 3);\r\n\r\n            // +z face\r\n            indices[0] = 0;\r\n            indices[1] = 1;\r\n            indices[2] = 2;\r\n            indices[3] = 0;\r\n            indices[4] = 2;\r\n            indices[5] = 3;\r\n        }\r\n\r\n        return new Geometry({\r\n            attributes : attributes,\r\n            indices : indices,\r\n            primitiveType : PrimitiveType.TRIANGLES,\r\n            boundingSphere : new BoundingSphere(Cartesian3.ZERO, Math.sqrt(2.0))\r\n        });\r\n    };\r\nexport default PlaneGeometry;\r\n","import defined from '../Core/defined.js';\r\nimport PlaneGeometry from '../Core/PlaneGeometry.js';\r\n\r\n    function createPlaneGeometry(planeGeometry, offset) {\r\n        if (defined(offset)) {\r\n            planeGeometry = PlaneGeometry.unpack(planeGeometry, offset);\r\n        }\r\n        return PlaneGeometry.createGeometry(planeGeometry);\r\n    }\r\nexport default createPlaneGeometry;\r\n"],"names":["defaultValue","VertexFormat","Check","defined","Cartesian3","GeometryAttributes","GeometryAttribute","ComponentDatatype","Geometry","PrimitiveType","BoundingSphere"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAYI;IACJ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,aAAa,CAAC,OAAO,EAAE;IACpC,QAAQ,OAAO,GAAGA,yBAAY,CAAC,OAAO,EAAEA,yBAAY,CAAC,YAAY,CAAC,CAAC;;IAEnE,QAAQ,IAAI,YAAY,GAAGA,yBAAY,CAAC,OAAO,CAAC,YAAY,EAAEC,yBAAY,CAAC,OAAO,CAAC,CAAC;;IAEpF,QAAQ,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IAC1C,QAAQ,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC;IACjD,KAAK;;IAEL;IACA;IACA;IACA;IACA,IAAI,aAAa,CAAC,YAAY,GAAGA,yBAAY,CAAC,YAAY,CAAC;;IAE3D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,aAAa,CAAC,IAAI,GAAG,SAAS,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE;IAC/D;IACA,QAAQC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAQA,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACtC;;IAEA,QAAQ,aAAa,GAAGF,yBAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;;IAEvD,QAAQC,yBAAY,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;;IAErE,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK,CAAC;;IAEN,IAAI,IAAI,mBAAmB,GAAG,IAAIA,yBAAY,EAAE,CAAC;IACjD,IAAI,IAAI,cAAc,GAAG;IACzB,QAAQ,YAAY,EAAE,mBAAmB;IACzC,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,aAAa,CAAC,MAAM,GAAG,SAAS,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE;IAClE;IACA,QAAQC,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACtC;;IAEA,QAAQ,aAAa,GAAGF,yBAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;;IAEvD,QAAQ,IAAI,YAAY,GAAGC,yBAAY,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,mBAAmB,CAAC,CAAC;;IAE1F,QAAQ,IAAI,CAACE,eAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,YAAY,OAAO,IAAI,aAAa,CAAC,cAAc,CAAC,CAAC;IACrD,SAAS;;IAET,QAAQ,MAAM,CAAC,aAAa,GAAGF,yBAAY,CAAC,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC;;IAEtF,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN,IAAI,IAAI,GAAG,GAAG,IAAIG,qBAAU,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9C,IAAI,IAAI,GAAG,GAAG,IAAIA,qBAAU,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;;IAE9C;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,aAAa,CAAC,cAAc,GAAG,SAAS,aAAa,EAAE;IAC3D,QAAQ,IAAI,YAAY,GAAG,aAAa,CAAC,aAAa,CAAC;;IAEvD,QAAQ,IAAI,UAAU,GAAG,IAAIC,qCAAkB,EAAE,CAAC;IAClD,QAAQ,IAAI,OAAO,CAAC;IACpB,QAAQ,IAAI,SAAS,CAAC;;IAEtB,QAAQ,IAAI,YAAY,CAAC,QAAQ,EAAE;IACnC;IACA,YAAY,SAAS,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEhD;IACA,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAClC,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAClC,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAChC,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAClC,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAClC,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAChC,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAClC,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAClC,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAChC,YAAY,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAClC,YAAY,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAClC,YAAY,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAEhC,YAAY,UAAU,CAAC,QAAQ,GAAG,IAAIC,mCAAiB,CAAC;IACxD,gBAAgB,iBAAiB,GAAGC,mCAAiB,CAAC,MAAM;IAC5D,gBAAgB,sBAAsB,GAAG,CAAC;IAC1C,gBAAgB,MAAM,GAAG,SAAS;IAClC,aAAa,CAAC,CAAC;;IAEf,YAAY,IAAI,YAAY,CAAC,MAAM,EAAE;IACrC,gBAAgB,IAAI,OAAO,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEtD;IACA,gBAAgB,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAElC,gBAAgB,UAAU,CAAC,MAAM,GAAG,IAAID,mCAAiB,CAAC;IAC1D,oBAAoB,iBAAiB,GAAGC,mCAAiB,CAAC,KAAK;IAC/D,oBAAoB,sBAAsB,GAAG,CAAC;IAC9C,oBAAoB,MAAM,GAAG,OAAO;IACpC,iBAAiB,CAAC,CAAC;IACnB,aAAa;;IAEb,YAAY,IAAI,YAAY,CAAC,EAAE,EAAE;IACjC,gBAAgB,IAAI,SAAS,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAExD;IACA,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;;IAEpC,gBAAgB,UAAU,CAAC,EAAE,GAAG,IAAID,mCAAiB,CAAC;IACtD,oBAAoB,iBAAiB,GAAGC,mCAAiB,CAAC,KAAK;IAC/D,oBAAoB,sBAAsB,GAAG,CAAC;IAC9C,oBAAoB,MAAM,GAAG,SAAS;IACtC,iBAAiB,CAAC,CAAC;IACnB,aAAa;;IAEb,YAAY,IAAI,YAAY,CAAC,OAAO,EAAE;IACtC,gBAAgB,IAAI,QAAQ,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEvD;IACA,gBAAgB,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAEnC,gBAAgB,UAAU,CAAC,OAAO,GAAG,IAAID,mCAAiB,CAAC;IAC3D,oBAAoB,iBAAiB,GAAGC,mCAAiB,CAAC,KAAK;IAC/D,oBAAoB,sBAAsB,GAAG,CAAC;IAC9C,oBAAoB,MAAM,GAAG,QAAQ;IACrC,iBAAiB,CAAC,CAAC;IACnB,aAAa;;IAEb,YAAY,IAAI,YAAY,CAAC,SAAS,EAAE;IACxC,gBAAgB,IAAI,UAAU,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEzD;IACA,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAErC,gBAAgB,UAAU,CAAC,SAAS,GAAG,IAAID,mCAAiB,CAAC;IAC7D,oBAAoB,iBAAiB,GAAGC,mCAAiB,CAAC,KAAK;IAC/D,oBAAoB,sBAAsB,GAAG,CAAC;IAC9C,oBAAoB,MAAM,GAAG,UAAU;IACvC,iBAAiB,CAAC,CAAC;IACnB,aAAa;;IAEb;IACA,YAAY,OAAO,GAAG,IAAI,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAE7C;IACA,YAAY,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3B,YAAY,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3B,YAAY,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3B,YAAY,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3B,YAAY,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3B,YAAY,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3B,SAAS;;IAET,QAAQ,OAAO,IAAIC,0BAAQ,CAAC;IAC5B,YAAY,UAAU,GAAG,UAAU;IACnC,YAAY,OAAO,GAAG,OAAO;IAC7B,YAAY,aAAa,GAAGC,+BAAa,CAAC,SAAS;IACnD,YAAY,cAAc,GAAG,IAAIC,yBAAc,CAACN,qBAAU,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAChF,SAAS,CAAC,CAAC;IACX,KAAK,CAAC;;ICjPF,SAAS,mBAAmB,CAAC,aAAa,EAAE,MAAM,EAAE;IACxD,QAAQ,IAAID,eAAO,CAAC,MAAM,CAAC,EAAE;IAC7B,YAAY,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACxE,SAAS;IACT,QAAQ,OAAO,aAAa,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;IAC3D,KAAK;;;;;;;;"}