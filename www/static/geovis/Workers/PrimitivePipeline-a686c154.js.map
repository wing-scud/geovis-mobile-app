{"version":3,"file":"PrimitivePipeline-a686c154.js","sources":["../../../../Source/Core/OffsetGeometryInstanceAttribute.js","../../../../Source/Scene/PrimitivePipeline.js"],"sourcesContent":["import Check from './Check.js';\r\nimport ComponentDatatype from './ComponentDatatype.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\n\r\n    /**\r\n     * Value and type information for per-instance geometry attribute that determines the geometry instance offset\r\n     *\r\n     * @alias OffsetGeometryInstanceAttribute\r\n     * @constructor\r\n     *\r\n     * @param {Number} [x=0] The x translation\r\n     * @param {Number} [y=0] The y translation\r\n     * @param {Number} [z=0] The z translation\r\n     *\r\n     * @private\r\n     *\r\n     * @see GeometryInstance\r\n     * @see GeometryInstanceAttribute\r\n     */\r\n    function OffsetGeometryInstanceAttribute(x, y, z) {\r\n        x = defaultValue(x, 0);\r\n        y = defaultValue(y, 0);\r\n        z = defaultValue(z, 0);\r\n\r\n        /**\r\n         * The values for the attributes stored in a typed array.\r\n         *\r\n         * @type Float32Array\r\n         */\r\n        this.value = new Float32Array([x, y, z]);\r\n    }\r\n\r\n    Object.defineProperties(OffsetGeometryInstanceAttribute.prototype, {\r\n        /**\r\n         * The datatype of each component in the attribute, e.g., individual elements in\r\n         * {@link OffsetGeometryInstanceAttribute#value}.\r\n         *\r\n         * @memberof OffsetGeometryInstanceAttribute.prototype\r\n         *\r\n         * @type {ComponentDatatype}\r\n         * @readonly\r\n         *\r\n         * @default {@link ComponentDatatype.FLOAT}\r\n         */\r\n        componentDatatype : {\r\n            get : function() {\r\n                return ComponentDatatype.FLOAT;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * The number of components in the attributes, i.e., {@link OffsetGeometryInstanceAttribute#value}.\r\n         *\r\n         * @memberof OffsetGeometryInstanceAttribute.prototype\r\n         *\r\n         * @type {Number}\r\n         * @readonly\r\n         *\r\n         * @default 3\r\n         */\r\n        componentsPerAttribute : {\r\n            get : function() {\r\n                return 3;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * When <code>true</code> and <code>componentDatatype</code> is an integer format,\r\n         * indicate that the components should be mapped to the range [0, 1] (unsigned)\r\n         * or [-1, 1] (signed) when they are accessed as floating-point for rendering.\r\n         *\r\n         * @memberof OffsetGeometryInstanceAttribute.prototype\r\n         *\r\n         * @type {Boolean}\r\n         * @readonly\r\n         *\r\n         * @default false\r\n         */\r\n        normalize : {\r\n            get : function() {\r\n                return false;\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Creates a new {@link OffsetGeometryInstanceAttribute} instance given the provided an enabled flag and {@link DistanceDisplayCondition}.\r\n     *\r\n     * @param {Cartesian3} offset The cartesian offset\r\n     * @returns {OffsetGeometryInstanceAttribute} The new {@link OffsetGeometryInstanceAttribute} instance.\r\n     */\r\n    OffsetGeometryInstanceAttribute.fromCartesian3 = function(offset) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('offset', offset);\r\n        //>>includeEnd('debug');\r\n\r\n        return new OffsetGeometryInstanceAttribute(offset.x, offset.y, offset.z);\r\n    };\r\n\r\n    /**\r\n     * Converts a distance display condition to a typed array that can be used to assign a distance display condition attribute.\r\n     *\r\n     * @param {Cartesian3} offset The cartesian offset\r\n     * @param {Float32Array} [result] The array to store the result in, if undefined a new instance will be created.\r\n     * @returns {Float32Array} The modified result parameter or a new instance if result was undefined.\r\n     *\r\n     * @example\r\n     * var attributes = primitive.getGeometryInstanceAttributes('an id');\r\n     * attributes.modelMatrix = Cesium.OffsetGeometryInstanceAttribute.toValue(modelMatrix, attributes.modelMatrix);\r\n     */\r\n    OffsetGeometryInstanceAttribute.toValue = function(offset, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('offset', offset);\r\n        //>>includeEnd('debug');\r\n\r\n        if (!defined(result)) {\r\n            result = new Float32Array([offset.x, offset.y, offset.z]);\r\n        }\r\n\r\n        result[0] = offset.x;\r\n        result[1] = offset.y;\r\n        result[2] = offset.z;\r\n        return result;\r\n    };\r\nexport default OffsetGeometryInstanceAttribute;\r\n","import BoundingSphere from '../Core/BoundingSphere.js';\r\nimport ComponentDatatype from '../Core/ComponentDatatype.js';\r\nimport defaultValue from '../Core/defaultValue.js';\r\nimport defined from '../Core/defined.js';\r\nimport DeveloperError from '../Core/DeveloperError.js';\r\nimport Ellipsoid from '../Core/Ellipsoid.js';\r\nimport GeographicProjection from '../Core/GeographicProjection.js';\r\nimport Geometry from '../Core/Geometry.js';\r\nimport GeometryAttribute from '../Core/GeometryAttribute.js';\r\nimport GeometryAttributes from '../Core/GeometryAttributes.js';\r\nimport GeometryPipeline from '../Core/GeometryPipeline.js';\r\nimport IndexDatatype from '../Core/IndexDatatype.js';\r\nimport Matrix4 from '../Core/Matrix4.js';\r\nimport OffsetGeometryInstanceAttribute from '../Core/OffsetGeometryInstanceAttribute.js';\r\nimport WebMercatorProjection from '../Core/WebMercatorProjection.js';\r\n\r\n    function transformToWorldCoordinates(instances, primitiveModelMatrix, scene3DOnly) {\r\n        var toWorld = !scene3DOnly;\r\n        var length = instances.length;\r\n        var i;\r\n\r\n        if (!toWorld && (length > 1)) {\r\n            var modelMatrix = instances[0].modelMatrix;\r\n\r\n            for (i = 1; i < length; ++i) {\r\n                if (!Matrix4.equals(modelMatrix, instances[i].modelMatrix)) {\r\n                    toWorld = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (toWorld) {\r\n            for (i = 0; i < length; ++i) {\r\n                if (defined(instances[i].geometry)) {\r\n                    GeometryPipeline.transformToWorldCoordinates(instances[i]);\r\n                }\r\n            }\r\n        } else {\r\n            // Leave geometry in local coordinate system; auto update model-matrix.\r\n            Matrix4.multiplyTransformation(primitiveModelMatrix, instances[0].modelMatrix, primitiveModelMatrix);\r\n        }\r\n    }\r\n\r\n    function addGeometryBatchId(geometry, batchId) {\r\n        var attributes = geometry.attributes;\r\n        var positionAttr = attributes.position;\r\n        var numberOfComponents = positionAttr.values.length / positionAttr.componentsPerAttribute;\r\n\r\n        attributes.batchId = new GeometryAttribute({\r\n            componentDatatype : ComponentDatatype.FLOAT,\r\n            componentsPerAttribute : 1,\r\n            values : new Float32Array(numberOfComponents)\r\n        });\r\n\r\n        var values = attributes.batchId.values;\r\n        for (var j = 0; j < numberOfComponents; ++j) {\r\n            values[j] = batchId;\r\n        }\r\n    }\r\n\r\n    function addBatchIds(instances) {\r\n        var length = instances.length;\r\n\r\n        for (var i = 0; i < length; ++i) {\r\n            var instance = instances[i];\r\n            if (defined(instance.geometry)) {\r\n                addGeometryBatchId(instance.geometry, i);\r\n            } else if (defined(instance.westHemisphereGeometry) && defined(instance.eastHemisphereGeometry)) {\r\n                addGeometryBatchId(instance.westHemisphereGeometry, i);\r\n                addGeometryBatchId(instance.eastHemisphereGeometry, i);\r\n            }\r\n        }\r\n    }\r\n\r\n    function geometryPipeline(parameters) {\r\n        var instances = parameters.instances;\r\n        var projection = parameters.projection;\r\n        var uintIndexSupport = parameters.elementIndexUintSupported;\r\n        var scene3DOnly = parameters.scene3DOnly;\r\n        var vertexCacheOptimize = parameters.vertexCacheOptimize;\r\n        var compressVertices = parameters.compressVertices;\r\n        var modelMatrix = parameters.modelMatrix;\r\n\r\n        var i;\r\n        var geometry;\r\n        var primitiveType;\r\n        var length = instances.length;\r\n\r\n        for (i = 0; i < length; ++i) {\r\n            if (defined(instances[i].geometry)) {\r\n                primitiveType = instances[i].geometry.primitiveType;\r\n                break;\r\n            }\r\n        }\r\n\r\n        //>>includeStart('debug', pragmas.debug);\r\n        for (i = 1; i < length; ++i) {\r\n            if (defined(instances[i].geometry) && instances[i].geometry.primitiveType !== primitiveType) {\r\n                throw new DeveloperError('All instance geometries must have the same primitiveType.');\r\n            }\r\n        }\r\n        //>>includeEnd('debug');\r\n\r\n        // Unify to world coordinates before combining.\r\n        transformToWorldCoordinates(instances, modelMatrix, scene3DOnly);\r\n\r\n        // Clip to IDL\r\n        if (!scene3DOnly) {\r\n            for (i = 0; i < length; ++i) {\r\n                if (defined(instances[i].geometry)) {\r\n                    GeometryPipeline.splitLongitude(instances[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        addBatchIds(instances);\r\n\r\n        // Optimize for vertex shader caches\r\n        if (vertexCacheOptimize) {\r\n            for (i = 0; i < length; ++i) {\r\n                var instance = instances[i];\r\n                if (defined(instance.geometry)) {\r\n                    GeometryPipeline.reorderForPostVertexCache(instance.geometry);\r\n                    GeometryPipeline.reorderForPreVertexCache(instance.geometry);\r\n                } else if (defined(instance.westHemisphereGeometry) && defined(instance.eastHemisphereGeometry)) {\r\n                    GeometryPipeline.reorderForPostVertexCache(instance.westHemisphereGeometry);\r\n                    GeometryPipeline.reorderForPreVertexCache(instance.westHemisphereGeometry);\r\n\r\n                    GeometryPipeline.reorderForPostVertexCache(instance.eastHemisphereGeometry);\r\n                    GeometryPipeline.reorderForPreVertexCache(instance.eastHemisphereGeometry);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Combine into single geometry for better rendering performance.\r\n        var geometries = GeometryPipeline.combineInstances(instances);\r\n\r\n        length = geometries.length;\r\n        for (i = 0; i < length; ++i) {\r\n            geometry = geometries[i];\r\n\r\n            // Split positions for GPU RTE\r\n            var attributes = geometry.attributes;\r\n            var name;\r\n            if (!scene3DOnly) {\r\n                for (name in attributes) {\r\n                    if (attributes.hasOwnProperty(name) && attributes[name].componentDatatype === ComponentDatatype.DOUBLE) {\r\n                        var name3D = name + '3D';\r\n                        var name2D = name + '2D';\r\n\r\n                        // Compute 2D positions\r\n                        GeometryPipeline.projectTo2D(geometry, name, name3D, name2D, projection);\r\n                        if (defined(geometry.boundingSphere) && name === 'position') {\r\n                            geometry.boundingSphereCV = BoundingSphere.fromVertices(geometry.attributes.position2D.values);\r\n                        }\r\n\r\n                        GeometryPipeline.encodeAttribute(geometry, name3D, name3D + 'High', name3D + 'Low');\r\n                        GeometryPipeline.encodeAttribute(geometry, name2D, name2D + 'High', name2D + 'Low');\r\n                    }\r\n                }\r\n            } else {\r\n                for (name in attributes) {\r\n                    if (attributes.hasOwnProperty(name) && attributes[name].componentDatatype === ComponentDatatype.DOUBLE) {\r\n                        GeometryPipeline.encodeAttribute(geometry, name, name + '3DHigh', name + '3DLow');\r\n                    }\r\n                }\r\n            }\r\n\r\n            // oct encode and pack normals, compress texture coordinates\r\n            if (compressVertices) {\r\n                GeometryPipeline.compressVertices(geometry);\r\n            }\r\n        }\r\n\r\n        if (!uintIndexSupport) {\r\n            // Break into multiple geometries to fit within unsigned short indices if needed\r\n            var splitGeometries = [];\r\n            length = geometries.length;\r\n            for (i = 0; i < length; ++i) {\r\n                geometry = geometries[i];\r\n                splitGeometries = splitGeometries.concat(GeometryPipeline.fitToUnsignedShortIndices(geometry));\r\n            }\r\n\r\n            geometries = splitGeometries;\r\n        }\r\n\r\n        return geometries;\r\n    }\r\n\r\n    function createPickOffsets(instances, geometryName, geometries, pickOffsets) {\r\n        var offset;\r\n        var indexCount;\r\n        var geometryIndex;\r\n\r\n        var offsetIndex = pickOffsets.length - 1;\r\n        if (offsetIndex >= 0) {\r\n            var pickOffset = pickOffsets[offsetIndex];\r\n            offset = pickOffset.offset + pickOffset.count;\r\n            geometryIndex = pickOffset.index;\r\n            indexCount = geometries[geometryIndex].indices.length;\r\n        } else {\r\n            offset = 0;\r\n            geometryIndex = 0;\r\n            indexCount = geometries[geometryIndex].indices.length;\r\n        }\r\n\r\n        var length = instances.length;\r\n        for (var i = 0; i < length; ++i) {\r\n            var instance = instances[i];\r\n            var geometry = instance[geometryName];\r\n            if (!defined(geometry)) {\r\n                continue;\r\n            }\r\n\r\n            var count = geometry.indices.length;\r\n\r\n            if (offset + count > indexCount) {\r\n                offset = 0;\r\n                indexCount = geometries[++geometryIndex].indices.length;\r\n            }\r\n\r\n            pickOffsets.push({\r\n                index : geometryIndex,\r\n                offset : offset,\r\n                count : count\r\n            });\r\n            offset += count;\r\n        }\r\n    }\r\n\r\n    function createInstancePickOffsets(instances, geometries) {\r\n        var pickOffsets = [];\r\n        createPickOffsets(instances, 'geometry', geometries, pickOffsets);\r\n        createPickOffsets(instances, 'westHemisphereGeometry', geometries, pickOffsets);\r\n        createPickOffsets(instances, 'eastHemisphereGeometry', geometries, pickOffsets);\r\n        return pickOffsets;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    var PrimitivePipeline = {};\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    PrimitivePipeline.combineGeometry = function(parameters) {\r\n        var geometries;\r\n        var attributeLocations;\r\n        var instances = parameters.instances;\r\n        var length = instances.length;\r\n        var pickOffsets;\r\n\r\n        var offsetInstanceExtend;\r\n        var hasOffset = false;\r\n        if (length > 0) {\r\n            geometries = geometryPipeline(parameters);\r\n            if (geometries.length > 0) {\r\n                attributeLocations = GeometryPipeline.createAttributeLocations(geometries[0]);\r\n                if (parameters.createPickOffsets) {\r\n                    pickOffsets = createInstancePickOffsets(instances, geometries);\r\n                }\r\n            }\r\n            if (defined(instances[0].attributes) && defined(instances[0].attributes.offset)) {\r\n                offsetInstanceExtend = new Array(length);\r\n                hasOffset = true;\r\n            }\r\n        }\r\n\r\n        var boundingSpheres = new Array(length);\r\n        var boundingSpheresCV = new Array(length);\r\n        for (var i = 0; i < length; ++i) {\r\n            var instance = instances[i];\r\n            var geometry = instance.geometry;\r\n            if (defined(geometry)) {\r\n                boundingSpheres[i] = geometry.boundingSphere;\r\n                boundingSpheresCV[i] = geometry.boundingSphereCV;\r\n                if (hasOffset) {\r\n                    offsetInstanceExtend[i] = instance.geometry.offsetAttribute;\r\n                }\r\n            }\r\n\r\n            var eastHemisphereGeometry = instance.eastHemisphereGeometry;\r\n            var westHemisphereGeometry = instance.westHemisphereGeometry;\r\n            if (defined(eastHemisphereGeometry) && defined(westHemisphereGeometry)) {\r\n                if (defined(eastHemisphereGeometry.boundingSphere) && defined(westHemisphereGeometry.boundingSphere)) {\r\n                    boundingSpheres[i] = BoundingSphere.union(eastHemisphereGeometry.boundingSphere, westHemisphereGeometry.boundingSphere);\r\n                }\r\n                if (defined(eastHemisphereGeometry.boundingSphereCV) && defined(westHemisphereGeometry.boundingSphereCV)) {\r\n                    boundingSpheresCV[i] = BoundingSphere.union(eastHemisphereGeometry.boundingSphereCV, westHemisphereGeometry.boundingSphereCV);\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            geometries : geometries,\r\n            modelMatrix : parameters.modelMatrix,\r\n            attributeLocations : attributeLocations,\r\n            pickOffsets : pickOffsets,\r\n            offsetInstanceExtend : offsetInstanceExtend,\r\n            boundingSpheres : boundingSpheres,\r\n            boundingSpheresCV : boundingSpheresCV\r\n        };\r\n    };\r\n\r\n    function transferGeometry(geometry, transferableObjects) {\r\n        var attributes = geometry.attributes;\r\n        for (var name in attributes) {\r\n            if (attributes.hasOwnProperty(name)) {\r\n                var attribute = attributes[name];\r\n\r\n                if (defined(attribute) && defined(attribute.values)) {\r\n                    transferableObjects.push(attribute.values.buffer);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (defined(geometry.indices)) {\r\n            transferableObjects.push(geometry.indices.buffer);\r\n        }\r\n    }\r\n\r\n    function transferGeometries(geometries, transferableObjects) {\r\n        var length = geometries.length;\r\n        for (var i = 0; i < length; ++i) {\r\n            transferGeometry(geometries[i], transferableObjects);\r\n        }\r\n    }\r\n\r\n    // This function was created by simplifying packCreateGeometryResults into a count-only operation.\r\n    function countCreateGeometryResults(items) {\r\n        var count = 1;\r\n        var length = items.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var geometry = items[i];\r\n            ++count;\r\n\r\n            if (!defined(geometry)) {\r\n                continue;\r\n            }\r\n\r\n            var attributes = geometry.attributes;\r\n\r\n            count += 7 + 2 * BoundingSphere.packedLength + (defined(geometry.indices) ? geometry.indices.length : 0);\r\n\r\n            for (var property in attributes) {\r\n                if (attributes.hasOwnProperty(property) && defined(attributes[property])) {\r\n                    var attribute = attributes[property];\r\n                    count += 5 + attribute.values.length;\r\n                }\r\n            }\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    PrimitivePipeline.packCreateGeometryResults = function(items, transferableObjects) {\r\n        var packedData = new Float64Array(countCreateGeometryResults(items));\r\n        var stringTable = [];\r\n        var stringHash = {};\r\n\r\n        var length = items.length;\r\n        var count = 0;\r\n        packedData[count++] = length;\r\n        for (var i = 0; i < length; i++) {\r\n            var geometry = items[i];\r\n\r\n            var validGeometry = defined(geometry);\r\n            packedData[count++] = validGeometry ? 1.0 : 0.0;\r\n\r\n            if (!validGeometry) {\r\n                continue;\r\n            }\r\n\r\n            packedData[count++] = geometry.primitiveType;\r\n            packedData[count++] = geometry.geometryType;\r\n            packedData[count++] = defaultValue(geometry.offsetAttribute, -1);\r\n\r\n            var validBoundingSphere = defined(geometry.boundingSphere) ? 1.0 : 0.0;\r\n            packedData[count++] = validBoundingSphere;\r\n            if (validBoundingSphere) {\r\n                BoundingSphere.pack(geometry.boundingSphere, packedData, count);\r\n            }\r\n\r\n            count += BoundingSphere.packedLength;\r\n\r\n            var validBoundingSphereCV = defined(geometry.boundingSphereCV) ? 1.0 : 0.0;\r\n            packedData[count++] = validBoundingSphereCV;\r\n            if (validBoundingSphereCV) {\r\n                BoundingSphere.pack(geometry.boundingSphereCV, packedData, count);\r\n            }\r\n\r\n            count += BoundingSphere.packedLength;\r\n\r\n            var attributes = geometry.attributes;\r\n            var attributesToWrite = [];\r\n            for (var property in attributes) {\r\n                if (attributes.hasOwnProperty(property) && defined(attributes[property])) {\r\n                    attributesToWrite.push(property);\r\n                    if (!defined(stringHash[property])) {\r\n                        stringHash[property] = stringTable.length;\r\n                        stringTable.push(property);\r\n                    }\r\n                }\r\n            }\r\n\r\n            packedData[count++] = attributesToWrite.length;\r\n            for (var q = 0; q < attributesToWrite.length; q++) {\r\n                var name = attributesToWrite[q];\r\n                var attribute = attributes[name];\r\n                packedData[count++] = stringHash[name];\r\n                packedData[count++] = attribute.componentDatatype;\r\n                packedData[count++] = attribute.componentsPerAttribute;\r\n                packedData[count++] = attribute.normalize ? 1 : 0;\r\n                packedData[count++] = attribute.values.length;\r\n                packedData.set(attribute.values, count);\r\n                count += attribute.values.length;\r\n            }\r\n\r\n            var indicesLength = defined(geometry.indices) ? geometry.indices.length : 0;\r\n            packedData[count++] = indicesLength;\r\n\r\n            if (indicesLength > 0) {\r\n                packedData.set(geometry.indices, count);\r\n                count += indicesLength;\r\n            }\r\n        }\r\n\r\n        transferableObjects.push(packedData.buffer);\r\n\r\n        return {\r\n            stringTable : stringTable,\r\n            packedData : packedData\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    PrimitivePipeline.unpackCreateGeometryResults = function(createGeometryResult) {\r\n        var stringTable = createGeometryResult.stringTable;\r\n        var packedGeometry = createGeometryResult.packedData;\r\n\r\n        var i;\r\n        var result = new Array(packedGeometry[0]);\r\n        var resultIndex = 0;\r\n\r\n        var packedGeometryIndex = 1;\r\n        while (packedGeometryIndex < packedGeometry.length) {\r\n            var valid = packedGeometry[packedGeometryIndex++] === 1.0;\r\n            if (!valid) {\r\n                result[resultIndex++] = undefined;\r\n                continue;\r\n            }\r\n\r\n            var primitiveType = packedGeometry[packedGeometryIndex++];\r\n            var geometryType = packedGeometry[packedGeometryIndex++];\r\n            var offsetAttribute = packedGeometry[packedGeometryIndex++];\r\n            if (offsetAttribute === -1) {\r\n                offsetAttribute = undefined;\r\n            }\r\n\r\n            var boundingSphere;\r\n            var boundingSphereCV;\r\n\r\n            var validBoundingSphere = packedGeometry[packedGeometryIndex++] === 1.0;\r\n            if (validBoundingSphere) {\r\n                boundingSphere = BoundingSphere.unpack(packedGeometry, packedGeometryIndex);\r\n            }\r\n\r\n            packedGeometryIndex += BoundingSphere.packedLength;\r\n\r\n            var validBoundingSphereCV = packedGeometry[packedGeometryIndex++] === 1.0;\r\n            if (validBoundingSphereCV) {\r\n                boundingSphereCV = BoundingSphere.unpack(packedGeometry, packedGeometryIndex);\r\n            }\r\n\r\n            packedGeometryIndex += BoundingSphere.packedLength;\r\n\r\n            var length;\r\n            var values;\r\n            var componentsPerAttribute;\r\n            var attributes = new GeometryAttributes();\r\n            var numAttributes = packedGeometry[packedGeometryIndex++];\r\n            for (i = 0; i < numAttributes; i++) {\r\n                var name = stringTable[packedGeometry[packedGeometryIndex++]];\r\n                var componentDatatype = packedGeometry[packedGeometryIndex++];\r\n                componentsPerAttribute = packedGeometry[packedGeometryIndex++];\r\n                var normalize = packedGeometry[packedGeometryIndex++] !== 0;\r\n\r\n                length = packedGeometry[packedGeometryIndex++];\r\n                values = ComponentDatatype.createTypedArray(componentDatatype, length);\r\n                for (var valuesIndex = 0; valuesIndex < length; valuesIndex++) {\r\n                    values[valuesIndex] = packedGeometry[packedGeometryIndex++];\r\n                }\r\n\r\n                attributes[name] = new GeometryAttribute({\r\n                    componentDatatype : componentDatatype,\r\n                    componentsPerAttribute : componentsPerAttribute,\r\n                    normalize : normalize,\r\n                    values : values\r\n                });\r\n            }\r\n\r\n            var indices;\r\n            length = packedGeometry[packedGeometryIndex++];\r\n\r\n            if (length > 0) {\r\n                var numberOfVertices = values.length / componentsPerAttribute;\r\n                indices = IndexDatatype.createTypedArray(numberOfVertices, length);\r\n                for (i = 0; i < length; i++) {\r\n                    indices[i] = packedGeometry[packedGeometryIndex++];\r\n                }\r\n            }\r\n\r\n            result[resultIndex++] = new Geometry({\r\n                primitiveType : primitiveType,\r\n                geometryType : geometryType,\r\n                boundingSphere : boundingSphere,\r\n                boundingSphereCV : boundingSphereCV,\r\n                indices : indices,\r\n                attributes : attributes,\r\n                offsetAttribute: offsetAttribute\r\n            });\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    function packInstancesForCombine(instances, transferableObjects) {\r\n        var length = instances.length;\r\n        var packedData = new Float64Array(1 + (length * 19));\r\n        var count = 0;\r\n        packedData[count++] = length;\r\n        for (var i = 0; i < length; i++) {\r\n            var instance = instances[i];\r\n            Matrix4.pack(instance.modelMatrix, packedData, count);\r\n            count += Matrix4.packedLength;\r\n            if (defined(instance.attributes) && defined(instance.attributes.offset)) {\r\n                var values = instance.attributes.offset.value;\r\n                packedData[count] = values[0];\r\n                packedData[count + 1] = values[1];\r\n                packedData[count + 2] = values[2];\r\n            }\r\n            count += 3;\r\n        }\r\n        transferableObjects.push(packedData.buffer);\r\n\r\n        return packedData;\r\n    }\r\n\r\n    function unpackInstancesForCombine(data) {\r\n        var packedInstances = data;\r\n        var result = new Array(packedInstances[0]);\r\n        var count = 0;\r\n\r\n        var i = 1;\r\n        while (i < packedInstances.length) {\r\n            var modelMatrix = Matrix4.unpack(packedInstances, i);\r\n            var attributes;\r\n            i += Matrix4.packedLength;\r\n            if (defined(packedInstances[i])) {\r\n                attributes = {\r\n                    offset : new OffsetGeometryInstanceAttribute(packedInstances[i], packedInstances[i + 1], packedInstances[i + 2])\r\n                };\r\n            }\r\n            i += 3;\r\n\r\n            result[count++] = {\r\n                modelMatrix : modelMatrix,\r\n                attributes : attributes\r\n            };\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    PrimitivePipeline.packCombineGeometryParameters = function(parameters, transferableObjects) {\r\n        var createGeometryResults = parameters.createGeometryResults;\r\n        var length = createGeometryResults.length;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            transferableObjects.push(createGeometryResults[i].packedData.buffer);\r\n        }\r\n\r\n        return {\r\n            createGeometryResults : parameters.createGeometryResults,\r\n            packedInstances : packInstancesForCombine(parameters.instances, transferableObjects),\r\n            ellipsoid : parameters.ellipsoid,\r\n            isGeographic : parameters.projection instanceof GeographicProjection,\r\n            elementIndexUintSupported : parameters.elementIndexUintSupported,\r\n            scene3DOnly : parameters.scene3DOnly,\r\n            vertexCacheOptimize : parameters.vertexCacheOptimize,\r\n            compressVertices : parameters.compressVertices,\r\n            modelMatrix : parameters.modelMatrix,\r\n            createPickOffsets : parameters.createPickOffsets\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    PrimitivePipeline.unpackCombineGeometryParameters = function(packedParameters) {\r\n        var instances = unpackInstancesForCombine(packedParameters.packedInstances);\r\n        var createGeometryResults = packedParameters.createGeometryResults;\r\n        var length = createGeometryResults.length;\r\n        var instanceIndex = 0;\r\n\r\n        for (var resultIndex = 0; resultIndex < length; resultIndex++) {\r\n            var geometries = PrimitivePipeline.unpackCreateGeometryResults(createGeometryResults[resultIndex]);\r\n            var geometriesLength = geometries.length;\r\n            for (var geometryIndex = 0; geometryIndex < geometriesLength; geometryIndex++) {\r\n                var geometry = geometries[geometryIndex];\r\n                var instance = instances[instanceIndex];\r\n                instance.geometry = geometry;\r\n                ++instanceIndex;\r\n            }\r\n        }\r\n\r\n        var ellipsoid = Ellipsoid.clone(packedParameters.ellipsoid);\r\n        var projection = packedParameters.isGeographic ? new GeographicProjection(ellipsoid) : new WebMercatorProjection(ellipsoid);\r\n\r\n        return {\r\n            instances : instances,\r\n            ellipsoid : ellipsoid,\r\n            projection : projection,\r\n            elementIndexUintSupported : packedParameters.elementIndexUintSupported,\r\n            scene3DOnly : packedParameters.scene3DOnly,\r\n            vertexCacheOptimize : packedParameters.vertexCacheOptimize,\r\n            compressVertices : packedParameters.compressVertices,\r\n            modelMatrix : Matrix4.clone(packedParameters.modelMatrix),\r\n            createPickOffsets : packedParameters.createPickOffsets\r\n        };\r\n    };\r\n\r\n    function packBoundingSpheres(boundingSpheres) {\r\n        var length = boundingSpheres.length;\r\n        var bufferLength = 1 + (BoundingSphere.packedLength + 1) * length;\r\n        var buffer = new Float32Array(bufferLength);\r\n\r\n        var bufferIndex = 0;\r\n        buffer[bufferIndex++] = length;\r\n\r\n        for (var i = 0; i < length; ++i) {\r\n            var bs = boundingSpheres[i];\r\n            if (!defined(bs)) {\r\n                buffer[bufferIndex++] = 0.0;\r\n            } else {\r\n                buffer[bufferIndex++] = 1.0;\r\n                BoundingSphere.pack(boundingSpheres[i], buffer, bufferIndex);\r\n            }\r\n            bufferIndex += BoundingSphere.packedLength;\r\n        }\r\n\r\n        return buffer;\r\n    }\r\n\r\n    function unpackBoundingSpheres(buffer) {\r\n        var result = new Array(buffer[0]);\r\n        var count = 0;\r\n\r\n        var i = 1;\r\n        while (i < buffer.length) {\r\n            if (buffer[i++] === 1.0) {\r\n                result[count] = BoundingSphere.unpack(buffer, i);\r\n            }\r\n            ++count;\r\n            i += BoundingSphere.packedLength;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    PrimitivePipeline.packCombineGeometryResults = function(results, transferableObjects) {\r\n        if (defined(results.geometries)) {\r\n            transferGeometries(results.geometries, transferableObjects);\r\n        }\r\n\r\n        var packedBoundingSpheres = packBoundingSpheres(results.boundingSpheres);\r\n        var packedBoundingSpheresCV = packBoundingSpheres(results.boundingSpheresCV);\r\n        transferableObjects.push(packedBoundingSpheres.buffer, packedBoundingSpheresCV.buffer);\r\n\r\n        return {\r\n            geometries : results.geometries,\r\n            attributeLocations : results.attributeLocations,\r\n            modelMatrix : results.modelMatrix,\r\n            pickOffsets : results.pickOffsets,\r\n            offsetInstanceExtend: results.offsetInstanceExtend,\r\n            boundingSpheres : packedBoundingSpheres,\r\n            boundingSpheresCV : packedBoundingSpheresCV\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    PrimitivePipeline.unpackCombineGeometryResults = function(packedResult) {\r\n        return {\r\n            geometries : packedResult.geometries,\r\n            attributeLocations : packedResult.attributeLocations,\r\n            modelMatrix : packedResult.modelMatrix,\r\n            pickOffsets : packedResult.pickOffsets,\r\n            offsetInstanceExtend: packedResult.offsetInstanceExtend,\r\n            boundingSpheres : unpackBoundingSpheres(packedResult.boundingSpheres),\r\n            boundingSpheresCV : unpackBoundingSpheres(packedResult.boundingSpheresCV)\r\n        };\r\n    };\r\nexport default PrimitivePipeline;\r\n"],"names":["defaultValue","ComponentDatatype","Check","defined","Matrix4","GeometryPipeline","GeometryAttribute","DeveloperError","BoundingSphere","GeometryAttributes","IndexDatatype","Geometry","GeographicProjection","Ellipsoid","WebMercatorProjection"],"mappings":"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"}