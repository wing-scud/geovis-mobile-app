{"version":3,"file":"createVectorTilePoints.js","sources":["../../../../Source/WorkersES6/createVectorTilePoints.js"],"sourcesContent":["import AttributeCompression from '../Core/AttributeCompression.js';\r\nimport Cartesian3 from '../Core/Cartesian3.js';\r\nimport Cartographic from '../Core/Cartographic.js';\r\nimport Ellipsoid from '../Core/Ellipsoid.js';\r\nimport CesiumMath from '../Core/Math.js';\r\nimport Rectangle from '../Core/Rectangle.js';\r\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\r\n\r\n    var maxShort = 32767;\r\n\r\n    var scratchBVCartographic = new Cartographic();\r\n    var scratchEncodedPosition = new Cartesian3();\r\n\r\n    var scratchRectangle = new Rectangle();\r\n    var scratchEllipsoid = new Ellipsoid();\r\n    var scratchMinMaxHeights = {\r\n        min : undefined,\r\n        max : undefined\r\n    };\r\n\r\n    function unpackBuffer(packedBuffer) {\r\n        packedBuffer = new Float64Array(packedBuffer);\r\n\r\n        var offset = 0;\r\n        scratchMinMaxHeights.min = packedBuffer[offset++];\r\n        scratchMinMaxHeights.max = packedBuffer[offset++];\r\n\r\n        Rectangle.unpack(packedBuffer, offset, scratchRectangle);\r\n        offset += Rectangle.packedLength;\r\n\r\n        Ellipsoid.unpack(packedBuffer, offset, scratchEllipsoid);\r\n    }\r\n\r\n    function createVectorTilePoints(parameters, transferableObjects) {\r\n        var positions = new Uint16Array(parameters.positions);\r\n\r\n        unpackBuffer(parameters.packedBuffer);\r\n        var rectangle = scratchRectangle;\r\n        var ellipsoid = scratchEllipsoid;\r\n        var minimumHeight = scratchMinMaxHeights.min;\r\n        var maximumHeight = scratchMinMaxHeights.max;\r\n\r\n        var positionsLength = positions.length / 3;\r\n        var uBuffer = positions.subarray(0, positionsLength);\r\n        var vBuffer = positions.subarray(positionsLength, 2 * positionsLength);\r\n        var heightBuffer = positions.subarray(2 * positionsLength, 3 * positionsLength);\r\n        AttributeCompression.zigZagDeltaDecode(uBuffer, vBuffer, heightBuffer);\r\n\r\n        var decoded = new Float64Array(positions.length);\r\n        for (var i = 0; i < positionsLength; ++i) {\r\n            var u = uBuffer[i];\r\n            var v = vBuffer[i];\r\n            var h = heightBuffer[i];\r\n\r\n            var lon = CesiumMath.lerp(rectangle.west, rectangle.east, u / maxShort);\r\n            var lat = CesiumMath.lerp(rectangle.south, rectangle.north, v / maxShort);\r\n            var alt = CesiumMath.lerp(minimumHeight, maximumHeight, h / maxShort);\r\n\r\n            var cartographic = Cartographic.fromRadians(lon, lat, alt, scratchBVCartographic);\r\n            var decodedPosition = ellipsoid.cartographicToCartesian(cartographic, scratchEncodedPosition);\r\n            Cartesian3.pack(decodedPosition, decoded, i * 3);\r\n        }\r\n\r\n        transferableObjects.push(decoded.buffer);\r\n\r\n        return {\r\n            positions : decoded.buffer\r\n        };\r\n    }\r\nexport default createTaskProcessorWorker(createVectorTilePoints);\r\n"],"names":["Cartographic","Cartesian3","Rectangle","Ellipsoid","AttributeCompression","CesiumMath"],"mappings":"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"}