{"version":3,"file":"createFrustumOutlineGeometry.js","sources":["../../../../Source/Core/FrustumOutlineGeometry.js","../../../../Source/WorkersES6/createFrustumOutlineGeometry.js"],"sourcesContent":["import BoundingSphere from './BoundingSphere.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport ComponentDatatype from './ComponentDatatype.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport FrustumGeometry from './FrustumGeometry.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryAttribute from './GeometryAttribute.js';\r\nimport GeometryAttributes from './GeometryAttributes.js';\r\nimport OrthographicFrustum from './OrthographicFrustum.js';\r\nimport PerspectiveFrustum from './PerspectiveFrustum.js';\r\nimport PrimitiveType from './PrimitiveType.js';\r\nimport Quaternion from './Quaternion.js';\r\n\r\n    var PERSPECTIVE = 0;\r\n    var ORTHOGRAPHIC = 1;\r\n\r\n    /**\r\n     * A description of the outline of a frustum with the given the origin and orientation.\r\n     *\r\n     * @alias FrustumOutlineGeometry\r\n     * @constructor\r\n     *\r\n     * @param {Object} options Object with the following properties:\r\n     * @param {PerspectiveFrustum|OrthographicFrustum} options.frustum The frustum.\r\n     * @param {Cartesian3} options.origin The origin of the frustum.\r\n     * @param {Quaternion} options.orientation The orientation of the frustum.\r\n     */\r\n    function FrustumOutlineGeometry(options) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('options', options);\r\n        Check.typeOf.object('options.frustum', options.frustum);\r\n        Check.typeOf.object('options.origin', options.origin);\r\n        Check.typeOf.object('options.orientation', options.orientation);\r\n        //>>includeEnd('debug');\r\n\r\n        var frustum = options.frustum;\r\n        var orientation = options.orientation;\r\n        var origin = options.origin;\r\n\r\n        // This is private because it is used by DebugCameraPrimitive to draw a multi-frustum by\r\n        // creating multiple FrustumOutlineGeometrys. This way the near plane of one frustum doesn't overlap\r\n        // the far plane of another.\r\n        var drawNearPlane = defaultValue(options._drawNearPlane, true);\r\n\r\n        var frustumType;\r\n        var frustumPackedLength;\r\n        if (frustum instanceof PerspectiveFrustum) {\r\n            frustumType = PERSPECTIVE;\r\n            frustumPackedLength = PerspectiveFrustum.packedLength;\r\n        } else if (frustum instanceof OrthographicFrustum) {\r\n            frustumType = ORTHOGRAPHIC;\r\n            frustumPackedLength = OrthographicFrustum.packedLength;\r\n        }\r\n\r\n        this._frustumType = frustumType;\r\n        this._frustum = frustum.clone();\r\n        this._origin = Cartesian3.clone(origin);\r\n        this._orientation = Quaternion.clone(orientation);\r\n        this._drawNearPlane = drawNearPlane;\r\n        this._workerName = 'createFrustumOutlineGeometry';\r\n\r\n        /**\r\n         * The number of elements used to pack the object into an array.\r\n         * @type {Number}\r\n         */\r\n        this.packedLength = 2 + frustumPackedLength + Cartesian3.packedLength + Quaternion.packedLength;\r\n    }\r\n\r\n    /**\r\n     * Stores the provided instance into the provided array.\r\n     *\r\n     * @param {FrustumOutlineGeometry} value The value to pack.\r\n     * @param {Number[]} array The array to pack into.\r\n     * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n     *\r\n     * @returns {Number[]} The array that was packed into\r\n     */\r\n    FrustumOutlineGeometry.pack = function(value, array, startingIndex) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('value', value);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        startingIndex = defaultValue(startingIndex, 0);\r\n\r\n        var frustumType = value._frustumType;\r\n        var frustum = value._frustum;\r\n\r\n        array[startingIndex++] = frustumType;\r\n\r\n        if (frustumType === PERSPECTIVE) {\r\n            PerspectiveFrustum.pack(frustum, array, startingIndex);\r\n            startingIndex += PerspectiveFrustum.packedLength;\r\n        } else {\r\n            OrthographicFrustum.pack(frustum, array, startingIndex);\r\n            startingIndex += OrthographicFrustum.packedLength;\r\n        }\r\n\r\n        Cartesian3.pack(value._origin, array, startingIndex);\r\n        startingIndex += Cartesian3.packedLength;\r\n        Quaternion.pack(value._orientation, array, startingIndex);\r\n        startingIndex += Quaternion.packedLength;\r\n        array[startingIndex] = value._drawNearPlane ? 1.0 : 0.0;\r\n\r\n        return array;\r\n    };\r\n\r\n    var scratchPackPerspective = new PerspectiveFrustum();\r\n    var scratchPackOrthographic = new OrthographicFrustum();\r\n    var scratchPackQuaternion = new Quaternion();\r\n    var scratchPackorigin = new Cartesian3();\r\n\r\n    /**\r\n     * Retrieves an instance from a packed array.\r\n     *\r\n     * @param {Number[]} array The packed array.\r\n     * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n     * @param {FrustumOutlineGeometry} [result] The object into which to store the result.\r\n     */\r\n    FrustumOutlineGeometry.unpack = function(array, startingIndex, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        startingIndex = defaultValue(startingIndex, 0);\r\n\r\n        var frustumType = array[startingIndex++];\r\n\r\n        var frustum;\r\n        if (frustumType === PERSPECTIVE) {\r\n            frustum = PerspectiveFrustum.unpack(array, startingIndex, scratchPackPerspective);\r\n            startingIndex += PerspectiveFrustum.packedLength;\r\n        } else {\r\n            frustum = OrthographicFrustum.unpack(array, startingIndex, scratchPackOrthographic);\r\n            startingIndex += OrthographicFrustum.packedLength;\r\n        }\r\n\r\n        var origin = Cartesian3.unpack(array, startingIndex, scratchPackorigin);\r\n        startingIndex += Cartesian3.packedLength;\r\n        var orientation = Quaternion.unpack(array, startingIndex, scratchPackQuaternion);\r\n        startingIndex += Quaternion.packedLength;\r\n        var drawNearPlane = array[startingIndex] === 1.0;\r\n\r\n        if (!defined(result)) {\r\n            return new FrustumOutlineGeometry({\r\n                frustum : frustum,\r\n                origin : origin,\r\n                orientation : orientation,\r\n                _drawNearPlane : drawNearPlane\r\n            });\r\n        }\r\n\r\n        var frustumResult = frustumType === result._frustumType ? result._frustum : undefined;\r\n        result._frustum = frustum.clone(frustumResult);\r\n\r\n        result._frustumType = frustumType;\r\n        result._origin = Cartesian3.clone(origin, result._origin);\r\n        result._orientation = Quaternion.clone(orientation, result._orientation);\r\n        result._drawNearPlane = drawNearPlane;\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Computes the geometric representation of a frustum outline, including its vertices, indices, and a bounding sphere.\r\n     *\r\n     * @param {FrustumOutlineGeometry} frustumGeometry A description of the frustum.\r\n     * @returns {Geometry|undefined} The computed vertices and indices.\r\n     */\r\n    FrustumOutlineGeometry.createGeometry = function(frustumGeometry) {\r\n        var frustumType = frustumGeometry._frustumType;\r\n        var frustum = frustumGeometry._frustum;\r\n        var origin = frustumGeometry._origin;\r\n        var orientation = frustumGeometry._orientation;\r\n        var drawNearPlane = frustumGeometry._drawNearPlane;\r\n\r\n        var positions = new Float64Array(3 * 4 * 2);\r\n        FrustumGeometry._computeNearFarPlanes(origin, orientation, frustumType, frustum, positions);\r\n\r\n        var attributes = new GeometryAttributes({\r\n            position : new GeometryAttribute({\r\n                componentDatatype : ComponentDatatype.DOUBLE,\r\n                componentsPerAttribute : 3,\r\n                values : positions\r\n            })\r\n        });\r\n\r\n        var offset;\r\n        var index;\r\n\r\n        var numberOfPlanes = drawNearPlane ? 2 : 1;\r\n        var indices = new Uint16Array(8 * (numberOfPlanes + 1));\r\n\r\n        // Build the near/far planes\r\n        var i = drawNearPlane ? 0 : 1;\r\n        for (; i < 2; ++i) {\r\n            offset = drawNearPlane ? i * 8 : 0;\r\n            index = i * 4;\r\n\r\n            indices[offset] = index;\r\n            indices[offset + 1] = index + 1;\r\n            indices[offset + 2] = index + 1;\r\n            indices[offset + 3] = index + 2;\r\n            indices[offset + 4] = index + 2;\r\n            indices[offset + 5] = index + 3;\r\n            indices[offset + 6] = index + 3;\r\n            indices[offset + 7] = index;\r\n        }\r\n\r\n        // Build the sides of the frustums\r\n        for (i = 0; i < 2; ++i) {\r\n            offset = (numberOfPlanes + i) * 8;\r\n            index = i * 4;\r\n\r\n            indices[offset] = index;\r\n            indices[offset + 1] = index + 4;\r\n            indices[offset + 2] = index + 1;\r\n            indices[offset + 3] = index + 5;\r\n            indices[offset + 4] = index + 2;\r\n            indices[offset + 5] = index + 6;\r\n            indices[offset + 6] = index + 3;\r\n            indices[offset + 7] = index + 7;\r\n        }\r\n\r\n        return new Geometry({\r\n            attributes : attributes,\r\n            indices : indices,\r\n            primitiveType : PrimitiveType.LINES,\r\n            boundingSphere : BoundingSphere.fromVertices(positions)\r\n        });\r\n    };\r\nexport default FrustumOutlineGeometry;\r\n","import defined from '../Core/defined.js';\r\nimport FrustumOutlineGeometry from '../Core/FrustumOutlineGeometry.js';\r\n\r\n    function createFrustumOutlineGeometry(frustumGeometry, offset) {\r\n        if (defined(offset)) {\r\n            frustumGeometry = FrustumOutlineGeometry.unpack(frustumGeometry, offset);\r\n        }\r\n        return FrustumOutlineGeometry.createGeometry(frustumGeometry);\r\n    }\r\nexport default createFrustumOutlineGeometry;\r\n"],"names":["Check","defaultValue","PerspectiveFrustum","OrthographicFrustum","Cartesian3","Quaternion","defined","FrustumGeometry","GeometryAttributes","GeometryAttribute","ComponentDatatype","Geometry","PrimitiveType","BoundingSphere"],"mappings":"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"}