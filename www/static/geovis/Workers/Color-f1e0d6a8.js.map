{"version":3,"file":"Color-f1e0d6a8.js","sources":["../../../../Source/Core/Color.js"],"sourcesContent":["import Check from './Check.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport FeatureDetection from './FeatureDetection.js';\r\nimport CesiumMath from './Math.js';\r\n\r\n    function hue2rgb(m1, m2, h) {\r\n        if (h < 0) {\r\n            h += 1;\r\n        }\r\n        if (h > 1) {\r\n            h -= 1;\r\n        }\r\n        if (h * 6 < 1) {\r\n            return m1 + (m2 - m1) * 6 * h;\r\n        }\r\n        if (h * 2 < 1) {\r\n            return m2;\r\n        }\r\n        if (h * 3 < 2) {\r\n            return m1 + (m2 - m1) * (2 / 3 - h) * 6;\r\n        }\r\n        return m1;\r\n    }\r\n\r\n    /**\r\n     * A color, specified using red, green, blue, and alpha values,\r\n     * which range from <code>0</code> (no intensity) to <code>1.0</code> (full intensity).\r\n     * @param {Number} [red=1.0] The red component.\r\n     * @param {Number} [green=1.0] The green component.\r\n     * @param {Number} [blue=1.0] The blue component.\r\n     * @param {Number} [alpha=1.0] The alpha component.\r\n     *\r\n     * @constructor\r\n     * @alias Color\r\n     *\r\n     * @see Packable\r\n     */\r\n    function Color(red, green, blue, alpha) {\r\n        /**\r\n         * The red component.\r\n         * @type {Number}\r\n         * @default 1.0\r\n         */\r\n        this.red = defaultValue(red, 1.0);\r\n        /**\r\n         * The green component.\r\n         * @type {Number}\r\n         * @default 1.0\r\n         */\r\n        this.green = defaultValue(green, 1.0);\r\n        /**\r\n         * The blue component.\r\n         * @type {Number}\r\n         * @default 1.0\r\n         */\r\n        this.blue = defaultValue(blue, 1.0);\r\n        /**\r\n         * The alpha component.\r\n         * @type {Number}\r\n         * @default 1.0\r\n         */\r\n        this.alpha = defaultValue(alpha, 1.0);\r\n    }\r\n\r\n    /**\r\n     * Creates a Color instance from a {@link Cartesian4}. <code>x</code>, <code>y</code>, <code>z</code>,\r\n     * and <code>w</code> map to <code>red</code>, <code>green</code>, <code>blue</code>, and <code>alpha</code>, respectively.\r\n     *\r\n     * @param {Cartesian4} cartesian The source cartesian.\r\n     * @param {Color} [result] The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter or a new Color instance if one was not provided.\r\n     */\r\n    Color.fromCartesian4 = function(cartesian, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('cartesian', cartesian);\r\n        //>>includeEnd('debug');\r\n\r\n        if (!defined(result)) {\r\n            return new Color(cartesian.x, cartesian.y, cartesian.z, cartesian.w);\r\n        }\r\n\r\n        result.red = cartesian.x;\r\n        result.green = cartesian.y;\r\n        result.blue = cartesian.z;\r\n        result.alpha = cartesian.w;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Creates a new Color specified using red, green, blue, and alpha values\r\n     * that are in the range of 0 to 255, converting them internally to a range of 0.0 to 1.0.\r\n     *\r\n     * @param {Number} [red=255] The red component.\r\n     * @param {Number} [green=255] The green component.\r\n     * @param {Number} [blue=255] The blue component.\r\n     * @param {Number} [alpha=255] The alpha component.\r\n     * @param {Color} [result] The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter or a new Color instance if one was not provided.\r\n     */\r\n    Color.fromBytes = function(red, green, blue, alpha, result) {\r\n        red = Color.byteToFloat(defaultValue(red, 255.0));\r\n        green = Color.byteToFloat(defaultValue(green, 255.0));\r\n        blue = Color.byteToFloat(defaultValue(blue, 255.0));\r\n        alpha = Color.byteToFloat(defaultValue(alpha, 255.0));\r\n\r\n        if (!defined(result)) {\r\n            return new Color(red, green, blue, alpha);\r\n        }\r\n\r\n        result.red = red;\r\n        result.green = green;\r\n        result.blue = blue;\r\n        result.alpha = alpha;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Creates a new Color that has the same red, green, and blue components\r\n     * of the specified color, but with the specified alpha value.\r\n     *\r\n     * @param {Color} color The base color\r\n     * @param {Number} alpha The new alpha component.\r\n     * @param {Color} [result] The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter or a new Color instance if one was not provided.\r\n     *\r\n     * @example var translucentRed = Cesium.Color.fromAlpha(Cesium.Color.RED, 0.9);\r\n     */\r\n    Color.fromAlpha = function(color, alpha, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('color', color);\r\n        Check.typeOf.number('alpha', alpha);\r\n        //>>includeEnd('debug');\r\n\r\n        if (!defined(result)) {\r\n            return new Color(color.red, color.green, color.blue, alpha);\r\n        }\r\n\r\n        result.red = color.red;\r\n        result.green = color.green;\r\n        result.blue = color.blue;\r\n        result.alpha = alpha;\r\n        return result;\r\n    };\r\n\r\n    var scratchArrayBuffer;\r\n    var scratchUint32Array;\r\n    var scratchUint8Array;\r\n    if (FeatureDetection.supportsTypedArrays()) {\r\n        scratchArrayBuffer = new ArrayBuffer(4);\r\n        scratchUint32Array = new Uint32Array(scratchArrayBuffer);\r\n        scratchUint8Array = new Uint8Array(scratchArrayBuffer);\r\n    }\r\n\r\n    /**\r\n     * Creates a new Color from a single numeric unsigned 32-bit RGBA value, using the endianness\r\n     * of the system.\r\n     *\r\n     * @param {Number} rgba A single numeric unsigned 32-bit RGBA value.\r\n     * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\r\n     * @returns {Color} The color object.\r\n     *\r\n     * @example\r\n     * var color = Cesium.Color.fromRgba(0x67ADDFFF);\r\n     *\r\n     * @see Color#toRgba\r\n     */\r\n    Color.fromRgba = function(rgba, result) {\r\n        // scratchUint32Array and scratchUint8Array share an underlying array buffer\r\n        scratchUint32Array[0] = rgba;\r\n        return Color.fromBytes(scratchUint8Array[0], scratchUint8Array[1], scratchUint8Array[2], scratchUint8Array[3], result);\r\n    };\r\n\r\n    /**\r\n     * Creates a Color instance from hue, saturation, and lightness.\r\n     *\r\n     * @param {Number} [hue=0] The hue angle 0...1\r\n     * @param {Number} [saturation=0] The saturation value 0...1\r\n     * @param {Number} [lightness=0] The lightness value 0...1\r\n     * @param {Number} [alpha=1.0] The alpha component 0...1\r\n     * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\r\n     * @returns {Color} The color object.\r\n     *\r\n     * @see {@link http://www.w3.org/TR/css3-color/#hsl-color|CSS color values}\r\n     */\r\n    Color.fromHsl = function(hue, saturation, lightness, alpha, result) {\r\n        hue = defaultValue(hue, 0.0) % 1.0;\r\n        saturation = defaultValue(saturation, 0.0);\r\n        lightness = defaultValue(lightness, 0.0);\r\n        alpha = defaultValue(alpha, 1.0);\r\n\r\n        var red = lightness;\r\n        var green = lightness;\r\n        var blue = lightness;\r\n\r\n        if (saturation !== 0) {\r\n            var m2;\r\n            if (lightness < 0.5) {\r\n                m2 = lightness * (1 + saturation);\r\n            } else {\r\n                m2 = lightness + saturation - lightness * saturation;\r\n            }\r\n\r\n            var m1 = 2.0 * lightness - m2;\r\n            red = hue2rgb(m1, m2, hue + 1 / 3);\r\n            green = hue2rgb(m1, m2, hue);\r\n            blue = hue2rgb(m1, m2, hue - 1 / 3);\r\n        }\r\n\r\n        if (!defined(result)) {\r\n            return new Color(red, green, blue, alpha);\r\n        }\r\n\r\n        result.red = red;\r\n        result.green = green;\r\n        result.blue = blue;\r\n        result.alpha = alpha;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Creates a random color using the provided options. For reproducible random colors, you should\r\n     * call {@link CesiumMath#setRandomNumberSeed} once at the beginning of your application.\r\n     *\r\n     * @param {Object} [options] Object with the following properties:\r\n     * @param {Number} [options.red] If specified, the red component to use instead of a randomized value.\r\n     * @param {Number} [options.minimumRed=0.0] The maximum red value to generate if none was specified.\r\n     * @param {Number} [options.maximumRed=1.0] The minimum red value to generate if none was specified.\r\n     * @param {Number} [options.green] If specified, the green component to use instead of a randomized value.\r\n     * @param {Number} [options.minimumGreen=0.0] The maximum green value to generate if none was specified.\r\n     * @param {Number} [options.maximumGreen=1.0] The minimum green value to generate if none was specified.\r\n     * @param {Number} [options.blue] If specified, the blue component to use instead of a randomized value.\r\n     * @param {Number} [options.minimumBlue=0.0] The maximum blue value to generate if none was specified.\r\n     * @param {Number} [options.maximumBlue=1.0] The minimum blue value to generate if none was specified.\r\n     * @param {Number} [options.alpha] If specified, the alpha component to use instead of a randomized value.\r\n     * @param {Number} [options.minimumAlpha=0.0] The maximum alpha value to generate if none was specified.\r\n     * @param {Number} [options.maximumAlpha=1.0] The minimum alpha value to generate if none was specified.\r\n     * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\r\n     * @returns {Color} The modified result parameter or a new instance if result was undefined.\r\n     *\r\n     * @exception {DeveloperError} minimumRed must be less than or equal to maximumRed.\r\n     * @exception {DeveloperError} minimumGreen must be less than or equal to maximumGreen.\r\n     * @exception {DeveloperError} minimumBlue must be less than or equal to maximumBlue.\r\n     * @exception {DeveloperError} minimumAlpha must be less than or equal to maximumAlpha.\r\n     *\r\n     * @example\r\n     * //Create a completely random color\r\n     * var color = Cesium.Color.fromRandom();\r\n     *\r\n     * //Create a random shade of yellow.\r\n     * var color = Cesium.Color.fromRandom({\r\n     *     red : 1.0,\r\n     *     green : 1.0,\r\n     *     alpha : 1.0\r\n     * });\r\n     *\r\n     * //Create a random bright color.\r\n     * var color = Cesium.Color.fromRandom({\r\n     *     minimumRed : 0.75,\r\n     *     minimumGreen : 0.75,\r\n     *     minimumBlue : 0.75,\r\n     *     alpha : 1.0\r\n     * });\r\n     */\r\n    Color.fromRandom = function(options, result) {\r\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n        var red = options.red;\r\n        if (!defined(red)) {\r\n            var minimumRed = defaultValue(options.minimumRed, 0);\r\n            var maximumRed = defaultValue(options.maximumRed, 1.0);\r\n\r\n            //>>includeStart('debug', pragmas.debug);\r\n            Check.typeOf.number.lessThanOrEquals('minimumRed', minimumRed, maximumRed);\r\n            //>>includeEnd('debug');\r\n\r\n            red = minimumRed + (CesiumMath.nextRandomNumber() * (maximumRed - minimumRed));\r\n        }\r\n\r\n        var green = options.green;\r\n        if (!defined(green)) {\r\n            var minimumGreen = defaultValue(options.minimumGreen, 0);\r\n            var maximumGreen = defaultValue(options.maximumGreen, 1.0);\r\n\r\n            //>>includeStart('debug', pragmas.debug);\r\n            Check.typeOf.number.lessThanOrEquals('minimumGreen', minimumGreen, maximumGreen);\r\n            //>>includeEnd('debug');\r\n            green = minimumGreen + (CesiumMath.nextRandomNumber() * (maximumGreen - minimumGreen));\r\n        }\r\n\r\n        var blue = options.blue;\r\n        if (!defined(blue)) {\r\n            var minimumBlue = defaultValue(options.minimumBlue, 0);\r\n            var maximumBlue = defaultValue(options.maximumBlue, 1.0);\r\n\r\n            //>>includeStart('debug', pragmas.debug);\r\n            Check.typeOf.number.lessThanOrEquals('minimumBlue', minimumBlue, maximumBlue);\r\n            //>>includeEnd('debug');\r\n\r\n            blue = minimumBlue + (CesiumMath.nextRandomNumber() * (maximumBlue - minimumBlue));\r\n        }\r\n\r\n        var alpha = options.alpha;\r\n        if (!defined(alpha)) {\r\n            var minimumAlpha = defaultValue(options.minimumAlpha, 0);\r\n            var maximumAlpha = defaultValue(options.maximumAlpha, 1.0);\r\n\r\n            //>>includeStart('debug', pragmas.debug);\r\n            Check.typeOf.number.lessThanOrEquals('minumumAlpha', minimumAlpha, maximumAlpha);\r\n            //>>includeEnd('debug');\r\n\r\n            alpha = minimumAlpha + (CesiumMath.nextRandomNumber() * (maximumAlpha - minimumAlpha));\r\n        }\r\n\r\n        if (!defined(result)) {\r\n            return new Color(red, green, blue, alpha);\r\n        }\r\n\r\n        result.red = red;\r\n        result.green = green;\r\n        result.blue = blue;\r\n        result.alpha = alpha;\r\n        return result;\r\n    };\r\n\r\n    //#rgb\r\n    var rgbMatcher = /^#([0-9a-f])([0-9a-f])([0-9a-f])$/i;\r\n    //#rrggbb\r\n    var rrggbbMatcher = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i;\r\n    //rgb(), rgba(), or rgb%()\r\n    var rgbParenthesesMatcher = /^rgba?\\(\\s*([0-9.]+%?)\\s*,\\s*([0-9.]+%?)\\s*,\\s*([0-9.]+%?)(?:\\s*,\\s*([0-9.]+))?\\s*\\)$/i;\r\n    //hsl(), hsla(), or hsl%()\r\n    var hslParenthesesMatcher = /^hsla?\\(\\s*([0-9.]+)\\s*,\\s*([0-9.]+%)\\s*,\\s*([0-9.]+%)(?:\\s*,\\s*([0-9.]+))?\\s*\\)$/i;\r\n\r\n    /**\r\n     * Creates a Color instance from a CSS color value.\r\n     *\r\n     * @param {String} color The CSS color value in #rgb, #rrggbb, rgb(), rgba(), hsl(), or hsla() format.\r\n     * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\r\n     * @returns {Color} The color object, or undefined if the string was not a valid CSS color.\r\n     *\r\n     *\r\n     * @example\r\n     * var cesiumBlue = Cesium.Color.fromCssColorString('#67ADDF');\r\n     * var green = Cesium.Color.fromCssColorString('green');\r\n     *\r\n     * @see {@link http://www.w3.org/TR/css3-color|CSS color values}\r\n     */\r\n    Color.fromCssColorString = function(color, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.string('color', color);\r\n        //>>includeEnd('debug');\r\n\r\n        if (!defined(result)) {\r\n            result = new Color();\r\n        }\r\n\r\n        var namedColor = Color[color.toUpperCase()];\r\n        if (defined(namedColor)) {\r\n            Color.clone(namedColor, result);\r\n            return result;\r\n        }\r\n\r\n        var matches = rgbMatcher.exec(color);\r\n        if (matches !== null) {\r\n            result.red = parseInt(matches[1], 16) / 15;\r\n            result.green = parseInt(matches[2], 16) / 15.0;\r\n            result.blue = parseInt(matches[3], 16) / 15.0;\r\n            result.alpha = 1.0;\r\n            return result;\r\n        }\r\n\r\n        matches = rrggbbMatcher.exec(color);\r\n        if (matches !== null) {\r\n            result.red = parseInt(matches[1], 16) / 255.0;\r\n            result.green = parseInt(matches[2], 16) / 255.0;\r\n            result.blue = parseInt(matches[3], 16) / 255.0;\r\n            result.alpha = 1.0;\r\n            return result;\r\n        }\r\n\r\n        matches = rgbParenthesesMatcher.exec(color);\r\n        if (matches !== null) {\r\n            result.red = parseFloat(matches[1]) / ('%' === matches[1].substr(-1) ? 100.0 : 255.0);\r\n            result.green = parseFloat(matches[2]) / ('%' === matches[2].substr(-1) ? 100.0 : 255.0);\r\n            result.blue = parseFloat(matches[3]) / ('%' === matches[3].substr(-1) ? 100.0 : 255.0);\r\n            result.alpha = parseFloat(defaultValue(matches[4], '1.0'));\r\n            return result;\r\n        }\r\n\r\n        matches = hslParenthesesMatcher.exec(color);\r\n        if (matches !== null) {\r\n            return Color.fromHsl(parseFloat(matches[1]) / 360.0,\r\n                                 parseFloat(matches[2]) / 100.0,\r\n                                 parseFloat(matches[3]) / 100.0,\r\n                                 parseFloat(defaultValue(matches[4], '1.0')), result);\r\n        }\r\n\r\n        result = undefined;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Creates a Color instance from a CSS color value.\r\n     *\r\n     * @param {String} color The CSS color value in #rgb, #rrggbb, rgb(), rgba(), hsl(), or hsla() format.\r\n     * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\r\n     * @returns {Color} The color object, or undefined if the string was not a valid CSS color.\r\n     *\r\n     *\r\n     * @example\r\n     * var cesiumBlue = Cesium.Color.fromCssColorString('#67ADDF');\r\n     * var green = Cesium.Color.fromCssColorString('green');\r\n     *\r\n     * @see {@link http://www.w3.org/TR/css3-color|CSS color values}\r\n     */\r\n    Color.fromCssString = Color.fromCssColorString;\r\n\r\n    /**\r\n     * The number of elements used to pack the object into an array.\r\n     * @type {Number}\r\n     */\r\n    Color.packedLength = 4;\r\n\r\n    /**\r\n     * Stores the provided instance into the provided array.\r\n     *\r\n     * @param {Color} value The value to pack.\r\n     * @param {Number[]} array The array to pack into.\r\n     * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n     *\r\n     * @returns {Number[]} The array that was packed into\r\n     */\r\n    Color.pack = function(value, array, startingIndex) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('value', value);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        startingIndex = defaultValue(startingIndex, 0);\r\n        array[startingIndex++] = value.red;\r\n        array[startingIndex++] = value.green;\r\n        array[startingIndex++] = value.blue;\r\n        array[startingIndex] = value.alpha;\r\n\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Retrieves an instance from a packed array.\r\n     *\r\n     * @param {Number[]} array The packed array.\r\n     * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n     * @param {Color} [result] The object into which to store the result.\r\n     * @returns {Color} The modified result parameter or a new Color instance if one was not provided.\r\n     */\r\n    Color.unpack = function(array, startingIndex, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        startingIndex = defaultValue(startingIndex, 0);\r\n        if (!defined(result)) {\r\n            result = new Color();\r\n        }\r\n        result.red = array[startingIndex++];\r\n        result.green = array[startingIndex++];\r\n        result.blue = array[startingIndex++];\r\n        result.alpha = array[startingIndex];\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Converts a 'byte' color component in the range of 0 to 255 into\r\n     * a 'float' color component in the range of 0 to 1.0.\r\n     *\r\n     * @param {Number} number The number to be converted.\r\n     * @returns {Number} The converted number.\r\n     */\r\n    Color.byteToFloat = function(number) {\r\n        return number / 255.0;\r\n    };\r\n\r\n    /**\r\n     * Converts a 'float' color component in the range of 0 to 1.0 into\r\n     * a 'byte' color component in the range of 0 to 255.\r\n     *\r\n     * @param {Number} number The number to be converted.\r\n     * @returns {Number} The converted number.\r\n     */\r\n    Color.floatToByte = function(number) {\r\n        return number === 1.0 ? 255.0 : (number * 256.0) | 0;\r\n    };\r\n\r\n    /**\r\n     * Duplicates a Color.\r\n     *\r\n     * @param {Color} color The Color to duplicate.\r\n     * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\r\n     * @returns {Color} The modified result parameter or a new instance if result was undefined. (Returns undefined if color is undefined)\r\n     */\r\n    Color.clone = function(color, result) {\r\n        if (!defined(color)) {\r\n            return undefined;\r\n        }\r\n        if (!defined(result)) {\r\n            return new Color(color.red, color.green, color.blue, color.alpha);\r\n        }\r\n        result.red = color.red;\r\n        result.green = color.green;\r\n        result.blue = color.blue;\r\n        result.alpha = color.alpha;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Returns true if the first Color equals the second color.\r\n     *\r\n     * @param {Color} left The first Color to compare for equality.\r\n     * @param {Color} right The second Color to compare for equality.\r\n     * @returns {Boolean} <code>true</code> if the Colors are equal; otherwise, <code>false</code>.\r\n     */\r\n    Color.equals = function(left, right) {\r\n        return (left === right) || //\r\n               (defined(left) && //\r\n                defined(right) && //\r\n                left.red === right.red && //\r\n                left.green === right.green && //\r\n                left.blue === right.blue && //\r\n                left.alpha === right.alpha);\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    Color.equalsArray = function(color, array, offset) {\r\n        return color.red === array[offset] &&\r\n               color.green === array[offset + 1] &&\r\n               color.blue === array[offset + 2] &&\r\n               color.alpha === array[offset + 3];\r\n    };\r\n\r\n    /**\r\n     * Returns a duplicate of a Color instance.\r\n     *\r\n     * @param {Color} [result] The object to store the result in, if undefined a new instance will be created.\r\n     * @returns {Color} The modified result parameter or a new instance if result was undefined.\r\n     */\r\n    Color.prototype.clone = function(result) {\r\n        return Color.clone(this, result);\r\n    };\r\n\r\n    /**\r\n     * Returns true if this Color equals other.\r\n     *\r\n     * @param {Color} other The Color to compare for equality.\r\n     * @returns {Boolean} <code>true</code> if the Colors are equal; otherwise, <code>false</code>.\r\n     */\r\n    Color.prototype.equals = function(other) {\r\n        return Color.equals(this, other);\r\n    };\r\n\r\n    /**\r\n     * Returns <code>true</code> if this Color equals other componentwise within the specified epsilon.\r\n     *\r\n     * @param {Color} other The Color to compare for equality.\r\n     * @param {Number} [epsilon=0.0] The epsilon to use for equality testing.\r\n     * @returns {Boolean} <code>true</code> if the Colors are equal within the specified epsilon; otherwise, <code>false</code>.\r\n     */\r\n    Color.prototype.equalsEpsilon = function(other, epsilon) {\r\n        return (this === other) || //\r\n               ((defined(other)) && //\r\n                (Math.abs(this.red - other.red) <= epsilon) && //\r\n                (Math.abs(this.green - other.green) <= epsilon) && //\r\n                (Math.abs(this.blue - other.blue) <= epsilon) && //\r\n                (Math.abs(this.alpha - other.alpha) <= epsilon));\r\n    };\r\n\r\n    /**\r\n     * Creates a string representing this Color in the format '(red, green, blue, alpha)'.\r\n     *\r\n     * @returns {String} A string representing this Color in the format '(red, green, blue, alpha)'.\r\n     */\r\n    Color.prototype.toString = function() {\r\n        return '(' + this.red + ', ' + this.green + ', ' + this.blue + ', ' + this.alpha + ')';\r\n    };\r\n\r\n    /**\r\n     * Creates a string containing the CSS color value for this color.\r\n     *\r\n     * @returns {String} The CSS equivalent of this color.\r\n     *\r\n     * @see {@link http://www.w3.org/TR/css3-color/#rgba-color|CSS RGB or RGBA color values}\r\n     */\r\n    Color.prototype.toCssColorString = function() {\r\n        var red = Color.floatToByte(this.red);\r\n        var green = Color.floatToByte(this.green);\r\n        var blue = Color.floatToByte(this.blue);\r\n        if (this.alpha === 1) {\r\n            return 'rgb(' + red + ',' + green + ',' + blue + ')';\r\n        }\r\n        return 'rgba(' + red + ',' + green + ',' + blue + ',' + this.alpha + ')';\r\n    };\r\n\r\n    /**\r\n     * Converts this color to an array of red, green, blue, and alpha values\r\n     * that are in the range of 0 to 255.\r\n     *\r\n     * @param {Number[]} [result] The array to store the result in, if undefined a new instance will be created.\r\n     * @returns {Number[]} The modified result parameter or a new instance if result was undefined.\r\n     */\r\n    Color.prototype.toBytes = function(result) {\r\n        var red = Color.floatToByte(this.red);\r\n        var green = Color.floatToByte(this.green);\r\n        var blue = Color.floatToByte(this.blue);\r\n        var alpha = Color.floatToByte(this.alpha);\r\n\r\n        if (!defined(result)) {\r\n            return [red, green, blue, alpha];\r\n        }\r\n        result[0] = red;\r\n        result[1] = green;\r\n        result[2] = blue;\r\n        result[3] = alpha;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Converts this color to a single numeric unsigned 32-bit RGBA value, using the endianness\r\n     * of the system.\r\n     *\r\n     * @returns {Number} A single numeric unsigned 32-bit RGBA value.\r\n     *\r\n     *\r\n     * @example\r\n     * var rgba = Cesium.Color.BLUE.toRgba();\r\n     *\r\n     * @see Color.fromRgba\r\n     */\r\n    Color.prototype.toRgba = function() {\r\n        // scratchUint32Array and scratchUint8Array share an underlying array buffer\r\n        scratchUint8Array[0] = Color.floatToByte(this.red);\r\n        scratchUint8Array[1] = Color.floatToByte(this.green);\r\n        scratchUint8Array[2] = Color.floatToByte(this.blue);\r\n        scratchUint8Array[3] = Color.floatToByte(this.alpha);\r\n        return scratchUint32Array[0];\r\n    };\r\n\r\n    /**\r\n     * Brightens this color by the provided magnitude.\r\n     *\r\n     * @param {Number} magnitude A positive number indicating the amount to brighten.\r\n     * @param {Color} result The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter.\r\n     *\r\n     * @example\r\n     * var brightBlue = Cesium.Color.BLUE.brighten(0.5, new Cesium.Color());\r\n     */\r\n    Color.prototype.brighten = function(magnitude, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.number('magnitude', magnitude);\r\n        Check.typeOf.number.greaterThanOrEquals('magnitude', magnitude, 0.0);\r\n        Check.typeOf.object('result', result);\r\n        //>>includeEnd('debug');\r\n\r\n        magnitude = (1.0 - magnitude);\r\n        result.red = 1.0 - ((1.0 - this.red) * magnitude);\r\n        result.green = 1.0 - ((1.0 - this.green) * magnitude);\r\n        result.blue = 1.0 - ((1.0 - this.blue) * magnitude);\r\n        result.alpha = this.alpha;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Darkens this color by the provided magnitude.\r\n     *\r\n     * @param {Number} magnitude A positive number indicating the amount to darken.\r\n     * @param {Color} result The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter.\r\n     *\r\n     * @example\r\n     * var darkBlue = Cesium.Color.BLUE.darken(0.5, new Cesium.Color());\r\n     */\r\n    Color.prototype.darken = function(magnitude, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.number('magnitude', magnitude);\r\n        Check.typeOf.number.greaterThanOrEquals('magnitude', magnitude, 0.0);\r\n        Check.typeOf.object('result', result);\r\n        //>>includeEnd('debug');\r\n\r\n        magnitude = (1.0 - magnitude);\r\n        result.red = this.red * magnitude;\r\n        result.green = this.green * magnitude;\r\n        result.blue = this.blue * magnitude;\r\n        result.alpha = this.alpha;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Creates a new Color that has the same red, green, and blue components\r\n     * as this Color, but with the specified alpha value.\r\n     *\r\n     * @param {Number} alpha The new alpha component.\r\n     * @param {Color} [result] The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter or a new Color instance if one was not provided.\r\n     *\r\n     * @example var translucentRed = Cesium.Color.RED.withAlpha(0.9);\r\n     */\r\n    Color.prototype.withAlpha = function(alpha, result) {\r\n        return Color.fromAlpha(this, alpha, result);\r\n    };\r\n\r\n    /**\r\n     * Computes the componentwise sum of two Colors.\r\n     *\r\n     * @param {Color} left The first Color.\r\n     * @param {Color} right The second Color.\r\n     * @param {Color} result The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter.\r\n     */\r\n    Color.add = function(left, right, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('left', left);\r\n        Check.typeOf.object('right', right);\r\n        Check.typeOf.object('result', result);\r\n        //>>includeEnd('debug');\r\n\r\n        result.red = left.red + right.red;\r\n        result.green = left.green + right.green;\r\n        result.blue = left.blue + right.blue;\r\n        result.alpha = left.alpha + right.alpha;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Computes the componentwise difference of two Colors.\r\n     *\r\n     * @param {Color} left The first Color.\r\n     * @param {Color} right The second Color.\r\n     * @param {Color} result The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter.\r\n     */\r\n    Color.subtract = function(left, right, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('left', left);\r\n        Check.typeOf.object('right', right);\r\n        Check.typeOf.object('result', result);\r\n        //>>includeEnd('debug');\r\n\r\n        result.red = left.red - right.red;\r\n        result.green = left.green - right.green;\r\n        result.blue = left.blue - right.blue;\r\n        result.alpha = left.alpha - right.alpha;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Computes the componentwise product of two Colors.\r\n     *\r\n     * @param {Color} left The first Color.\r\n     * @param {Color} right The second Color.\r\n     * @param {Color} result The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter.\r\n     */\r\n    Color.multiply = function(left, right, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('left', left);\r\n        Check.typeOf.object('right', right);\r\n        Check.typeOf.object('result', result);\r\n        //>>includeEnd('debug');\r\n\r\n        result.red = left.red * right.red;\r\n        result.green = left.green * right.green;\r\n        result.blue = left.blue * right.blue;\r\n        result.alpha = left.alpha * right.alpha;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Computes the componentwise quotient of two Colors.\r\n     *\r\n     * @param {Color} left The first Color.\r\n     * @param {Color} right The second Color.\r\n     * @param {Color} result The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter.\r\n     */\r\n    Color.divide = function(left, right, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('left', left);\r\n        Check.typeOf.object('right', right);\r\n        Check.typeOf.object('result', result);\r\n        //>>includeEnd('debug');\r\n\r\n        result.red = left.red / right.red;\r\n        result.green = left.green / right.green;\r\n        result.blue = left.blue / right.blue;\r\n        result.alpha = left.alpha / right.alpha;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Computes the componentwise modulus of two Colors.\r\n     *\r\n     * @param {Color} left The first Color.\r\n     * @param {Color} right The second Color.\r\n     * @param {Color} result The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter.\r\n     */\r\n    Color.mod = function(left, right, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('left', left);\r\n        Check.typeOf.object('right', right);\r\n        Check.typeOf.object('result', result);\r\n        //>>includeEnd('debug');\r\n\r\n        result.red = left.red % right.red;\r\n        result.green = left.green % right.green;\r\n        result.blue = left.blue % right.blue;\r\n        result.alpha = left.alpha % right.alpha;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Computes the linear interpolation or extrapolation at t between the provided colors.\r\n     *\r\n     * @param {Color} start The color corresponding to t at 0.0.\r\n     * @param {Color} end The color corresponding to t at 1.0.\r\n     * @param {Number} t The point along t at which to interpolate.\r\n     * @param {Color} result The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter.\r\n     */\r\n    Color.lerp = function(start, end, t, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('start', start);\r\n        Check.typeOf.object('end', end);\r\n        Check.typeOf.number('t', t);\r\n        Check.typeOf.object('result', result);\r\n        //>>includeEnd('debug');\r\n\r\n        result.red = CesiumMath.lerp(start.red, end.red, t);\r\n        result.green = CesiumMath.lerp(start.green, end.green, t);\r\n        result.blue = CesiumMath.lerp(start.blue, end.blue, t);\r\n        result.alpha = CesiumMath.lerp(start.alpha, end.alpha, t);\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Multiplies the provided Color componentwise by the provided scalar.\r\n     *\r\n     * @param {Color} color The Color to be scaled.\r\n     * @param {Number} scalar The scalar to multiply with.\r\n     * @param {Color} result The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter.\r\n     */\r\n    Color.multiplyByScalar = function(color, scalar, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('color', color);\r\n        Check.typeOf.number('scalar', scalar);\r\n        Check.typeOf.object('result', result);\r\n        //>>includeEnd('debug');\r\n\r\n        result.red = color.red * scalar;\r\n        result.green = color.green * scalar;\r\n        result.blue = color.blue * scalar;\r\n        result.alpha = color.alpha * scalar;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Divides the provided Color componentwise by the provided scalar.\r\n     *\r\n     * @param {Color} color The Color to be divided.\r\n     * @param {Number} scalar The scalar to divide with.\r\n     * @param {Color} result The object onto which to store the result.\r\n     * @returns {Color} The modified result parameter.\r\n     */\r\n    Color.divideByScalar = function(color, scalar, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('color', color);\r\n        Check.typeOf.number('scalar', scalar);\r\n        Check.typeOf.object('result', result);\r\n        //>>includeEnd('debug');\r\n\r\n        result.red = color.red / scalar;\r\n        result.green = color.green / scalar;\r\n        result.blue = color.blue / scalar;\r\n        result.alpha = color.alpha / scalar;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #F0F8FF\r\n     * <span class=\"colorSwath\" style=\"background: #F0F8FF;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.ALICEBLUE = Object.freeze(Color.fromCssColorString('#F0F8FF'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FAEBD7\r\n     * <span class=\"colorSwath\" style=\"background: #FAEBD7;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.ANTIQUEWHITE = Object.freeze(Color.fromCssColorString('#FAEBD7'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #00FFFF\r\n     * <span class=\"colorSwath\" style=\"background: #00FFFF;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.AQUA = Object.freeze(Color.fromCssColorString('#00FFFF'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #7FFFD4\r\n     * <span class=\"colorSwath\" style=\"background: #7FFFD4;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.AQUAMARINE = Object.freeze(Color.fromCssColorString('#7FFFD4'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #F0FFFF\r\n     * <span class=\"colorSwath\" style=\"background: #F0FFFF;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.AZURE = Object.freeze(Color.fromCssColorString('#F0FFFF'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #F5F5DC\r\n     * <span class=\"colorSwath\" style=\"background: #F5F5DC;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.BEIGE = Object.freeze(Color.fromCssColorString('#F5F5DC'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFE4C4\r\n     * <span class=\"colorSwath\" style=\"background: #FFE4C4;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.BISQUE = Object.freeze(Color.fromCssColorString('#FFE4C4'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #000000\r\n     * <span class=\"colorSwath\" style=\"background: #000000;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.BLACK = Object.freeze(Color.fromCssColorString('#000000'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFEBCD\r\n     * <span class=\"colorSwath\" style=\"background: #FFEBCD;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.BLANCHEDALMOND = Object.freeze(Color.fromCssColorString('#FFEBCD'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #0000FF\r\n     * <span class=\"colorSwath\" style=\"background: #0000FF;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.BLUE = Object.freeze(Color.fromCssColorString('#0000FF'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #8A2BE2\r\n     * <span class=\"colorSwath\" style=\"background: #8A2BE2;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.BLUEVIOLET = Object.freeze(Color.fromCssColorString('#8A2BE2'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #A52A2A\r\n     * <span class=\"colorSwath\" style=\"background: #A52A2A;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.BROWN = Object.freeze(Color.fromCssColorString('#A52A2A'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #DEB887\r\n     * <span class=\"colorSwath\" style=\"background: #DEB887;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.BURLYWOOD = Object.freeze(Color.fromCssColorString('#DEB887'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #5F9EA0\r\n     * <span class=\"colorSwath\" style=\"background: #5F9EA0;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.CADETBLUE = Object.freeze(Color.fromCssColorString('#5F9EA0'));\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #7FFF00\r\n     * <span class=\"colorSwath\" style=\"background: #7FFF00;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.CHARTREUSE = Object.freeze(Color.fromCssColorString('#7FFF00'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #D2691E\r\n     * <span class=\"colorSwath\" style=\"background: #D2691E;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.CHOCOLATE = Object.freeze(Color.fromCssColorString('#D2691E'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FF7F50\r\n     * <span class=\"colorSwath\" style=\"background: #FF7F50;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.CORAL = Object.freeze(Color.fromCssColorString('#FF7F50'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #6495ED\r\n     * <span class=\"colorSwath\" style=\"background: #6495ED;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.CORNFLOWERBLUE = Object.freeze(Color.fromCssColorString('#6495ED'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFF8DC\r\n     * <span class=\"colorSwath\" style=\"background: #FFF8DC;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.CORNSILK = Object.freeze(Color.fromCssColorString('#FFF8DC'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #DC143C\r\n     * <span class=\"colorSwath\" style=\"background: #DC143C;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.CRIMSON = Object.freeze(Color.fromCssColorString('#DC143C'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #00FFFF\r\n     * <span class=\"colorSwath\" style=\"background: #00FFFF;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.CYAN = Object.freeze(Color.fromCssColorString('#00FFFF'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #00008B\r\n     * <span class=\"colorSwath\" style=\"background: #00008B;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKBLUE = Object.freeze(Color.fromCssColorString('#00008B'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #008B8B\r\n     * <span class=\"colorSwath\" style=\"background: #008B8B;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKCYAN = Object.freeze(Color.fromCssColorString('#008B8B'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #B8860B\r\n     * <span class=\"colorSwath\" style=\"background: #B8860B;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKGOLDENROD = Object.freeze(Color.fromCssColorString('#B8860B'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #A9A9A9\r\n     * <span class=\"colorSwath\" style=\"background: #A9A9A9;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKGRAY = Object.freeze(Color.fromCssColorString('#A9A9A9'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #006400\r\n     * <span class=\"colorSwath\" style=\"background: #006400;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKGREEN = Object.freeze(Color.fromCssColorString('#006400'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #A9A9A9\r\n     * <span class=\"colorSwath\" style=\"background: #A9A9A9;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKGREY = Color.DARKGRAY;\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #BDB76B\r\n     * <span class=\"colorSwath\" style=\"background: #BDB76B;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKKHAKI = Object.freeze(Color.fromCssColorString('#BDB76B'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #8B008B\r\n     * <span class=\"colorSwath\" style=\"background: #8B008B;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKMAGENTA = Object.freeze(Color.fromCssColorString('#8B008B'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #556B2F\r\n     * <span class=\"colorSwath\" style=\"background: #556B2F;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKOLIVEGREEN = Object.freeze(Color.fromCssColorString('#556B2F'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FF8C00\r\n     * <span class=\"colorSwath\" style=\"background: #FF8C00;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKORANGE = Object.freeze(Color.fromCssColorString('#FF8C00'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #9932CC\r\n     * <span class=\"colorSwath\" style=\"background: #9932CC;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKORCHID = Object.freeze(Color.fromCssColorString('#9932CC'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #8B0000\r\n     * <span class=\"colorSwath\" style=\"background: #8B0000;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKRED = Object.freeze(Color.fromCssColorString('#8B0000'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #E9967A\r\n     * <span class=\"colorSwath\" style=\"background: #E9967A;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKSALMON = Object.freeze(Color.fromCssColorString('#E9967A'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #8FBC8F\r\n     * <span class=\"colorSwath\" style=\"background: #8FBC8F;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKSEAGREEN = Object.freeze(Color.fromCssColorString('#8FBC8F'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #483D8B\r\n     * <span class=\"colorSwath\" style=\"background: #483D8B;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKSLATEBLUE = Object.freeze(Color.fromCssColorString('#483D8B'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #2F4F4F\r\n     * <span class=\"colorSwath\" style=\"background: #2F4F4F;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKSLATEGRAY = Object.freeze(Color.fromCssColorString('#2F4F4F'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #2F4F4F\r\n     * <span class=\"colorSwath\" style=\"background: #2F4F4F;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKSLATEGREY = Color.DARKSLATEGRAY;\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #00CED1\r\n     * <span class=\"colorSwath\" style=\"background: #00CED1;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKTURQUOISE = Object.freeze(Color.fromCssColorString('#00CED1'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #9400D3\r\n     * <span class=\"colorSwath\" style=\"background: #9400D3;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DARKVIOLET = Object.freeze(Color.fromCssColorString('#9400D3'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FF1493\r\n     * <span class=\"colorSwath\" style=\"background: #FF1493;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DEEPPINK = Object.freeze(Color.fromCssColorString('#FF1493'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #00BFFF\r\n     * <span class=\"colorSwath\" style=\"background: #00BFFF;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DEEPSKYBLUE = Object.freeze(Color.fromCssColorString('#00BFFF'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #696969\r\n     * <span class=\"colorSwath\" style=\"background: #696969;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DIMGRAY = Object.freeze(Color.fromCssColorString('#696969'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #696969\r\n     * <span class=\"colorSwath\" style=\"background: #696969;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DIMGREY = Color.DIMGRAY;\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #1E90FF\r\n     * <span class=\"colorSwath\" style=\"background: #1E90FF;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.DODGERBLUE = Object.freeze(Color.fromCssColorString('#1E90FF'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #B22222\r\n     * <span class=\"colorSwath\" style=\"background: #B22222;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.FIREBRICK = Object.freeze(Color.fromCssColorString('#B22222'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFFAF0\r\n     * <span class=\"colorSwath\" style=\"background: #FFFAF0;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.FLORALWHITE = Object.freeze(Color.fromCssColorString('#FFFAF0'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #228B22\r\n     * <span class=\"colorSwath\" style=\"background: #228B22;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.FORESTGREEN = Object.freeze(Color.fromCssColorString('#228B22'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FF00FF\r\n     * <span class=\"colorSwath\" style=\"background: #FF00FF;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.FUCHSIA = Object.freeze(Color.fromCssColorString('#FF00FF'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #DCDCDC\r\n     * <span class=\"colorSwath\" style=\"background: #DCDCDC;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.GAINSBORO = Object.freeze(Color.fromCssColorString('#DCDCDC'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #F8F8FF\r\n     * <span class=\"colorSwath\" style=\"background: #F8F8FF;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.GHOSTWHITE = Object.freeze(Color.fromCssColorString('#F8F8FF'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFD700\r\n     * <span class=\"colorSwath\" style=\"background: #FFD700;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.GOLD = Object.freeze(Color.fromCssColorString('#FFD700'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #DAA520\r\n     * <span class=\"colorSwath\" style=\"background: #DAA520;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.GOLDENROD = Object.freeze(Color.fromCssColorString('#DAA520'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #808080\r\n     * <span class=\"colorSwath\" style=\"background: #808080;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.GRAY = Object.freeze(Color.fromCssColorString('#808080'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #008000\r\n     * <span class=\"colorSwath\" style=\"background: #008000;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.GREEN = Object.freeze(Color.fromCssColorString('#008000'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #ADFF2F\r\n     * <span class=\"colorSwath\" style=\"background: #ADFF2F;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.GREENYELLOW = Object.freeze(Color.fromCssColorString('#ADFF2F'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #808080\r\n     * <span class=\"colorSwath\" style=\"background: #808080;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.GREY = Color.GRAY;\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #F0FFF0\r\n     * <span class=\"colorSwath\" style=\"background: #F0FFF0;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.HONEYDEW = Object.freeze(Color.fromCssColorString('#F0FFF0'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FF69B4\r\n     * <span class=\"colorSwath\" style=\"background: #FF69B4;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.HOTPINK = Object.freeze(Color.fromCssColorString('#FF69B4'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #CD5C5C\r\n     * <span class=\"colorSwath\" style=\"background: #CD5C5C;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.INDIANRED = Object.freeze(Color.fromCssColorString('#CD5C5C'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #4B0082\r\n     * <span class=\"colorSwath\" style=\"background: #4B0082;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.INDIGO = Object.freeze(Color.fromCssColorString('#4B0082'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFFFF0\r\n     * <span class=\"colorSwath\" style=\"background: #FFFFF0;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.IVORY = Object.freeze(Color.fromCssColorString('#FFFFF0'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #F0E68C\r\n     * <span class=\"colorSwath\" style=\"background: #F0E68C;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.KHAKI = Object.freeze(Color.fromCssColorString('#F0E68C'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #E6E6FA\r\n     * <span class=\"colorSwath\" style=\"background: #E6E6FA;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LAVENDER = Object.freeze(Color.fromCssColorString('#E6E6FA'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFF0F5\r\n     * <span class=\"colorSwath\" style=\"background: #FFF0F5;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LAVENDAR_BLUSH = Object.freeze(Color.fromCssColorString('#FFF0F5'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #7CFC00\r\n     * <span class=\"colorSwath\" style=\"background: #7CFC00;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LAWNGREEN = Object.freeze(Color.fromCssColorString('#7CFC00'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFFACD\r\n     * <span class=\"colorSwath\" style=\"background: #FFFACD;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LEMONCHIFFON = Object.freeze(Color.fromCssColorString('#FFFACD'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #ADD8E6\r\n     * <span class=\"colorSwath\" style=\"background: #ADD8E6;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTBLUE = Object.freeze(Color.fromCssColorString('#ADD8E6'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #F08080\r\n     * <span class=\"colorSwath\" style=\"background: #F08080;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTCORAL = Object.freeze(Color.fromCssColorString('#F08080'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #E0FFFF\r\n     * <span class=\"colorSwath\" style=\"background: #E0FFFF;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTCYAN = Object.freeze(Color.fromCssColorString('#E0FFFF'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FAFAD2\r\n     * <span class=\"colorSwath\" style=\"background: #FAFAD2;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTGOLDENRODYELLOW = Object.freeze(Color.fromCssColorString('#FAFAD2'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #D3D3D3\r\n     * <span class=\"colorSwath\" style=\"background: #D3D3D3;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTGRAY = Object.freeze(Color.fromCssColorString('#D3D3D3'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #90EE90\r\n     * <span class=\"colorSwath\" style=\"background: #90EE90;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTGREEN = Object.freeze(Color.fromCssColorString('#90EE90'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #D3D3D3\r\n     * <span class=\"colorSwath\" style=\"background: #D3D3D3;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTGREY = Color.LIGHTGRAY;\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFB6C1\r\n     * <span class=\"colorSwath\" style=\"background: #FFB6C1;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTPINK = Object.freeze(Color.fromCssColorString('#FFB6C1'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #20B2AA\r\n     * <span class=\"colorSwath\" style=\"background: #20B2AA;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTSEAGREEN = Object.freeze(Color.fromCssColorString('#20B2AA'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #87CEFA\r\n     * <span class=\"colorSwath\" style=\"background: #87CEFA;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTSKYBLUE = Object.freeze(Color.fromCssColorString('#87CEFA'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #778899\r\n     * <span class=\"colorSwath\" style=\"background: #778899;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTSLATEGRAY = Object.freeze(Color.fromCssColorString('#778899'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #778899\r\n     * <span class=\"colorSwath\" style=\"background: #778899;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTSLATEGREY = Color.LIGHTSLATEGRAY;\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #B0C4DE\r\n     * <span class=\"colorSwath\" style=\"background: #B0C4DE;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTSTEELBLUE = Object.freeze(Color.fromCssColorString('#B0C4DE'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFFFE0\r\n     * <span class=\"colorSwath\" style=\"background: #FFFFE0;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIGHTYELLOW = Object.freeze(Color.fromCssColorString('#FFFFE0'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #00FF00\r\n     * <span class=\"colorSwath\" style=\"background: #00FF00;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIME = Object.freeze(Color.fromCssColorString('#00FF00'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #32CD32\r\n     * <span class=\"colorSwath\" style=\"background: #32CD32;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LIMEGREEN = Object.freeze(Color.fromCssColorString('#32CD32'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FAF0E6\r\n     * <span class=\"colorSwath\" style=\"background: #FAF0E6;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.LINEN = Object.freeze(Color.fromCssColorString('#FAF0E6'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FF00FF\r\n     * <span class=\"colorSwath\" style=\"background: #FF00FF;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MAGENTA = Object.freeze(Color.fromCssColorString('#FF00FF'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #800000\r\n     * <span class=\"colorSwath\" style=\"background: #800000;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MAROON = Object.freeze(Color.fromCssColorString('#800000'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #66CDAA\r\n     * <span class=\"colorSwath\" style=\"background: #66CDAA;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MEDIUMAQUAMARINE = Object.freeze(Color.fromCssColorString('#66CDAA'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #0000CD\r\n     * <span class=\"colorSwath\" style=\"background: #0000CD;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MEDIUMBLUE = Object.freeze(Color.fromCssColorString('#0000CD'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #BA55D3\r\n     * <span class=\"colorSwath\" style=\"background: #BA55D3;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MEDIUMORCHID = Object.freeze(Color.fromCssColorString('#BA55D3'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #9370DB\r\n     * <span class=\"colorSwath\" style=\"background: #9370DB;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MEDIUMPURPLE = Object.freeze(Color.fromCssColorString('#9370DB'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #3CB371\r\n     * <span class=\"colorSwath\" style=\"background: #3CB371;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MEDIUMSEAGREEN = Object.freeze(Color.fromCssColorString('#3CB371'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #7B68EE\r\n     * <span class=\"colorSwath\" style=\"background: #7B68EE;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MEDIUMSLATEBLUE = Object.freeze(Color.fromCssColorString('#7B68EE'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #00FA9A\r\n     * <span class=\"colorSwath\" style=\"background: #00FA9A;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MEDIUMSPRINGGREEN = Object.freeze(Color.fromCssColorString('#00FA9A'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #48D1CC\r\n     * <span class=\"colorSwath\" style=\"background: #48D1CC;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MEDIUMTURQUOISE = Object.freeze(Color.fromCssColorString('#48D1CC'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #C71585\r\n     * <span class=\"colorSwath\" style=\"background: #C71585;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MEDIUMVIOLETRED = Object.freeze(Color.fromCssColorString('#C71585'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #191970\r\n     * <span class=\"colorSwath\" style=\"background: #191970;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MIDNIGHTBLUE = Object.freeze(Color.fromCssColorString('#191970'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #F5FFFA\r\n     * <span class=\"colorSwath\" style=\"background: #F5FFFA;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MINTCREAM = Object.freeze(Color.fromCssColorString('#F5FFFA'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFE4E1\r\n     * <span class=\"colorSwath\" style=\"background: #FFE4E1;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MISTYROSE = Object.freeze(Color.fromCssColorString('#FFE4E1'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFE4B5\r\n     * <span class=\"colorSwath\" style=\"background: #FFE4B5;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.MOCCASIN = Object.freeze(Color.fromCssColorString('#FFE4B5'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFDEAD\r\n     * <span class=\"colorSwath\" style=\"background: #FFDEAD;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.NAVAJOWHITE = Object.freeze(Color.fromCssColorString('#FFDEAD'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #000080\r\n     * <span class=\"colorSwath\" style=\"background: #000080;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.NAVY = Object.freeze(Color.fromCssColorString('#000080'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FDF5E6\r\n     * <span class=\"colorSwath\" style=\"background: #FDF5E6;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.OLDLACE = Object.freeze(Color.fromCssColorString('#FDF5E6'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #808000\r\n     * <span class=\"colorSwath\" style=\"background: #808000;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.OLIVE = Object.freeze(Color.fromCssColorString('#808000'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #6B8E23\r\n     * <span class=\"colorSwath\" style=\"background: #6B8E23;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.OLIVEDRAB = Object.freeze(Color.fromCssColorString('#6B8E23'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFA500\r\n     * <span class=\"colorSwath\" style=\"background: #FFA500;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.ORANGE = Object.freeze(Color.fromCssColorString('#FFA500'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FF4500\r\n     * <span class=\"colorSwath\" style=\"background: #FF4500;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.ORANGERED = Object.freeze(Color.fromCssColorString('#FF4500'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #DA70D6\r\n     * <span class=\"colorSwath\" style=\"background: #DA70D6;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.ORCHID = Object.freeze(Color.fromCssColorString('#DA70D6'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #EEE8AA\r\n     * <span class=\"colorSwath\" style=\"background: #EEE8AA;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.PALEGOLDENROD = Object.freeze(Color.fromCssColorString('#EEE8AA'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #98FB98\r\n     * <span class=\"colorSwath\" style=\"background: #98FB98;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.PALEGREEN = Object.freeze(Color.fromCssColorString('#98FB98'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #AFEEEE\r\n     * <span class=\"colorSwath\" style=\"background: #AFEEEE;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.PALETURQUOISE = Object.freeze(Color.fromCssColorString('#AFEEEE'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #DB7093\r\n     * <span class=\"colorSwath\" style=\"background: #DB7093;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.PALEVIOLETRED = Object.freeze(Color.fromCssColorString('#DB7093'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFEFD5\r\n     * <span class=\"colorSwath\" style=\"background: #FFEFD5;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.PAPAYAWHIP = Object.freeze(Color.fromCssColorString('#FFEFD5'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFDAB9\r\n     * <span class=\"colorSwath\" style=\"background: #FFDAB9;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.PEACHPUFF = Object.freeze(Color.fromCssColorString('#FFDAB9'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #CD853F\r\n     * <span class=\"colorSwath\" style=\"background: #CD853F;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.PERU = Object.freeze(Color.fromCssColorString('#CD853F'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFC0CB\r\n     * <span class=\"colorSwath\" style=\"background: #FFC0CB;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.PINK = Object.freeze(Color.fromCssColorString('#FFC0CB'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #DDA0DD\r\n     * <span class=\"colorSwath\" style=\"background: #DDA0DD;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.PLUM = Object.freeze(Color.fromCssColorString('#DDA0DD'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #B0E0E6\r\n     * <span class=\"colorSwath\" style=\"background: #B0E0E6;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.POWDERBLUE = Object.freeze(Color.fromCssColorString('#B0E0E6'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #800080\r\n     * <span class=\"colorSwath\" style=\"background: #800080;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.PURPLE = Object.freeze(Color.fromCssColorString('#800080'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FF0000\r\n     * <span class=\"colorSwath\" style=\"background: #FF0000;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.RED = Object.freeze(Color.fromCssColorString('#FF0000'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #BC8F8F\r\n     * <span class=\"colorSwath\" style=\"background: #BC8F8F;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.ROSYBROWN = Object.freeze(Color.fromCssColorString('#BC8F8F'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #4169E1\r\n     * <span class=\"colorSwath\" style=\"background: #4169E1;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.ROYALBLUE = Object.freeze(Color.fromCssColorString('#4169E1'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #8B4513\r\n     * <span class=\"colorSwath\" style=\"background: #8B4513;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SADDLEBROWN = Object.freeze(Color.fromCssColorString('#8B4513'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FA8072\r\n     * <span class=\"colorSwath\" style=\"background: #FA8072;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SALMON = Object.freeze(Color.fromCssColorString('#FA8072'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #F4A460\r\n     * <span class=\"colorSwath\" style=\"background: #F4A460;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SANDYBROWN = Object.freeze(Color.fromCssColorString('#F4A460'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #2E8B57\r\n     * <span class=\"colorSwath\" style=\"background: #2E8B57;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SEAGREEN = Object.freeze(Color.fromCssColorString('#2E8B57'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFF5EE\r\n     * <span class=\"colorSwath\" style=\"background: #FFF5EE;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SEASHELL = Object.freeze(Color.fromCssColorString('#FFF5EE'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #A0522D\r\n     * <span class=\"colorSwath\" style=\"background: #A0522D;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SIENNA = Object.freeze(Color.fromCssColorString('#A0522D'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #C0C0C0\r\n     * <span class=\"colorSwath\" style=\"background: #C0C0C0;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SILVER = Object.freeze(Color.fromCssColorString('#C0C0C0'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #87CEEB\r\n     * <span class=\"colorSwath\" style=\"background: #87CEEB;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SKYBLUE = Object.freeze(Color.fromCssColorString('#87CEEB'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #6A5ACD\r\n     * <span class=\"colorSwath\" style=\"background: #6A5ACD;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SLATEBLUE = Object.freeze(Color.fromCssColorString('#6A5ACD'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #708090\r\n     * <span class=\"colorSwath\" style=\"background: #708090;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SLATEGRAY = Object.freeze(Color.fromCssColorString('#708090'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #708090\r\n     * <span class=\"colorSwath\" style=\"background: #708090;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SLATEGREY = Color.SLATEGRAY;\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFFAFA\r\n     * <span class=\"colorSwath\" style=\"background: #FFFAFA;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SNOW = Object.freeze(Color.fromCssColorString('#FFFAFA'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #00FF7F\r\n     * <span class=\"colorSwath\" style=\"background: #00FF7F;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.SPRINGGREEN = Object.freeze(Color.fromCssColorString('#00FF7F'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #4682B4\r\n     * <span class=\"colorSwath\" style=\"background: #4682B4;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.STEELBLUE = Object.freeze(Color.fromCssColorString('#4682B4'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #D2B48C\r\n     * <span class=\"colorSwath\" style=\"background: #D2B48C;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.TAN = Object.freeze(Color.fromCssColorString('#D2B48C'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #008080\r\n     * <span class=\"colorSwath\" style=\"background: #008080;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.TEAL = Object.freeze(Color.fromCssColorString('#008080'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #D8BFD8\r\n     * <span class=\"colorSwath\" style=\"background: #D8BFD8;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.THISTLE = Object.freeze(Color.fromCssColorString('#D8BFD8'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FF6347\r\n     * <span class=\"colorSwath\" style=\"background: #FF6347;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.TOMATO = Object.freeze(Color.fromCssColorString('#FF6347'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #40E0D0\r\n     * <span class=\"colorSwath\" style=\"background: #40E0D0;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.TURQUOISE = Object.freeze(Color.fromCssColorString('#40E0D0'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #EE82EE\r\n     * <span class=\"colorSwath\" style=\"background: #EE82EE;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.VIOLET = Object.freeze(Color.fromCssColorString('#EE82EE'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #F5DEB3\r\n     * <span class=\"colorSwath\" style=\"background: #F5DEB3;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.WHEAT = Object.freeze(Color.fromCssColorString('#F5DEB3'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFFFFF\r\n     * <span class=\"colorSwath\" style=\"background: #FFFFFF;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.WHITE = Object.freeze(Color.fromCssColorString('#FFFFFF'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #F5F5F5\r\n     * <span class=\"colorSwath\" style=\"background: #F5F5F5;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.WHITESMOKE = Object.freeze(Color.fromCssColorString('#F5F5F5'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #FFFF00\r\n     * <span class=\"colorSwath\" style=\"background: #FFFF00;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.YELLOW = Object.freeze(Color.fromCssColorString('#FFFF00'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS color #9ACD32\r\n     * <span class=\"colorSwath\" style=\"background: #9ACD32;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.YELLOWGREEN = Object.freeze(Color.fromCssColorString('#9ACD32'));\r\n\r\n    /**\r\n     * An immutable Color instance initialized to CSS transparent.\r\n     * <span class=\"colorSwath\" style=\"background: transparent;\"></span>\r\n     *\r\n     * @constant\r\n     * @type {Color}\r\n     */\r\n    Color.TRANSPARENT = Object.freeze(new Color(0, 0, 0, 0));\r\nexport default Color;\r\n"],"names":["defaultValue","Check","defined","FeatureDetection","CesiumMath"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAMI,SAAS,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;IAChC,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;IACnB,YAAY,CAAC,IAAI,CAAC,CAAC;IACnB,SAAS;IACT,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;IACnB,YAAY,CAAC,IAAI,CAAC,CAAC;IACnB,SAAS;IACT,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IACvB,YAAY,OAAO,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1C,SAAS;IACT,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IACvB,YAAY,OAAO,EAAE,CAAC;IACtB,SAAS;IACT,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IACvB,YAAY,OAAO,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACpD,SAAS;IACT,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK;;IAEL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;IAC5C;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,GAAG,GAAGA,yBAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1C;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,GAAGA,yBAAY,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC9C;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,IAAI,GAAGA,yBAAY,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC5C;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,GAAGA,yBAAY,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC9C,KAAK;;IAEL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,cAAc,GAAG,SAAS,SAAS,EAAE,MAAM,EAAE;IACvD;IACA,QAAQC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IACpD;;IAEA,QAAQ,IAAI,CAACC,eAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,YAAY,OAAO,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;IACjF,SAAS;;IAET,QAAQ,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC;IACjC,QAAQ,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC;IACnC,QAAQ,MAAM,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC;IAClC,QAAQ,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC;IACnC,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,SAAS,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;IAChE,QAAQ,GAAG,GAAG,KAAK,CAAC,WAAW,CAACF,yBAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;IAC1D,QAAQ,KAAK,GAAG,KAAK,CAAC,WAAW,CAACA,yBAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;IAC9D,QAAQ,IAAI,GAAG,KAAK,CAAC,WAAW,CAACA,yBAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAC5D,QAAQ,KAAK,GAAG,KAAK,CAAC,WAAW,CAACA,yBAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;;IAE9D,QAAQ,IAAI,CAACE,eAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,YAAY,OAAO,IAAI,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACtD,SAAS;;IAET,QAAQ,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IAC7B,QAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;IAC3B,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IAC7B,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,SAAS,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;IACrD;IACA,QAAQD,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C;;IAEA,QAAQ,IAAI,CAACC,eAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,YAAY,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACxE,SAAS;;IAET,QAAQ,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IAC/B,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACnC,QAAQ,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACjC,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IAC7B,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN,IAAI,IAAI,kBAAkB,CAAC;IAC3B,IAAI,IAAI,kBAAkB,CAAC;IAC3B,IAAI,IAAI,iBAAiB,CAAC;IAC1B,IAAI,IAAIC,2BAAgB,CAAC,mBAAmB,EAAE,EAAE;IAChD,QAAQ,kBAAkB,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;IAChD,QAAQ,kBAAkB,GAAG,IAAI,WAAW,CAAC,kBAAkB,CAAC,CAAC;IACjE,QAAQ,iBAAiB,GAAG,IAAI,UAAU,CAAC,kBAAkB,CAAC,CAAC;IAC/D,KAAK;;IAEL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,SAAS,IAAI,EAAE,MAAM,EAAE;IAC5C;IACA,QAAQ,kBAAkB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACrC,QAAQ,OAAO,KAAK,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IAC/H,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;IACxE,QAAQ,GAAG,GAAGH,yBAAY,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;IAC3C,QAAQ,UAAU,GAAGA,yBAAY,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IACnD,QAAQ,SAAS,GAAGA,yBAAY,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IACjD,QAAQ,KAAK,GAAGA,yBAAY,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;IAEzC,QAAQ,IAAI,GAAG,GAAG,SAAS,CAAC;IAC5B,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC;IAC9B,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC;;IAE7B,QAAQ,IAAI,UAAU,KAAK,CAAC,EAAE;IAC9B,YAAY,IAAI,EAAE,CAAC;IACnB,YAAY,IAAI,SAAS,GAAG,GAAG,EAAE;IACjC,gBAAgB,EAAE,GAAG,SAAS,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC;IAClD,aAAa,MAAM;IACnB,gBAAgB,EAAE,GAAG,SAAS,GAAG,UAAU,GAAG,SAAS,GAAG,UAAU,CAAC;IACrE,aAAa;;IAEb,YAAY,IAAI,EAAE,GAAG,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC;IAC1C,YAAY,GAAG,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/C,YAAY,KAAK,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;IACzC,YAAY,IAAI,GAAG,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAChD,SAAS;;IAET,QAAQ,IAAI,CAACE,eAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,YAAY,OAAO,IAAI,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACtD,SAAS;;IAET,QAAQ,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IAC7B,QAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;IAC3B,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IAC7B,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,SAAS,OAAO,EAAE,MAAM,EAAE;IACjD,QAAQ,OAAO,GAAGF,yBAAY,CAAC,OAAO,EAAEA,yBAAY,CAAC,YAAY,CAAC,CAAC;;IAEnE,QAAQ,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;IAC9B,QAAQ,IAAI,CAACE,eAAO,CAAC,GAAG,CAAC,EAAE;IAC3B,YAAY,IAAI,UAAU,GAAGF,yBAAY,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;IACjE,YAAY,IAAI,UAAU,GAAGA,yBAAY,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;;IAEnE;IACA,YAAYC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IACvF;;IAEA,YAAY,GAAG,GAAG,UAAU,IAAIG,gBAAU,CAAC,gBAAgB,EAAE,IAAI,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC;IAC3F,SAAS;;IAET,QAAQ,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;IAClC,QAAQ,IAAI,CAACF,eAAO,CAAC,KAAK,CAAC,EAAE;IAC7B,YAAY,IAAI,YAAY,GAAGF,yBAAY,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IACrE,YAAY,IAAI,YAAY,GAAGA,yBAAY,CAAC,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;;IAEvE;IACA,YAAYC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;IAC7F;IACA,YAAY,KAAK,GAAG,YAAY,IAAIG,gBAAU,CAAC,gBAAgB,EAAE,IAAI,YAAY,GAAG,YAAY,CAAC,CAAC,CAAC;IACnG,SAAS;;IAET,QAAQ,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;IAChC,QAAQ,IAAI,CAACF,eAAO,CAAC,IAAI,CAAC,EAAE;IAC5B,YAAY,IAAI,WAAW,GAAGF,yBAAY,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IACnE,YAAY,IAAI,WAAW,GAAGA,yBAAY,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;;IAErE;IACA,YAAYC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IAC1F;;IAEA,YAAY,IAAI,GAAG,WAAW,IAAIG,gBAAU,CAAC,gBAAgB,EAAE,IAAI,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC;IAC/F,SAAS;;IAET,QAAQ,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;IAClC,QAAQ,IAAI,CAACF,eAAO,CAAC,KAAK,CAAC,EAAE;IAC7B,YAAY,IAAI,YAAY,GAAGF,yBAAY,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IACrE,YAAY,IAAI,YAAY,GAAGA,yBAAY,CAAC,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;;IAEvE;IACA,YAAYC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;IAC7F;;IAEA,YAAY,KAAK,GAAG,YAAY,IAAIG,gBAAU,CAAC,gBAAgB,EAAE,IAAI,YAAY,GAAG,YAAY,CAAC,CAAC,CAAC;IACnG,SAAS;;IAET,QAAQ,IAAI,CAACF,eAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,YAAY,OAAO,IAAI,KAAK,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACtD,SAAS;;IAET,QAAQ,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IAC7B,QAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;IAC3B,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IAC7B,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA,IAAI,IAAI,UAAU,GAAG,oCAAoC,CAAC;IAC1D;IACA,IAAI,IAAI,aAAa,GAAG,6CAA6C,CAAC;IACtE;IACA,IAAI,IAAI,qBAAqB,GAAG,wFAAwF,CAAC;IACzH;IACA,IAAI,IAAI,qBAAqB,GAAG,oFAAoF,CAAC;;IAErH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,kBAAkB,GAAG,SAAS,KAAK,EAAE,MAAM,EAAE;IACvD;IACA,QAAQD,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C;;IAEA,QAAQ,IAAI,CAACC,eAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,YAAY,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;IACjC,SAAS;;IAET,QAAQ,IAAI,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,QAAQ,IAAIA,eAAO,CAAC,UAAU,CAAC,EAAE;IACjC,YAAY,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC5C,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;;IAET,QAAQ,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7C,QAAQ,IAAI,OAAO,KAAK,IAAI,EAAE;IAC9B,YAAY,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;IACvD,YAAY,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC;IAC3D,YAAY,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC;IAC1D,YAAY,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;IAC/B,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;;IAET,QAAQ,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5C,QAAQ,IAAI,OAAO,KAAK,IAAI,EAAE;IAC9B,YAAY,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;IAC1D,YAAY,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;IAC5D,YAAY,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;IAC3D,YAAY,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;IAC/B,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;;IAET,QAAQ,OAAO,GAAG,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpD,QAAQ,IAAI,OAAO,KAAK,IAAI,EAAE;IAC9B,YAAY,MAAM,CAAC,GAAG,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;IAClG,YAAY,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;IACpG,YAAY,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;IACnG,YAAY,MAAM,CAAC,KAAK,GAAG,UAAU,CAACF,yBAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACvE,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;;IAET,QAAQ,OAAO,GAAG,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpD,QAAQ,IAAI,OAAO,KAAK,IAAI,EAAE;IAC9B,YAAY,OAAO,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK;IAC/D,iCAAiC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK;IAC/D,iCAAiC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK;IAC/D,iCAAiC,UAAU,CAACA,yBAAY,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACtF,SAAS;;IAET,QAAQ,MAAM,GAAG,SAAS,CAAC;IAC3B,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,kBAAkB,CAAC;;IAEnD;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC;;IAE3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,SAAS,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE;IACvD;IACA,QAAQC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAQA,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACtC;;IAEA,QAAQ,aAAa,GAAGD,yBAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IACvD,QAAQ,KAAK,CAAC,aAAa,EAAE,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;IAC3C,QAAQ,KAAK,CAAC,aAAa,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;IAC7C,QAAQ,KAAK,CAAC,aAAa,EAAE,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;IAC5C,QAAQ,KAAK,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;;IAE3C,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,SAAS,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE;IAC1D;IACA,QAAQC,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACtC;;IAEA,QAAQ,aAAa,GAAGD,yBAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IACvD,QAAQ,IAAI,CAACE,eAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,YAAY,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;IACjC,SAAS;IACT,QAAQ,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;IAC5C,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;IAC9C,QAAQ,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;IAC7C,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;IAC5C,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,SAAS,MAAM,EAAE;IACzC,QAAQ,OAAO,MAAM,GAAG,KAAK,CAAC;IAC9B,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,SAAS,MAAM,EAAE;IACzC,QAAQ,OAAO,MAAM,KAAK,GAAG,GAAG,KAAK,GAAG,CAAC,MAAM,GAAG,KAAK,IAAI,CAAC,CAAC;IAC7D,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,MAAM,EAAE;IAC1C,QAAQ,IAAI,CAACA,eAAO,CAAC,KAAK,CAAC,EAAE;IAC7B,YAAY,OAAO,SAAS,CAAC;IAC7B,SAAS;IACT,QAAQ,IAAI,CAACA,eAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,YAAY,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IAC9E,SAAS;IACT,QAAQ,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IAC/B,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACnC,QAAQ,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACjC,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACnC,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,SAAS,IAAI,EAAE,KAAK,EAAE;IACzC,QAAQ,OAAO,CAAC,IAAI,KAAK,KAAK;IAC9B,gBAAgBA,eAAO,CAAC,IAAI,CAAC;IAC7B,gBAAgBA,eAAO,CAAC,KAAK,CAAC;IAC9B,gBAAgB,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG;IACtC,gBAAgB,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK;IAC1C,gBAAgB,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI;IACxC,gBAAgB,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,CAAC,CAAC;IAC5C,KAAK,CAAC;;IAEN;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,SAAS,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;IACvD,QAAQ,OAAO,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,MAAM,CAAC;IAC1C,eAAe,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAChD,eAAe,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAC/C,eAAe,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACjD,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,MAAM,EAAE;IAC7C,QAAQ,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACzC,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,KAAK,EAAE;IAC7C,QAAQ,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACzC,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,KAAK,EAAE,OAAO,EAAE;IAC7D,QAAQ,OAAO,CAAC,IAAI,KAAK,KAAK;IAC9B,gBAAgB,CAACA,eAAO,CAAC,KAAK,CAAC;IAC/B,iBAAiB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC;IAC3D,iBAAiB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC;IAC/D,iBAAiB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC;IAC7D,iBAAiB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC;IACjE,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;IAC1C,QAAQ,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IAC/F,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,CAAC,gBAAgB,GAAG,WAAW;IAClD,QAAQ,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9C,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClD,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChD,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;IAC9B,YAAY,OAAO,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC;IACjE,SAAS;IACT,QAAQ,OAAO,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IACjF,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,MAAM,EAAE;IAC/C,QAAQ,IAAI,GAAG,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9C,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClD,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChD,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;IAElD,QAAQ,IAAI,CAACA,eAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,YAAY,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IAC7C,SAAS;IACT,QAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACxB,QAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAC1B,QAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACzB,QAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAC1B,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW;IACxC;IACA,QAAQ,iBAAiB,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3D,QAAQ,iBAAiB,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7D,QAAQ,iBAAiB,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5D,QAAQ,iBAAiB,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7D,QAAQ,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;IACrC,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAS,EAAE,MAAM,EAAE;IAC3D;IACA,QAAQD,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IACpD,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IAC7E,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C;;IAEA,QAAQ,SAAS,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC;IACtC,QAAQ,MAAM,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC;IAC1D,QAAQ,MAAM,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC;IAC9D,QAAQ,MAAM,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC;IAC5D,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAClC,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,SAAS,EAAE,MAAM,EAAE;IACzD;IACA,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IACpD,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,WAAW,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IAC7E,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C;;IAEA,QAAQ,SAAS,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC;IACtC,QAAQ,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;IAC1C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC9C,QAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;IAC5C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAClC,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,KAAK,EAAE,MAAM,EAAE;IACxD,QAAQ,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IACpD,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,GAAG,GAAG,SAAS,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;IAC9C;IACA,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC1C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C;;IAEA,QAAQ,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IAC1C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChD,QAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAC7C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChD,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,SAAS,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;IACnD;IACA,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC1C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C;;IAEA,QAAQ,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IAC1C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChD,QAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAC7C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChD,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,SAAS,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;IACnD;IACA,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC1C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C;;IAEA,QAAQ,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IAC1C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChD,QAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAC7C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChD,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,SAAS,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;IACjD;IACA,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC1C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C;;IAEA,QAAQ,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IAC1C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChD,QAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAC7C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChD,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,GAAG,GAAG,SAAS,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;IAC9C;IACA,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC1C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C;;IAEA,QAAQ,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IAC1C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChD,QAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAC7C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChD,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE;IACjD;IACA,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxC,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACpC,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C;;IAEA,QAAQ,MAAM,CAAC,GAAG,GAAGG,gBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5D,QAAQ,MAAM,CAAC,KAAK,GAAGA,gBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAClE,QAAQ,MAAM,CAAC,IAAI,GAAGA,gBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC/D,QAAQ,MAAM,CAAC,KAAK,GAAGA,gBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAClE,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,gBAAgB,GAAG,SAAS,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;IAC7D;IACA,QAAQH,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C;;IAEA,QAAQ,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;IACxC,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;IAC5C,QAAQ,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;IAC1C,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;IAC5C,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,cAAc,GAAG,SAAS,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;IAC3D;IACA,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC9C;;IAEA,QAAQ,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC;IACxC,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;IAC5C,QAAQ,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;IAC1C,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;IAC5C,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE5E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE9E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;IACzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE9E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAExE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEvE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAExE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAExE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE7E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAExE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;;IAEpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE3E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE9E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEvE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE5E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE7E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE7E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;;IAE9C;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE7E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAExE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE3E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEvE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;;IAElC;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE3E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE3E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEvE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE3E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;;IAE5B;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAExE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEvE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAExE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE9E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE5E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,oBAAoB,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;;IAEtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE7E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE5E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE9E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;;IAEhD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE9E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE3E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEvE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEhF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE5E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE5E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE9E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE/E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEjF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE/E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE/E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE5E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAExE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE3E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEvE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE7E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE7E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE7E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEnE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE3E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAExE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAExE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEvE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;;IAEtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE3E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEnE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEpE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEvE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEzE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAEtE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;;IAE3E;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;;;;;;"}