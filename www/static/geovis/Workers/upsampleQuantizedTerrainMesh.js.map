{"version":3,"file":"upsampleQuantizedTerrainMesh.js","sources":["../../../../Source/Core/Intersections2D.js","../../../../Source/WorkersES6/upsampleQuantizedTerrainMesh.js"],"sourcesContent":["import Cartesian2 from './Cartesian2.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport defined from './defined.js';\r\nimport DeveloperError from './DeveloperError.js';\r\n\r\n    /**\r\n     * Contains functions for operating on 2D triangles.\r\n     *\r\n     * @exports Intersections2D\r\n     */\r\n    var Intersections2D = {};\r\n\r\n    /**\r\n     * Splits a 2D triangle at given axis-aligned threshold value and returns the resulting\r\n     * polygon on a given side of the threshold.  The resulting polygon may have 0, 1, 2,\r\n     * 3, or 4 vertices.\r\n     *\r\n     * @param {Number} threshold The threshold coordinate value at which to clip the triangle.\r\n     * @param {Boolean} keepAbove true to keep the portion of the triangle above the threshold, or false\r\n     *                            to keep the portion below.\r\n     * @param {Number} u0 The coordinate of the first vertex in the triangle, in counter-clockwise order.\r\n     * @param {Number} u1 The coordinate of the second vertex in the triangle, in counter-clockwise order.\r\n     * @param {Number} u2 The coordinate of the third vertex in the triangle, in counter-clockwise order.\r\n     * @param {Number[]} [result] The array into which to copy the result.  If this parameter is not supplied,\r\n     *                            a new array is constructed and returned.\r\n     * @returns {Number[]} The polygon that results after the clip, specified as a list of\r\n     *                     vertices.  The vertices are specified in counter-clockwise order.\r\n     *                     Each vertex is either an index from the existing list (identified as\r\n     *                     a 0, 1, or 2) or -1 indicating a new vertex not in the original triangle.\r\n     *                     For new vertices, the -1 is followed by three additional numbers: the\r\n     *                     index of each of the two original vertices forming the line segment that\r\n     *                     the new vertex lies on, and the fraction of the distance from the first\r\n     *                     vertex to the second one.\r\n     *\r\n     * @example\r\n     * var result = Cesium.Intersections2D.clipTriangleAtAxisAlignedThreshold(0.5, false, 0.2, 0.6, 0.4);\r\n     * // result === [2, 0, -1, 1, 0, 0.25, -1, 1, 2, 0.5]\r\n     */\r\n    Intersections2D.clipTriangleAtAxisAlignedThreshold = function(threshold, keepAbove, u0, u1, u2, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        if (!defined(threshold)) {\r\n            throw new DeveloperError('threshold is required.');\r\n        }\r\n        if (!defined(keepAbove)) {\r\n            throw new DeveloperError('keepAbove is required.');\r\n        }\r\n        if (!defined(u0)) {\r\n            throw new DeveloperError('u0 is required.');\r\n        }\r\n        if (!defined(u1)) {\r\n            throw new DeveloperError('u1 is required.');\r\n        }\r\n        if (!defined(u2)) {\r\n            throw new DeveloperError('u2 is required.');\r\n        }\r\n        //>>includeEnd('debug');\r\n\r\n        if (!defined(result)) {\r\n            result = [];\r\n        } else {\r\n            result.length = 0;\r\n        }\r\n\r\n        var u0Behind;\r\n        var u1Behind;\r\n        var u2Behind;\r\n        if (keepAbove) {\r\n            u0Behind = u0 < threshold;\r\n            u1Behind = u1 < threshold;\r\n            u2Behind = u2 < threshold;\r\n        } else {\r\n            u0Behind = u0 > threshold;\r\n            u1Behind = u1 > threshold;\r\n            u2Behind = u2 > threshold;\r\n        }\r\n\r\n        var numBehind = u0Behind + u1Behind + u2Behind;\r\n\r\n        var u01Ratio;\r\n        var u02Ratio;\r\n        var u12Ratio;\r\n        var u10Ratio;\r\n        var u20Ratio;\r\n        var u21Ratio;\r\n\r\n        if (numBehind === 1) {\r\n            if (u0Behind) {\r\n                u01Ratio = (threshold - u0) / (u1 - u0);\r\n                u02Ratio = (threshold - u0) / (u2 - u0);\r\n\r\n                result.push(1);\r\n\r\n                result.push(2);\r\n\r\n                if (u02Ratio !== 1.0) {\r\n                    result.push(-1);\r\n                    result.push(0);\r\n                    result.push(2);\r\n                    result.push(u02Ratio);\r\n                }\r\n\r\n                if (u01Ratio !== 1.0) {\r\n                    result.push(-1);\r\n                    result.push(0);\r\n                    result.push(1);\r\n                    result.push(u01Ratio);\r\n                }\r\n            } else if (u1Behind) {\r\n                u12Ratio = (threshold - u1) / (u2 - u1);\r\n                u10Ratio = (threshold - u1) / (u0 - u1);\r\n\r\n                result.push(2);\r\n\r\n                result.push(0);\r\n\r\n                if (u10Ratio !== 1.0) {\r\n                    result.push(-1);\r\n                    result.push(1);\r\n                    result.push(0);\r\n                    result.push(u10Ratio);\r\n                }\r\n\r\n                if (u12Ratio !== 1.0) {\r\n                    result.push(-1);\r\n                    result.push(1);\r\n                    result.push(2);\r\n                    result.push(u12Ratio);\r\n                }\r\n            } else if (u2Behind) {\r\n                u20Ratio = (threshold - u2) / (u0 - u2);\r\n                u21Ratio = (threshold - u2) / (u1 - u2);\r\n\r\n                result.push(0);\r\n\r\n                result.push(1);\r\n\r\n                if (u21Ratio !== 1.0) {\r\n                    result.push(-1);\r\n                    result.push(2);\r\n                    result.push(1);\r\n                    result.push(u21Ratio);\r\n                }\r\n\r\n                if (u20Ratio !== 1.0) {\r\n                    result.push(-1);\r\n                    result.push(2);\r\n                    result.push(0);\r\n                    result.push(u20Ratio);\r\n                }\r\n            }\r\n        } else if (numBehind === 2) {\r\n            if (!u0Behind && u0 !== threshold) {\r\n                u10Ratio = (threshold - u1) / (u0 - u1);\r\n                u20Ratio = (threshold - u2) / (u0 - u2);\r\n\r\n                result.push(0);\r\n\r\n                result.push(-1);\r\n                result.push(1);\r\n                result.push(0);\r\n                result.push(u10Ratio);\r\n\r\n                result.push(-1);\r\n                result.push(2);\r\n                result.push(0);\r\n                result.push(u20Ratio);\r\n            } else if (!u1Behind && u1 !== threshold) {\r\n                u21Ratio = (threshold - u2) / (u1 - u2);\r\n                u01Ratio = (threshold - u0) / (u1 - u0);\r\n\r\n                result.push(1);\r\n\r\n                result.push(-1);\r\n                result.push(2);\r\n                result.push(1);\r\n                result.push(u21Ratio);\r\n\r\n                result.push(-1);\r\n                result.push(0);\r\n                result.push(1);\r\n                result.push(u01Ratio);\r\n            } else if (!u2Behind && u2 !== threshold) {\r\n                u02Ratio = (threshold - u0) / (u2 - u0);\r\n                u12Ratio = (threshold - u1) / (u2 - u1);\r\n\r\n                result.push(2);\r\n\r\n                result.push(-1);\r\n                result.push(0);\r\n                result.push(2);\r\n                result.push(u02Ratio);\r\n\r\n                result.push(-1);\r\n                result.push(1);\r\n                result.push(2);\r\n                result.push(u12Ratio);\r\n            }\r\n        } else if (numBehind !== 3) {\r\n            // Completely in front of threshold\r\n            result.push(0);\r\n            result.push(1);\r\n            result.push(2);\r\n        }\r\n        // else Completely behind threshold\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Compute the barycentric coordinates of a 2D position within a 2D triangle.\r\n     *\r\n     * @param {Number} x The x coordinate of the position for which to find the barycentric coordinates.\r\n     * @param {Number} y The y coordinate of the position for which to find the barycentric coordinates.\r\n     * @param {Number} x1 The x coordinate of the triangle's first vertex.\r\n     * @param {Number} y1 The y coordinate of the triangle's first vertex.\r\n     * @param {Number} x2 The x coordinate of the triangle's second vertex.\r\n     * @param {Number} y2 The y coordinate of the triangle's second vertex.\r\n     * @param {Number} x3 The x coordinate of the triangle's third vertex.\r\n     * @param {Number} y3 The y coordinate of the triangle's third vertex.\r\n     * @param {Cartesian3} [result] The instance into to which to copy the result.  If this parameter\r\n     *                     is undefined, a new instance is created and returned.\r\n     * @returns {Cartesian3} The barycentric coordinates of the position within the triangle.\r\n     *\r\n     * @example\r\n     * var result = Cesium.Intersections2D.computeBarycentricCoordinates(0.0, 0.0, 0.0, 1.0, -1, -0.5, 1, -0.5);\r\n     * // result === new Cesium.Cartesian3(1.0 / 3.0, 1.0 / 3.0, 1.0 / 3.0);\r\n     */\r\n    Intersections2D.computeBarycentricCoordinates = function(x, y, x1, y1, x2, y2, x3, y3, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        if (!defined(x)) {\r\n            throw new DeveloperError('x is required.');\r\n        }\r\n        if (!defined(y)) {\r\n            throw new DeveloperError('y is required.');\r\n        }\r\n        if (!defined(x1)) {\r\n            throw new DeveloperError('x1 is required.');\r\n        }\r\n        if (!defined(y1)) {\r\n            throw new DeveloperError('y1 is required.');\r\n        }\r\n        if (!defined(x2)) {\r\n            throw new DeveloperError('x2 is required.');\r\n        }\r\n        if (!defined(y2)) {\r\n            throw new DeveloperError('y2 is required.');\r\n        }\r\n        if (!defined(x3)) {\r\n            throw new DeveloperError('x3 is required.');\r\n        }\r\n        if (!defined(y3)) {\r\n            throw new DeveloperError('y3 is required.');\r\n        }\r\n        //>>includeEnd('debug');\r\n\r\n        var x1mx3 = x1 - x3;\r\n        var x3mx2 = x3 - x2;\r\n        var y2my3 = y2 - y3;\r\n        var y1my3 = y1 - y3;\r\n        var inverseDeterminant = 1.0 / (y2my3 * x1mx3 + x3mx2 * y1my3);\r\n        var ymy3 = y - y3;\r\n        var xmx3 = x - x3;\r\n        var l1 = (y2my3 * xmx3 + x3mx2 * ymy3) * inverseDeterminant;\r\n        var l2 = (-y1my3 * xmx3 + x1mx3 * ymy3) * inverseDeterminant;\r\n        var l3 = 1.0 - l1 - l2;\r\n\r\n        if (defined(result)) {\r\n            result.x = l1;\r\n            result.y = l2;\r\n            result.z = l3;\r\n            return result;\r\n        }\r\n        return new Cartesian3(l1, l2, l3);\r\n    };\r\n\r\n    /**\r\n     * Compute the intersection between 2 line segments\r\n     *\r\n     * @param {Number} x00 The x coordinate of the first line's first vertex.\r\n     * @param {Number} y00 The y coordinate of the first line's first vertex.\r\n     * @param {Number} x01 The x coordinate of the first line's second vertex.\r\n     * @param {Number} y01 The y coordinate of the first line's second vertex.\r\n     * @param {Number} x10 The x coordinate of the second line's first vertex.\r\n     * @param {Number} y10 The y coordinate of the second line's first vertex.\r\n     * @param {Number} x11 The x coordinate of the second line's second vertex.\r\n     * @param {Number} y11 The y coordinate of the second line's second vertex.\r\n     * @param {Cartesian2} [result] The instance into to which to copy the result. If this parameter\r\n     *                     is undefined, a new instance is created and returned.\r\n     * @returns {Cartesian2} The intersection point, undefined if there is no intersection point or lines are coincident.\r\n     *\r\n     * @example\r\n     * var result = Cesium.Intersections2D.computeLineSegmentLineSegmentIntersection(0.0, 0.0, 0.0, 2.0, -1, 1, 1, 1);\r\n     * // result === new Cesium.Cartesian2(0.0, 1.0);\r\n     */\r\n    Intersections2D.computeLineSegmentLineSegmentIntersection = function(x00, y00, x01, y01, x10, y10, x11, y11, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.number('x00', x00);\r\n        Check.typeOf.number('y00', y00);\r\n        Check.typeOf.number('x01', x01);\r\n        Check.typeOf.number('y01', y01);\r\n        Check.typeOf.number('x10', x10);\r\n        Check.typeOf.number('y10', y10);\r\n        Check.typeOf.number('x11', x11);\r\n        Check.typeOf.number('y11', y11);\r\n        //>>includeEnd('debug');\r\n\r\n        var numerator1A = (x11 - x10) * (y00 - y10) - (y11 - y10) * (x00 - x10);\r\n        var numerator1B = (x01 - x00) * (y00 - y10) - (y01 - y00) * (x00 - x10);\r\n        var denominator1 = (y11 - y10) * (x01 - x00) - (x11 - x10) * (y01 - y00);\r\n\r\n        // If denominator = 0, then lines are parallel. If denominator = 0 and both numerators are 0, then coincident\r\n        if (denominator1 === 0) {\r\n            return;\r\n        }\r\n\r\n        var ua1 = numerator1A / denominator1;\r\n        var ub1 = numerator1B / denominator1;\r\n\r\n        if (ua1 >= 0 && ua1 <= 1 && ub1 >= 0 && ub1 <= 1) {\r\n            if (!defined(result)) {\r\n                result = new Cartesian2();\r\n            }\r\n\r\n            result.x = x00 + ua1 * (x01 - x00);\r\n            result.y = y00 + ua1 * (y01 - y00);\r\n\r\n            return result;\r\n        }\r\n    };\r\nexport default Intersections2D;\r\n","import AttributeCompression from '../Core/AttributeCompression.js';\r\nimport BoundingSphere from '../Core/BoundingSphere.js';\r\nimport Cartesian2 from '../Core/Cartesian2.js';\r\nimport Cartesian3 from '../Core/Cartesian3.js';\r\nimport Cartographic from '../Core/Cartographic.js';\r\nimport defined from '../Core/defined.js';\r\nimport Ellipsoid from '../Core/Ellipsoid.js';\r\nimport EllipsoidalOccluder from '../Core/EllipsoidalOccluder.js';\r\nimport IndexDatatype from '../Core/IndexDatatype.js';\r\nimport Intersections2D from '../Core/Intersections2D.js';\r\nimport CesiumMath from '../Core/Math.js';\r\nimport OrientedBoundingBox from '../Core/OrientedBoundingBox.js';\r\nimport Rectangle from '../Core/Rectangle.js';\r\nimport TerrainEncoding from '../Core/TerrainEncoding.js';\r\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\r\n\r\n    var maxShort = 32767;\r\n    var halfMaxShort = (maxShort / 2) | 0;\r\n\r\n    var clipScratch = [];\r\n    var clipScratch2 = [];\r\n    var verticesScratch = [];\r\n    var cartographicScratch = new Cartographic();\r\n    var cartesian3Scratch = new Cartesian3();\r\n    var uScratch = [];\r\n    var vScratch = [];\r\n    var heightScratch = [];\r\n    var indicesScratch = [];\r\n    var normalsScratch = [];\r\n    var horizonOcclusionPointScratch = new Cartesian3();\r\n    var boundingSphereScratch = new BoundingSphere();\r\n    var orientedBoundingBoxScratch = new OrientedBoundingBox();\r\n    var decodeTexCoordsScratch = new Cartesian2();\r\n    var octEncodedNormalScratch = new Cartesian3();\r\n\r\n    function upsampleQuantizedTerrainMesh(parameters, transferableObjects) {\r\n        var isEastChild = parameters.isEastChild;\r\n        var isNorthChild = parameters.isNorthChild;\r\n\r\n        var minU = isEastChild ? halfMaxShort : 0;\r\n        var maxU = isEastChild ? maxShort : halfMaxShort;\r\n        var minV = isNorthChild ? halfMaxShort : 0;\r\n        var maxV = isNorthChild ? maxShort : halfMaxShort;\r\n\r\n        var uBuffer = uScratch;\r\n        var vBuffer = vScratch;\r\n        var heightBuffer = heightScratch;\r\n        var normalBuffer = normalsScratch;\r\n\r\n        uBuffer.length = 0;\r\n        vBuffer.length = 0;\r\n        heightBuffer.length = 0;\r\n        normalBuffer.length = 0;\r\n\r\n        var indices = indicesScratch;\r\n        indices.length = 0;\r\n\r\n        var vertexMap = {};\r\n\r\n        var parentVertices = parameters.vertices;\r\n        var parentIndices = parameters.indices;\r\n        parentIndices = parentIndices.subarray(0, parameters.indexCountWithoutSkirts);\r\n\r\n        var encoding = TerrainEncoding.clone(parameters.encoding);\r\n        var hasVertexNormals = encoding.hasVertexNormals;\r\n        var exaggeration = parameters.exaggeration;\r\n\r\n        var vertexCount = 0;\r\n        var quantizedVertexCount = parameters.vertexCountWithoutSkirts;\r\n\r\n        var parentMinimumHeight = parameters.minimumHeight;\r\n        var parentMaximumHeight = parameters.maximumHeight;\r\n\r\n        var parentUBuffer = new Array(quantizedVertexCount);\r\n        var parentVBuffer = new Array(quantizedVertexCount);\r\n        var parentHeightBuffer = new Array(quantizedVertexCount);\r\n        var parentNormalBuffer = hasVertexNormals ? new Array(quantizedVertexCount * 2) : undefined;\r\n\r\n        var threshold = 20;\r\n        var height;\r\n\r\n        var i, n;\r\n        var u, v;\r\n        for (i = 0, n = 0; i < quantizedVertexCount; ++i, n += 2) {\r\n            var texCoords = encoding.decodeTextureCoordinates(parentVertices, i, decodeTexCoordsScratch);\r\n            height  = encoding.decodeHeight(parentVertices, i) / exaggeration;\r\n\r\n            u = CesiumMath.clamp((texCoords.x * maxShort) | 0, 0, maxShort);\r\n            v = CesiumMath.clamp((texCoords.y * maxShort) | 0, 0, maxShort);\r\n            parentHeightBuffer[i] = CesiumMath.clamp((((height - parentMinimumHeight) / (parentMaximumHeight - parentMinimumHeight)) * maxShort) | 0, 0, maxShort);\r\n\r\n            if (u < threshold) {\r\n                u = 0;\r\n            }\r\n\r\n            if (v < threshold) {\r\n                v = 0;\r\n            }\r\n\r\n            if (maxShort - u < threshold) {\r\n                u = maxShort;\r\n            }\r\n\r\n            if (maxShort - v < threshold) {\r\n                v = maxShort;\r\n            }\r\n\r\n            parentUBuffer[i] = u;\r\n            parentVBuffer[i] = v;\r\n\r\n            if (hasVertexNormals) {\r\n                var encodedNormal = encoding.getOctEncodedNormal(parentVertices, i, octEncodedNormalScratch);\r\n                parentNormalBuffer[n] = encodedNormal.x;\r\n                parentNormalBuffer[n + 1] = encodedNormal.y;\r\n            }\r\n\r\n            if ((isEastChild && u >= halfMaxShort || !isEastChild && u <= halfMaxShort) &&\r\n                (isNorthChild && v >= halfMaxShort || !isNorthChild && v <= halfMaxShort)) {\r\n\r\n                vertexMap[i] = vertexCount;\r\n                uBuffer.push(u);\r\n                vBuffer.push(v);\r\n                heightBuffer.push(parentHeightBuffer[i]);\r\n                if (hasVertexNormals) {\r\n                    normalBuffer.push(parentNormalBuffer[n]);\r\n                    normalBuffer.push(parentNormalBuffer[n + 1]);\r\n                }\r\n\r\n                ++vertexCount;\r\n            }\r\n        }\r\n\r\n        var triangleVertices = [];\r\n        triangleVertices.push(new Vertex());\r\n        triangleVertices.push(new Vertex());\r\n        triangleVertices.push(new Vertex());\r\n\r\n        var clippedTriangleVertices = [];\r\n        clippedTriangleVertices.push(new Vertex());\r\n        clippedTriangleVertices.push(new Vertex());\r\n        clippedTriangleVertices.push(new Vertex());\r\n\r\n        var clippedIndex;\r\n        var clipped2;\r\n\r\n        for (i = 0; i < parentIndices.length; i += 3) {\r\n            var i0 = parentIndices[i];\r\n            var i1 = parentIndices[i + 1];\r\n            var i2 = parentIndices[i + 2];\r\n\r\n            var u0 = parentUBuffer[i0];\r\n            var u1 = parentUBuffer[i1];\r\n            var u2 = parentUBuffer[i2];\r\n\r\n            triangleVertices[0].initializeIndexed(parentUBuffer, parentVBuffer, parentHeightBuffer, parentNormalBuffer, i0);\r\n            triangleVertices[1].initializeIndexed(parentUBuffer, parentVBuffer, parentHeightBuffer, parentNormalBuffer, i1);\r\n            triangleVertices[2].initializeIndexed(parentUBuffer, parentVBuffer, parentHeightBuffer, parentNormalBuffer, i2);\r\n\r\n            // Clip triangle on the east-west boundary.\r\n            var clipped = Intersections2D.clipTriangleAtAxisAlignedThreshold(halfMaxShort, isEastChild, u0, u1, u2, clipScratch);\r\n\r\n            // Get the first clipped triangle, if any.\r\n            clippedIndex = 0;\r\n\r\n            if (clippedIndex >= clipped.length) {\r\n                continue;\r\n            }\r\n            clippedIndex = clippedTriangleVertices[0].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\r\n\r\n            if (clippedIndex >= clipped.length) {\r\n                continue;\r\n            }\r\n            clippedIndex = clippedTriangleVertices[1].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\r\n\r\n            if (clippedIndex >= clipped.length) {\r\n                continue;\r\n            }\r\n            clippedIndex = clippedTriangleVertices[2].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\r\n\r\n            // Clip the triangle against the North-south boundary.\r\n            clipped2 = Intersections2D.clipTriangleAtAxisAlignedThreshold(halfMaxShort, isNorthChild, clippedTriangleVertices[0].getV(), clippedTriangleVertices[1].getV(), clippedTriangleVertices[2].getV(), clipScratch2);\r\n            addClippedPolygon(uBuffer, vBuffer, heightBuffer, normalBuffer, indices, vertexMap, clipped2, clippedTriangleVertices, hasVertexNormals);\r\n\r\n            // If there's another vertex in the original clipped result,\r\n            // it forms a second triangle.  Clip it as well.\r\n            if (clippedIndex < clipped.length) {\r\n                clippedTriangleVertices[2].clone(clippedTriangleVertices[1]);\r\n                clippedTriangleVertices[2].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\r\n\r\n                clipped2 = Intersections2D.clipTriangleAtAxisAlignedThreshold(halfMaxShort, isNorthChild, clippedTriangleVertices[0].getV(), clippedTriangleVertices[1].getV(), clippedTriangleVertices[2].getV(), clipScratch2);\r\n                addClippedPolygon(uBuffer, vBuffer, heightBuffer, normalBuffer, indices, vertexMap, clipped2, clippedTriangleVertices, hasVertexNormals);\r\n            }\r\n        }\r\n\r\n        var uOffset = isEastChild ? -maxShort : 0;\r\n        var vOffset = isNorthChild ? -maxShort : 0;\r\n\r\n        var westIndices = [];\r\n        var southIndices = [];\r\n        var eastIndices = [];\r\n        var northIndices = [];\r\n\r\n        var minimumHeight = Number.MAX_VALUE;\r\n        var maximumHeight = -minimumHeight;\r\n\r\n        var cartesianVertices = verticesScratch;\r\n        cartesianVertices.length = 0;\r\n\r\n        var ellipsoid = Ellipsoid.clone(parameters.ellipsoid);\r\n        var rectangle = Rectangle.clone(parameters.childRectangle);\r\n\r\n        var north = rectangle.north;\r\n        var south = rectangle.south;\r\n        var east = rectangle.east;\r\n        var west = rectangle.west;\r\n\r\n        if (east < west) {\r\n            east += CesiumMath.TWO_PI;\r\n        }\r\n\r\n        for (i = 0; i < uBuffer.length; ++i) {\r\n            u = Math.round(uBuffer[i]);\r\n            if (u <= minU) {\r\n                westIndices.push(i);\r\n                u = 0;\r\n            } else if (u >= maxU) {\r\n                eastIndices.push(i);\r\n                u = maxShort;\r\n            } else {\r\n                u = u * 2 + uOffset;\r\n            }\r\n\r\n            uBuffer[i] = u;\r\n\r\n            v = Math.round(vBuffer[i]);\r\n            if (v <= minV) {\r\n                southIndices.push(i);\r\n                v = 0;\r\n            } else if (v >= maxV) {\r\n                northIndices.push(i);\r\n                v = maxShort;\r\n            } else {\r\n                v = v * 2 + vOffset;\r\n            }\r\n\r\n            vBuffer[i] = v;\r\n\r\n            height = CesiumMath.lerp(parentMinimumHeight, parentMaximumHeight, heightBuffer[i] / maxShort);\r\n            if (height < minimumHeight) {\r\n                minimumHeight = height;\r\n            }\r\n            if (height > maximumHeight) {\r\n                maximumHeight = height;\r\n            }\r\n\r\n            heightBuffer[i] = height;\r\n\r\n            cartographicScratch.longitude = CesiumMath.lerp(west, east, u / maxShort);\r\n            cartographicScratch.latitude = CesiumMath.lerp(south, north, v / maxShort);\r\n            cartographicScratch.height = height;\r\n\r\n            ellipsoid.cartographicToCartesian(cartographicScratch, cartesian3Scratch);\r\n\r\n            cartesianVertices.push(cartesian3Scratch.x);\r\n            cartesianVertices.push(cartesian3Scratch.y);\r\n            cartesianVertices.push(cartesian3Scratch.z);\r\n        }\r\n\r\n        var boundingSphere = BoundingSphere.fromVertices(cartesianVertices, Cartesian3.ZERO, 3, boundingSphereScratch);\r\n        var orientedBoundingBox = OrientedBoundingBox.fromRectangle(rectangle, minimumHeight, maximumHeight, ellipsoid, orientedBoundingBoxScratch);\r\n\r\n        var occluder = new EllipsoidalOccluder(ellipsoid);\r\n        var horizonOcclusionPoint = occluder.computeHorizonCullingPointFromVerticesPossiblyUnderEllipsoid(boundingSphere.center, cartesianVertices, 3, boundingSphere.center, minimumHeight, horizonOcclusionPointScratch);\r\n\r\n        var heightRange = maximumHeight - minimumHeight;\r\n\r\n        var vertices = new Uint16Array(uBuffer.length + vBuffer.length + heightBuffer.length);\r\n\r\n        for (i = 0; i < uBuffer.length; ++i) {\r\n            vertices[i] = uBuffer[i];\r\n        }\r\n\r\n        var start = uBuffer.length;\r\n\r\n        for (i = 0; i < vBuffer.length; ++i) {\r\n            vertices[start + i] = vBuffer[i];\r\n        }\r\n\r\n        start += vBuffer.length;\r\n\r\n        for (i = 0; i < heightBuffer.length; ++i) {\r\n            vertices[start + i] = maxShort * (heightBuffer[i] - minimumHeight) / heightRange;\r\n        }\r\n\r\n        var indicesTypedArray = IndexDatatype.createTypedArray(uBuffer.length, indices);\r\n\r\n        var encodedNormals;\r\n        if (hasVertexNormals) {\r\n            var normalArray = new Uint8Array(normalBuffer);\r\n            transferableObjects.push(vertices.buffer, indicesTypedArray.buffer, normalArray.buffer);\r\n            encodedNormals = normalArray.buffer;\r\n        } else {\r\n            transferableObjects.push(vertices.buffer, indicesTypedArray.buffer);\r\n        }\r\n\r\n        return {\r\n            vertices : vertices.buffer,\r\n            encodedNormals : encodedNormals,\r\n            indices : indicesTypedArray.buffer,\r\n            minimumHeight : minimumHeight,\r\n            maximumHeight : maximumHeight,\r\n            westIndices : westIndices,\r\n            southIndices : southIndices,\r\n            eastIndices : eastIndices,\r\n            northIndices : northIndices,\r\n            boundingSphere : boundingSphere,\r\n            orientedBoundingBox : orientedBoundingBox,\r\n            horizonOcclusionPoint : horizonOcclusionPoint\r\n        };\r\n    }\r\n\r\n    function Vertex() {\r\n        this.vertexBuffer = undefined;\r\n        this.index = undefined;\r\n        this.first = undefined;\r\n        this.second = undefined;\r\n        this.ratio = undefined;\r\n    }\r\n\r\n    Vertex.prototype.clone = function(result) {\r\n        if (!defined(result)) {\r\n            result = new Vertex();\r\n        }\r\n\r\n        result.uBuffer = this.uBuffer;\r\n        result.vBuffer = this.vBuffer;\r\n        result.heightBuffer = this.heightBuffer;\r\n        result.normalBuffer = this.normalBuffer;\r\n        result.index = this.index;\r\n        result.first = this.first;\r\n        result.second = this.second;\r\n        result.ratio = this.ratio;\r\n\r\n        return result;\r\n    };\r\n\r\n    Vertex.prototype.initializeIndexed = function(uBuffer, vBuffer, heightBuffer, normalBuffer, index) {\r\n        this.uBuffer = uBuffer;\r\n        this.vBuffer = vBuffer;\r\n        this.heightBuffer = heightBuffer;\r\n        this.normalBuffer = normalBuffer;\r\n        this.index = index;\r\n        this.first = undefined;\r\n        this.second = undefined;\r\n        this.ratio = undefined;\r\n    };\r\n\r\n    Vertex.prototype.initializeFromClipResult = function(clipResult, index, vertices) {\r\n        var nextIndex = index + 1;\r\n\r\n        if (clipResult[index] !== -1) {\r\n            vertices[clipResult[index]].clone(this);\r\n        } else {\r\n            this.vertexBuffer = undefined;\r\n            this.index = undefined;\r\n            this.first = vertices[clipResult[nextIndex]];\r\n            ++nextIndex;\r\n            this.second = vertices[clipResult[nextIndex]];\r\n            ++nextIndex;\r\n            this.ratio = clipResult[nextIndex];\r\n            ++nextIndex;\r\n        }\r\n\r\n        return nextIndex;\r\n    };\r\n\r\n    Vertex.prototype.getKey = function() {\r\n        if (this.isIndexed()) {\r\n            return this.index;\r\n        }\r\n        return JSON.stringify({\r\n            first : this.first.getKey(),\r\n            second : this.second.getKey(),\r\n            ratio : this.ratio\r\n        });\r\n    };\r\n\r\n    Vertex.prototype.isIndexed = function() {\r\n        return defined(this.index);\r\n    };\r\n\r\n    Vertex.prototype.getH = function() {\r\n        if (defined(this.index)) {\r\n            return this.heightBuffer[this.index];\r\n        }\r\n        return CesiumMath.lerp(this.first.getH(), this.second.getH(), this.ratio);\r\n    };\r\n\r\n    Vertex.prototype.getU = function() {\r\n        if (defined(this.index)) {\r\n            return this.uBuffer[this.index];\r\n        }\r\n        return CesiumMath.lerp(this.first.getU(), this.second.getU(), this.ratio);\r\n    };\r\n\r\n    Vertex.prototype.getV = function() {\r\n        if (defined(this.index)) {\r\n            return this.vBuffer[this.index];\r\n        }\r\n        return CesiumMath.lerp(this.first.getV(), this.second.getV(), this.ratio);\r\n    };\r\n\r\n    var encodedScratch = new Cartesian2();\r\n    // An upsampled triangle may be clipped twice before it is assigned an index\r\n    // In this case, we need a buffer to handle the recursion of getNormalX() and getNormalY().\r\n    var depth = -1;\r\n    var cartesianScratch1 = [new Cartesian3(), new Cartesian3()];\r\n    var cartesianScratch2 = [new Cartesian3(), new Cartesian3()];\r\n    function lerpOctEncodedNormal(vertex, result) {\r\n        ++depth;\r\n\r\n        var first = cartesianScratch1[depth];\r\n        var second = cartesianScratch2[depth];\r\n\r\n        first = AttributeCompression.octDecode(vertex.first.getNormalX(), vertex.first.getNormalY(), first);\r\n        second = AttributeCompression.octDecode(vertex.second.getNormalX(), vertex.second.getNormalY(), second);\r\n        cartesian3Scratch = Cartesian3.lerp(first, second, vertex.ratio, cartesian3Scratch);\r\n        Cartesian3.normalize(cartesian3Scratch, cartesian3Scratch);\r\n\r\n        AttributeCompression.octEncode(cartesian3Scratch, result);\r\n\r\n        --depth;\r\n\r\n        return result;\r\n    }\r\n\r\n    Vertex.prototype.getNormalX = function() {\r\n        if (defined(this.index)) {\r\n            return this.normalBuffer[this.index * 2];\r\n        }\r\n\r\n        encodedScratch = lerpOctEncodedNormal(this, encodedScratch);\r\n        return encodedScratch.x;\r\n    };\r\n\r\n    Vertex.prototype.getNormalY = function() {\r\n        if (defined(this.index)) {\r\n            return this.normalBuffer[this.index * 2 + 1];\r\n        }\r\n\r\n        encodedScratch = lerpOctEncodedNormal(this, encodedScratch);\r\n        return encodedScratch.y;\r\n    };\r\n\r\n    var polygonVertices = [];\r\n    polygonVertices.push(new Vertex());\r\n    polygonVertices.push(new Vertex());\r\n    polygonVertices.push(new Vertex());\r\n    polygonVertices.push(new Vertex());\r\n\r\n    function addClippedPolygon(uBuffer, vBuffer, heightBuffer, normalBuffer, indices, vertexMap, clipped, triangleVertices, hasVertexNormals) {\r\n        if (clipped.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var numVertices = 0;\r\n        var clippedIndex = 0;\r\n        while (clippedIndex < clipped.length) {\r\n            clippedIndex = polygonVertices[numVertices++].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\r\n        }\r\n\r\n        for (var i = 0; i < numVertices; ++i) {\r\n            var polygonVertex = polygonVertices[i];\r\n            if (!polygonVertex.isIndexed()) {\r\n                var key = polygonVertex.getKey();\r\n                if (defined(vertexMap[key])) {\r\n                    polygonVertex.newIndex = vertexMap[key];\r\n                } else {\r\n                    var newIndex = uBuffer.length;\r\n                    uBuffer.push(polygonVertex.getU());\r\n                    vBuffer.push(polygonVertex.getV());\r\n                    heightBuffer.push(polygonVertex.getH());\r\n                    if (hasVertexNormals) {\r\n                        normalBuffer.push(polygonVertex.getNormalX());\r\n                        normalBuffer.push(polygonVertex.getNormalY());\r\n                    }\r\n                    polygonVertex.newIndex = newIndex;\r\n                    vertexMap[key] = newIndex;\r\n                }\r\n            } else {\r\n                polygonVertex.newIndex = vertexMap[polygonVertex.index];\r\n                polygonVertex.uBuffer = uBuffer;\r\n                polygonVertex.vBuffer = vBuffer;\r\n                polygonVertex.heightBuffer = heightBuffer;\r\n                if (hasVertexNormals) {\r\n                    polygonVertex.normalBuffer = normalBuffer;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (numVertices === 3) {\r\n            // A triangle.\r\n            indices.push(polygonVertices[0].newIndex);\r\n            indices.push(polygonVertices[1].newIndex);\r\n            indices.push(polygonVertices[2].newIndex);\r\n        } else if (numVertices === 4) {\r\n            // A quad - two triangles.\r\n            indices.push(polygonVertices[0].newIndex);\r\n            indices.push(polygonVertices[1].newIndex);\r\n            indices.push(polygonVertices[2].newIndex);\r\n\r\n            indices.push(polygonVertices[0].newIndex);\r\n            indices.push(polygonVertices[2].newIndex);\r\n            indices.push(polygonVertices[3].newIndex);\r\n        }\r\n    }\r\nexport default createTaskProcessorWorker(upsampleQuantizedTerrainMesh);\r\n"],"names":["defined","DeveloperError","Cartesian3","Check","Cartesian2","Cartographic","BoundingSphere","OrientedBoundingBox","TerrainEncoding","CesiumMath","Ellipsoid","Rectangle","EllipsoidalOccluder","IndexDatatype","AttributeCompression"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAMI;IACJ;IACA;IACA;IACA;IACA,IAAI,IAAI,eAAe,GAAG,EAAE,CAAC;;IAE7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,eAAe,CAAC,kCAAkC,GAAG,SAAS,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE;IAC5G;IACA,QAAQ,IAAI,CAACA,eAAO,CAAC,SAAS,CAAC,EAAE;IACjC,YAAY,MAAM,IAAIC,oBAAc,CAAC,wBAAwB,CAAC,CAAC;IAC/D,SAAS;IACT,QAAQ,IAAI,CAACD,eAAO,CAAC,SAAS,CAAC,EAAE;IACjC,YAAY,MAAM,IAAIC,oBAAc,CAAC,wBAAwB,CAAC,CAAC;IAC/D,SAAS;IACT,QAAQ,IAAI,CAACD,eAAO,CAAC,EAAE,CAAC,EAAE;IAC1B,YAAY,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;IACxD,SAAS;IACT,QAAQ,IAAI,CAACD,eAAO,CAAC,EAAE,CAAC,EAAE;IAC1B,YAAY,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;IACxD,SAAS;IACT,QAAQ,IAAI,CAACD,eAAO,CAAC,EAAE,CAAC,EAAE;IAC1B,YAAY,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;IACxD,SAAS;IACT;;IAEA,QAAQ,IAAI,CAACD,eAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,YAAY,MAAM,GAAG,EAAE,CAAC;IACxB,SAAS,MAAM;IACf,YAAY,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAC9B,SAAS;;IAET,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,IAAI,SAAS,EAAE;IACvB,YAAY,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;IACtC,YAAY,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;IACtC,YAAY,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;IACtC,SAAS,MAAM;IACf,YAAY,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;IACtC,YAAY,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;IACtC,YAAY,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;IACtC,SAAS;;IAET,QAAQ,IAAI,SAAS,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC;;IAEvD,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,IAAI,QAAQ,CAAC;;IAErB,QAAQ,IAAI,SAAS,KAAK,CAAC,EAAE;IAC7B,YAAY,IAAI,QAAQ,EAAE;IAC1B,gBAAgB,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IACxD,gBAAgB,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;;IAExD,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE/B,gBAAgB,IAAI,QAAQ,KAAK,GAAG,EAAE;IACtC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,iBAAiB;;IAEjB,gBAAgB,IAAI,QAAQ,KAAK,GAAG,EAAE;IACtC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,iBAAiB;IACjB,aAAa,MAAM,IAAI,QAAQ,EAAE;IACjC,gBAAgB,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IACxD,gBAAgB,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;;IAExD,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE/B,gBAAgB,IAAI,QAAQ,KAAK,GAAG,EAAE;IACtC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,iBAAiB;;IAEjB,gBAAgB,IAAI,QAAQ,KAAK,GAAG,EAAE;IACtC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,iBAAiB;IACjB,aAAa,MAAM,IAAI,QAAQ,EAAE;IACjC,gBAAgB,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IACxD,gBAAgB,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;;IAExD,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE/B,gBAAgB,IAAI,QAAQ,KAAK,GAAG,EAAE;IACtC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,iBAAiB;;IAEjB,gBAAgB,IAAI,QAAQ,KAAK,GAAG,EAAE;IACtC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,iBAAiB;IACjB,aAAa;IACb,SAAS,MAAM,IAAI,SAAS,KAAK,CAAC,EAAE;IACpC,YAAY,IAAI,CAAC,QAAQ,IAAI,EAAE,KAAK,SAAS,EAAE;IAC/C,gBAAgB,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IACxD,gBAAgB,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;;IAExD,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;IAEtC,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,aAAa,MAAM,IAAI,CAAC,QAAQ,IAAI,EAAE,KAAK,SAAS,EAAE;IACtD,gBAAgB,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IACxD,gBAAgB,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;;IAExD,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;IAEtC,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,aAAa,MAAM,IAAI,CAAC,QAAQ,IAAI,EAAE,KAAK,SAAS,EAAE;IACtD,gBAAgB,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IACxD,gBAAgB,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;;IAExD,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;IAEtC,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,aAAa;IACb,SAAS,MAAM,IAAI,SAAS,KAAK,CAAC,EAAE;IACpC;IACA,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3B,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3B,YAAY,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3B,SAAS;IACT;;IAEA,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,eAAe,CAAC,6BAA6B,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE;IACnG;IACA,QAAQ,IAAI,CAACA,eAAO,CAAC,CAAC,CAAC,EAAE;IACzB,YAAY,MAAM,IAAIC,oBAAc,CAAC,gBAAgB,CAAC,CAAC;IACvD,SAAS;IACT,QAAQ,IAAI,CAACD,eAAO,CAAC,CAAC,CAAC,EAAE;IACzB,YAAY,MAAM,IAAIC,oBAAc,CAAC,gBAAgB,CAAC,CAAC;IACvD,SAAS;IACT,QAAQ,IAAI,CAACD,eAAO,CAAC,EAAE,CAAC,EAAE;IAC1B,YAAY,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;IACxD,SAAS;IACT,QAAQ,IAAI,CAACD,eAAO,CAAC,EAAE,CAAC,EAAE;IAC1B,YAAY,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;IACxD,SAAS;IACT,QAAQ,IAAI,CAACD,eAAO,CAAC,EAAE,CAAC,EAAE;IAC1B,YAAY,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;IACxD,SAAS;IACT,QAAQ,IAAI,CAACD,eAAO,CAAC,EAAE,CAAC,EAAE;IAC1B,YAAY,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;IACxD,SAAS;IACT,QAAQ,IAAI,CAACD,eAAO,CAAC,EAAE,CAAC,EAAE;IAC1B,YAAY,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;IACxD,SAAS;IACT,QAAQ,IAAI,CAACD,eAAO,CAAC,EAAE,CAAC,EAAE;IAC1B,YAAY,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;IACxD,SAAS;IACT;;IAEA,QAAQ,IAAI,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;IAC5B,QAAQ,IAAI,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;IAC5B,QAAQ,IAAI,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;IAC5B,QAAQ,IAAI,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;IAC5B,QAAQ,IAAI,kBAAkB,GAAG,GAAG,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;IACvE,QAAQ,IAAI,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;IAC1B,QAAQ,IAAI,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;IAC1B,QAAQ,IAAI,EAAE,GAAG,CAAC,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,kBAAkB,CAAC;IACpE,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,kBAAkB,CAAC;IACrE,QAAQ,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;;IAE/B,QAAQ,IAAID,eAAO,CAAC,MAAM,CAAC,EAAE;IAC7B,YAAY,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAC1B,YAAY,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAC1B,YAAY,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;IAC1B,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT,QAAQ,OAAO,IAAIE,qBAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC1C,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,eAAe,CAAC,yCAAyC,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE;IACzH;IACA,QAAQC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxC,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxC,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxC,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxC,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxC,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxC,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxC,QAAQA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxC;;IAEA,QAAQ,IAAI,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;IAChF,QAAQ,IAAI,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;IAChF,QAAQ,IAAI,YAAY,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;;IAEjF;IACA,QAAQ,IAAI,YAAY,KAAK,CAAC,EAAE;IAChC,YAAY,OAAO;IACnB,SAAS;;IAET,QAAQ,IAAI,GAAG,GAAG,WAAW,GAAG,YAAY,CAAC;IAC7C,QAAQ,IAAI,GAAG,GAAG,WAAW,GAAG,YAAY,CAAC;;IAE7C,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE;IAC1D,YAAY,IAAI,CAACH,eAAO,CAAC,MAAM,CAAC,EAAE;IAClC,gBAAgB,MAAM,GAAG,IAAII,qBAAU,EAAE,CAAC;IAC1C,aAAa;;IAEb,YAAY,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IAC/C,YAAY,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;;IAE/C,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT,KAAK,CAAC;;ICzTF,IAAI,QAAQ,GAAG,KAAK,CAAC;IACzB,IAAI,IAAI,YAAY,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC;;IAE1C,IAAI,IAAI,WAAW,GAAG,EAAE,CAAC;IACzB,IAAI,IAAI,YAAY,GAAG,EAAE,CAAC;IAC1B,IAAI,IAAI,eAAe,GAAG,EAAE,CAAC;IAC7B,IAAI,IAAI,mBAAmB,GAAG,IAAIC,uBAAY,EAAE,CAAC;IACjD,IAAI,IAAI,iBAAiB,GAAG,IAAIH,qBAAU,EAAE,CAAC;IAC7C,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC;IACtB,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC;IACtB,IAAI,IAAI,aAAa,GAAG,EAAE,CAAC;IAC3B,IAAI,IAAI,cAAc,GAAG,EAAE,CAAC;IAC5B,IAAI,IAAI,cAAc,GAAG,EAAE,CAAC;IAC5B,IAAI,IAAI,4BAA4B,GAAG,IAAIA,qBAAU,EAAE,CAAC;IACxD,IAAI,IAAI,qBAAqB,GAAG,IAAII,yBAAc,EAAE,CAAC;IACrD,IAAI,IAAI,0BAA0B,GAAG,IAAIC,uCAAmB,EAAE,CAAC;IAC/D,IAAI,IAAI,sBAAsB,GAAG,IAAIH,qBAAU,EAAE,CAAC;IAClD,IAAI,IAAI,uBAAuB,GAAG,IAAIF,qBAAU,EAAE,CAAC;;IAEnD,IAAI,SAAS,4BAA4B,CAAC,UAAU,EAAE,mBAAmB,EAAE;IAC3E,QAAQ,IAAI,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;IACjD,QAAQ,IAAI,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;;IAEnD,QAAQ,IAAI,IAAI,GAAG,WAAW,GAAG,YAAY,GAAG,CAAC,CAAC;IAClD,QAAQ,IAAI,IAAI,GAAG,WAAW,GAAG,QAAQ,GAAG,YAAY,CAAC;IACzD,QAAQ,IAAI,IAAI,GAAG,YAAY,GAAG,YAAY,GAAG,CAAC,CAAC;IACnD,QAAQ,IAAI,IAAI,GAAG,YAAY,GAAG,QAAQ,GAAG,YAAY,CAAC;;IAE1D,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC;IAC/B,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC;IAC/B,QAAQ,IAAI,YAAY,GAAG,aAAa,CAAC;IACzC,QAAQ,IAAI,YAAY,GAAG,cAAc,CAAC;;IAE1C,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3B,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3B,QAAQ,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;IAChC,QAAQ,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;;IAEhC,QAAQ,IAAI,OAAO,GAAG,cAAc,CAAC;IACrC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;;IAE3B,QAAQ,IAAI,SAAS,GAAG,EAAE,CAAC;;IAE3B,QAAQ,IAAI,cAAc,GAAG,UAAU,CAAC,QAAQ,CAAC;IACjD,QAAQ,IAAI,aAAa,GAAG,UAAU,CAAC,OAAO,CAAC;IAC/C,QAAQ,aAAa,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,uBAAuB,CAAC,CAAC;;IAEtF,QAAQ,IAAI,QAAQ,GAAGM,+BAAe,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IAClE,QAAQ,IAAI,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;IACzD,QAAQ,IAAI,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;;IAEnD,QAAQ,IAAI,WAAW,GAAG,CAAC,CAAC;IAC5B,QAAQ,IAAI,oBAAoB,GAAG,UAAU,CAAC,wBAAwB,CAAC;;IAEvE,QAAQ,IAAI,mBAAmB,GAAG,UAAU,CAAC,aAAa,CAAC;IAC3D,QAAQ,IAAI,mBAAmB,GAAG,UAAU,CAAC,aAAa,CAAC;;IAE3D,QAAQ,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAC5D,QAAQ,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAC5D,QAAQ,IAAI,kBAAkB,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACjE,QAAQ,IAAI,kBAAkB,GAAG,gBAAgB,GAAG,IAAI,KAAK,CAAC,oBAAoB,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;;IAEpG,QAAQ,IAAI,SAAS,GAAG,EAAE,CAAC;IAC3B,QAAQ,IAAI,MAAM,CAAC;;IAEnB,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC;IACjB,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC;IACjB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,oBAAoB,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;IAClE,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,wBAAwB,CAAC,cAAc,EAAE,CAAC,EAAE,sBAAsB,CAAC,CAAC;IACzG,YAAY,MAAM,IAAI,QAAQ,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,YAAY,CAAC;;IAE9E,YAAY,CAAC,GAAGC,gBAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,QAAQ,IAAI,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC5E,YAAY,CAAC,GAAGA,gBAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,QAAQ,IAAI,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC5E,YAAY,kBAAkB,CAAC,CAAC,CAAC,GAAGA,gBAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,mBAAmB,KAAK,mBAAmB,GAAG,mBAAmB,CAAC,IAAI,QAAQ,IAAI,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;;IAEnK,YAAY,IAAI,CAAC,GAAG,SAAS,EAAE;IAC/B,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,aAAa;;IAEb,YAAY,IAAI,CAAC,GAAG,SAAS,EAAE;IAC/B,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,aAAa;;IAEb,YAAY,IAAI,QAAQ,GAAG,CAAC,GAAG,SAAS,EAAE;IAC1C,gBAAgB,CAAC,GAAG,QAAQ,CAAC;IAC7B,aAAa;;IAEb,YAAY,IAAI,QAAQ,GAAG,CAAC,GAAG,SAAS,EAAE;IAC1C,gBAAgB,CAAC,GAAG,QAAQ,CAAC;IAC7B,aAAa;;IAEb,YAAY,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACjC,YAAY,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;;IAEjC,YAAY,IAAI,gBAAgB,EAAE;IAClC,gBAAgB,IAAI,aAAa,GAAG,QAAQ,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC,EAAE,uBAAuB,CAAC,CAAC;IAC7G,gBAAgB,kBAAkB,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;IACxD,gBAAgB,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;IAC5D,aAAa;;IAEb,YAAY,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,YAAY;IACtF,iBAAiB,YAAY,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,YAAY,CAAC,EAAE;;IAE3F,gBAAgB,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC3C,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAgB,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,gBAAgB,IAAI,gBAAgB,EAAE;IACtC,oBAAoB,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D,oBAAoB,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjE,iBAAiB;;IAEjB,gBAAgB,EAAE,WAAW,CAAC;IAC9B,aAAa;IACb,SAAS;;IAET,QAAQ,IAAI,gBAAgB,GAAG,EAAE,CAAC;IAClC,QAAQ,gBAAgB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;IAC5C,QAAQ,gBAAgB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;IAC5C,QAAQ,gBAAgB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;;IAE5C,QAAQ,IAAI,uBAAuB,GAAG,EAAE,CAAC;IACzC,QAAQ,uBAAuB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;IACnD,QAAQ,uBAAuB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;IACnD,QAAQ,uBAAuB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;;IAEnD,QAAQ,IAAI,YAAY,CAAC;IACzB,QAAQ,IAAI,QAAQ,CAAC;;IAErB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACtD,YAAY,IAAI,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;IACtC,YAAY,IAAI,EAAE,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1C,YAAY,IAAI,EAAE,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAE1C,YAAY,IAAI,EAAE,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC;IACvC,YAAY,IAAI,EAAE,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC;IACvC,YAAY,IAAI,EAAE,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC;;IAEvC,YAAY,gBAAgB,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,EAAE,CAAC,CAAC;IAC5H,YAAY,gBAAgB,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,EAAE,CAAC,CAAC;IAC5H,YAAY,gBAAgB,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,EAAE,CAAC,CAAC;;IAE5H;IACA,YAAY,IAAI,OAAO,GAAG,eAAe,CAAC,kCAAkC,CAAC,YAAY,EAAE,WAAW,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,CAAC,CAAC;;IAEjI;IACA,YAAY,YAAY,GAAG,CAAC,CAAC;;IAE7B,YAAY,IAAI,YAAY,IAAI,OAAO,CAAC,MAAM,EAAE;IAChD,gBAAgB,SAAS;IACzB,aAAa;IACb,YAAY,YAAY,GAAG,uBAAuB,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,OAAO,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;;IAExH,YAAY,IAAI,YAAY,IAAI,OAAO,CAAC,MAAM,EAAE;IAChD,gBAAgB,SAAS;IACzB,aAAa;IACb,YAAY,YAAY,GAAG,uBAAuB,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,OAAO,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;;IAExH,YAAY,IAAI,YAAY,IAAI,OAAO,CAAC,MAAM,EAAE;IAChD,gBAAgB,SAAS;IACzB,aAAa;IACb,YAAY,YAAY,GAAG,uBAAuB,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,OAAO,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;;IAExH;IACA,YAAY,QAAQ,GAAG,eAAe,CAAC,kCAAkC,CAAC,YAAY,EAAE,YAAY,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;IAC7N,YAAY,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,uBAAuB,EAAE,gBAAgB,CAAC,CAAC;;IAErJ;IACA;IACA,YAAY,IAAI,YAAY,GAAG,OAAO,CAAC,MAAM,EAAE;IAC/C,gBAAgB,uBAAuB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,gBAAgB,uBAAuB,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,OAAO,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;;IAE7G,gBAAgB,QAAQ,GAAG,eAAe,CAAC,kCAAkC,CAAC,YAAY,EAAE,YAAY,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,YAAY,CAAC,CAAC;IACjO,gBAAgB,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,uBAAuB,EAAE,gBAAgB,CAAC,CAAC;IACzJ,aAAa;IACb,SAAS;;IAET,QAAQ,IAAI,OAAO,GAAG,WAAW,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;IAClD,QAAQ,IAAI,OAAO,GAAG,YAAY,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;;IAEnD,QAAQ,IAAI,WAAW,GAAG,EAAE,CAAC;IAC7B,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;IAC9B,QAAQ,IAAI,WAAW,GAAG,EAAE,CAAC;IAC7B,QAAQ,IAAI,YAAY,GAAG,EAAE,CAAC;;IAE9B,QAAQ,IAAI,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;IAC7C,QAAQ,IAAI,aAAa,GAAG,CAAC,aAAa,CAAC;;IAE3C,QAAQ,IAAI,iBAAiB,GAAG,eAAe,CAAC;IAChD,QAAQ,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;;IAErC,QAAQ,IAAI,SAAS,GAAGC,oBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAC9D,QAAQ,IAAI,SAAS,GAAGC,oBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;;IAEnE,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;IACpC,QAAQ,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;IACpC,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;IAClC,QAAQ,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;;IAElC,QAAQ,IAAI,IAAI,GAAG,IAAI,EAAE;IACzB,YAAY,IAAI,IAAIF,gBAAU,CAAC,MAAM,CAAC;IACtC,SAAS;;IAET,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAC7C,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,YAAY,IAAI,CAAC,IAAI,IAAI,EAAE;IAC3B,gBAAgB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,aAAa,MAAM,IAAI,CAAC,IAAI,IAAI,EAAE;IAClC,gBAAgB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,gBAAgB,CAAC,GAAG,QAAQ,CAAC;IAC7B,aAAa,MAAM;IACnB,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;IACpC,aAAa;;IAEb,YAAY,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;;IAE3B,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,YAAY,IAAI,CAAC,IAAI,IAAI,EAAE;IAC3B,gBAAgB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,aAAa,MAAM,IAAI,CAAC,IAAI,IAAI,EAAE;IAClC,gBAAgB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC,gBAAgB,CAAC,GAAG,QAAQ,CAAC;IAC7B,aAAa,MAAM;IACnB,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;IACpC,aAAa;;IAEb,YAAY,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;;IAE3B,YAAY,MAAM,GAAGA,gBAAU,CAAC,IAAI,CAAC,mBAAmB,EAAE,mBAAmB,EAAE,YAAY,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;IAC3G,YAAY,IAAI,MAAM,GAAG,aAAa,EAAE;IACxC,gBAAgB,aAAa,GAAG,MAAM,CAAC;IACvC,aAAa;IACb,YAAY,IAAI,MAAM,GAAG,aAAa,EAAE;IACxC,gBAAgB,aAAa,GAAG,MAAM,CAAC;IACvC,aAAa;;IAEb,YAAY,YAAY,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;;IAErC,YAAY,mBAAmB,CAAC,SAAS,GAAGA,gBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;IACtF,YAAY,mBAAmB,CAAC,QAAQ,GAAGA,gBAAU,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;IACvF,YAAY,mBAAmB,CAAC,MAAM,GAAG,MAAM,CAAC;;IAEhD,YAAY,SAAS,CAAC,uBAAuB,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;;IAEtF,YAAY,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACxD,YAAY,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACxD,YAAY,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACxD,SAAS;;IAET,QAAQ,IAAI,cAAc,GAAGH,yBAAc,CAAC,YAAY,CAAC,iBAAiB,EAAEJ,qBAAU,CAAC,IAAI,EAAE,CAAC,EAAE,qBAAqB,CAAC,CAAC;IACvH,QAAQ,IAAI,mBAAmB,GAAGK,uCAAmB,CAAC,aAAa,CAAC,SAAS,EAAE,aAAa,EAAE,aAAa,EAAE,SAAS,EAAE,0BAA0B,CAAC,CAAC;;IAEpJ,QAAQ,IAAI,QAAQ,GAAG,IAAIK,mCAAmB,CAAC,SAAS,CAAC,CAAC;IAC1D,QAAQ,IAAI,qBAAqB,GAAG,QAAQ,CAAC,4DAA4D,CAAC,cAAc,CAAC,MAAM,EAAE,iBAAiB,EAAE,CAAC,EAAE,cAAc,CAAC,MAAM,EAAE,aAAa,EAAE,4BAA4B,CAAC,CAAC;;IAE3N,QAAQ,IAAI,WAAW,GAAG,aAAa,GAAG,aAAa,CAAC;;IAExD,QAAQ,IAAI,QAAQ,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;;IAE9F,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAC7C,YAAY,QAAQ,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACrC,SAAS;;IAET,QAAQ,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;;IAEnC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAC7C,YAAY,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7C,SAAS;;IAET,QAAQ,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC;;IAEhC,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAClD,YAAY,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,IAAI,YAAY,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,GAAG,WAAW,CAAC;IAC7F,SAAS;;IAET,QAAQ,IAAI,iBAAiB,GAAGC,2BAAa,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;;IAExF,QAAQ,IAAI,cAAc,CAAC;IAC3B,QAAQ,IAAI,gBAAgB,EAAE;IAC9B,YAAY,IAAI,WAAW,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC;IAC3D,YAAY,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,iBAAiB,CAAC,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;IACpG,YAAY,cAAc,GAAG,WAAW,CAAC,MAAM,CAAC;IAChD,SAAS,MAAM;IACf,YAAY,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAChF,SAAS;;IAET,QAAQ,OAAO;IACf,YAAY,QAAQ,GAAG,QAAQ,CAAC,MAAM;IACtC,YAAY,cAAc,GAAG,cAAc;IAC3C,YAAY,OAAO,GAAG,iBAAiB,CAAC,MAAM;IAC9C,YAAY,aAAa,GAAG,aAAa;IACzC,YAAY,aAAa,GAAG,aAAa;IACzC,YAAY,WAAW,GAAG,WAAW;IACrC,YAAY,YAAY,GAAG,YAAY;IACvC,YAAY,WAAW,GAAG,WAAW;IACrC,YAAY,YAAY,GAAG,YAAY;IACvC,YAAY,cAAc,GAAG,cAAc;IAC3C,YAAY,mBAAmB,GAAG,mBAAmB;IACrD,YAAY,qBAAqB,GAAG,qBAAqB;IACzD,SAAS,CAAC;IACV,KAAK;;IAEL,IAAI,SAAS,MAAM,GAAG;IACtB,QAAQ,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;IACtC,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC/B,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC/B,QAAQ,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;IAChC,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC/B,KAAK;;IAEL,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,MAAM,EAAE;IAC9C,QAAQ,IAAI,CAACb,eAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,YAAY,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;IAClC,SAAS;;IAET,QAAQ,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACtC,QAAQ,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACtC,QAAQ,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IAChD,QAAQ,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IAChD,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAClC,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAClC,QAAQ,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACpC,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;IAElC,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;;IAEN,IAAI,MAAM,CAAC,SAAS,CAAC,iBAAiB,GAAG,SAAS,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,KAAK,EAAE;IACvG,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACzC,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACzC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC3B,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC/B,QAAQ,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;IAChC,QAAQ,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IAC/B,KAAK,CAAC;;IAEN,IAAI,MAAM,CAAC,SAAS,CAAC,wBAAwB,GAAG,SAAS,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE;IACtF,QAAQ,IAAI,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;;IAElC,QAAQ,IAAI,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;IACtC,YAAY,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACpD,SAAS,MAAM;IACf,YAAY,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;IAC1C,YAAY,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IACnC,YAAY,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;IACzD,YAAY,EAAE,SAAS,CAAC;IACxB,YAAY,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1D,YAAY,EAAE,SAAS,CAAC;IACxB,YAAY,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;IAC/C,YAAY,EAAE,SAAS,CAAC;IACxB,SAAS;;IAET,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK,CAAC;;IAEN,IAAI,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW;IACzC,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;IAC9B,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC;IAC9B,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;IAC9B,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;IACvC,YAAY,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;IACzC,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK;IAC9B,SAAS,CAAC,CAAC;IACX,KAAK,CAAC;;IAEN,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,WAAW;IAC5C,QAAQ,OAAOA,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,KAAK,CAAC;;IAEN,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,WAAW;IACvC,QAAQ,IAAIA,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjD,SAAS;IACT,QAAQ,OAAOS,gBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAClF,KAAK,CAAC;;IAEN,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,WAAW;IACvC,QAAQ,IAAIT,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5C,SAAS;IACT,QAAQ,OAAOS,gBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAClF,KAAK,CAAC;;IAEN,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,WAAW;IACvC,QAAQ,IAAIT,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5C,SAAS;IACT,QAAQ,OAAOS,gBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAClF,KAAK,CAAC;;IAEN,IAAI,IAAI,cAAc,GAAG,IAAIL,qBAAU,EAAE,CAAC;IAC1C;IACA;IACA,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;IACnB,IAAI,IAAI,iBAAiB,GAAG,CAAC,IAAIF,qBAAU,EAAE,EAAE,IAAIA,qBAAU,EAAE,CAAC,CAAC;IACjE,IAAI,IAAI,iBAAiB,GAAG,CAAC,IAAIA,qBAAU,EAAE,EAAE,IAAIA,qBAAU,EAAE,CAAC,CAAC;IACjE,IAAI,SAAS,oBAAoB,CAAC,MAAM,EAAE,MAAM,EAAE;IAClD,QAAQ,EAAE,KAAK,CAAC;;IAEhB,QAAQ,IAAI,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAC7C,QAAQ,IAAI,MAAM,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;;IAE9C,QAAQ,KAAK,GAAGY,yCAAoB,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE,KAAK,CAAC,CAAC;IAC5G,QAAQ,MAAM,GAAGA,yCAAoB,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,MAAM,CAAC,CAAC;IAChH,QAAQ,iBAAiB,GAAGZ,qBAAU,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE,iBAAiB,CAAC,CAAC;IAC5F,QAAQA,qBAAU,CAAC,SAAS,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;;IAEnE,QAAQY,yCAAoB,CAAC,SAAS,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;;IAElE,QAAQ,EAAE,KAAK,CAAC;;IAEhB,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK;;IAEL,IAAI,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,WAAW;IAC7C,QAAQ,IAAId,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IACrD,SAAS;;IAET,QAAQ,cAAc,GAAG,oBAAoB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IACpE,QAAQ,OAAO,cAAc,CAAC,CAAC,CAAC;IAChC,KAAK,CAAC;;IAEN,IAAI,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,WAAW;IAC7C,QAAQ,IAAIA,eAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACzD,SAAS;;IAET,QAAQ,cAAc,GAAG,oBAAoB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IACpE,QAAQ,OAAO,cAAc,CAAC,CAAC,CAAC;IAChC,KAAK,CAAC;;IAEN,IAAI,IAAI,eAAe,GAAG,EAAE,CAAC;IAC7B,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;IACvC,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;IACvC,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;IACvC,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;;IAEvC,IAAI,SAAS,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,gBAAgB,EAAE;IAC9I,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;IAClC,YAAY,OAAO;IACnB,SAAS;;IAET,QAAQ,IAAI,WAAW,GAAG,CAAC,CAAC;IAC5B,QAAQ,IAAI,YAAY,GAAG,CAAC,CAAC;IAC7B,QAAQ,OAAO,YAAY,GAAG,OAAO,CAAC,MAAM,EAAE;IAC9C,YAAY,YAAY,GAAG,eAAe,CAAC,WAAW,EAAE,CAAC,CAAC,wBAAwB,CAAC,OAAO,EAAE,YAAY,EAAE,gBAAgB,CAAC,CAAC;IAC5H,SAAS;;IAET,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,EAAE,CAAC,EAAE;IAC9C,YAAY,IAAI,aAAa,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;IACnD,YAAY,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,EAAE;IAC5C,gBAAgB,IAAI,GAAG,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC;IACjD,gBAAgB,IAAIA,eAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;IAC7C,oBAAoB,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;IAC5D,iBAAiB,MAAM;IACvB,oBAAoB,IAAI,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC;IAClD,oBAAoB,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;IACvD,oBAAoB,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;IACvD,oBAAoB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;IAC5D,oBAAoB,IAAI,gBAAgB,EAAE;IAC1C,wBAAwB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC;IACtE,wBAAwB,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC;IACtE,qBAAqB;IACrB,oBAAoB,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACtD,oBAAoB,SAAS,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;IAC9C,iBAAiB;IACjB,aAAa,MAAM;IACnB,gBAAgB,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACxE,gBAAgB,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;IAChD,gBAAgB,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;IAChD,gBAAgB,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;IAC1D,gBAAgB,IAAI,gBAAgB,EAAE;IACtC,oBAAoB,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;IAC9D,iBAAiB;IACjB,aAAa;IACb,SAAS;;IAET,QAAQ,IAAI,WAAW,KAAK,CAAC,EAAE;IAC/B;IACA,YAAY,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACtD,SAAS,MAAM,IAAI,WAAW,KAAK,CAAC,EAAE;IACtC;IACA,YAAY,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAEtD,YAAY,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACtD,SAAS;IACT,KAAK;AACL,yCAAe,yBAAyB,CAAC,4BAA4B,CAAC,CAAC;;;;;;;;"}