{"version":3,"file":"createPlaneOutlineGeometry.js","sources":["../../../../Source/Core/PlaneOutlineGeometry.js","../../../../Source/WorkersES6/createPlaneOutlineGeometry.js"],"sourcesContent":["import BoundingSphere from './BoundingSphere.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport ComponentDatatype from './ComponentDatatype.js';\r\nimport defined from './defined.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryAttribute from './GeometryAttribute.js';\r\nimport GeometryAttributes from './GeometryAttributes.js';\r\nimport PrimitiveType from './PrimitiveType.js';\r\n\r\n    /**\r\n     * Describes geometry representing the outline of a plane centered at the origin, with a unit width and length.\r\n     *\r\n     * @alias PlaneOutlineGeometry\r\n     * @constructor\r\n     *\r\n     */\r\n    function PlaneOutlineGeometry() {\r\n        this._workerName = 'createPlaneOutlineGeometry';\r\n    }\r\n\r\n    /**\r\n     * The number of elements used to pack the object into an array.\r\n     * @type {Number}\r\n     */\r\n    PlaneOutlineGeometry.packedLength = 0;\r\n\r\n    /**\r\n     * Stores the provided instance into the provided array.\r\n     *\r\n     * @param {PlaneOutlineGeometry} value The value to pack.\r\n     * @param {Number[]} array The array to pack into.\r\n     *\r\n     * @returns {Number[]} The array that was packed into\r\n     */\r\n    PlaneOutlineGeometry.pack = function(value, array) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('value', value);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Retrieves an instance from a packed array.\r\n     *\r\n     * @param {Number[]} array The packed array.\r\n     * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n     * @param {PlaneOutlineGeometry} [result] The object into which to store the result.\r\n     * @returns {PlaneOutlineGeometry} The modified result parameter or a new PlaneOutlineGeometry instance if one was not provided.\r\n     */\r\n    PlaneOutlineGeometry.unpack = function(array, startingIndex, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        if (!defined(result)) {\r\n            return new PlaneOutlineGeometry();\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    var min = new Cartesian3(-0.5, -0.5, 0.0);\r\n    var max = new Cartesian3( 0.5,  0.5, 0.0);\r\n\r\n    /**\r\n     * Computes the geometric representation of an outline of a plane, including its vertices, indices, and a bounding sphere.\r\n     *\r\n     * @returns {Geometry|undefined} The computed vertices and indices.\r\n     */\r\n    PlaneOutlineGeometry.createGeometry = function() {\r\n        var attributes = new GeometryAttributes();\r\n        var indices = new Uint16Array(4 * 2);\r\n        var positions = new Float64Array(4 * 3);\r\n\r\n        positions[0] = min.x;\r\n        positions[1] = min.y;\r\n        positions[2] = min.z;\r\n        positions[3] = max.x;\r\n        positions[4] = min.y;\r\n        positions[5] = min.z;\r\n        positions[6] = max.x;\r\n        positions[7] = max.y;\r\n        positions[8] = min.z;\r\n        positions[9] = min.x;\r\n        positions[10] = max.y;\r\n        positions[11] = min.z;\r\n\r\n        attributes.position = new GeometryAttribute({\r\n            componentDatatype : ComponentDatatype.DOUBLE,\r\n            componentsPerAttribute : 3,\r\n            values : positions\r\n        });\r\n\r\n        indices[0] = 0;\r\n        indices[1] = 1;\r\n        indices[2] = 1;\r\n        indices[3] = 2;\r\n        indices[4] = 2;\r\n        indices[5] = 3;\r\n        indices[6] = 3;\r\n        indices[7] = 0;\r\n\r\n        return new Geometry({\r\n            attributes : attributes,\r\n            indices : indices,\r\n            primitiveType : PrimitiveType.LINES,\r\n            boundingSphere : new BoundingSphere(Cartesian3.ZERO, Math.sqrt(2.0))\r\n        });\r\n    };\r\nexport default PlaneOutlineGeometry;\r\n","import defined from '../Core/defined.js';\r\nimport PlaneOutlineGeometry from '../Core/PlaneOutlineGeometry.js';\r\n\r\n    function createPlaneOutlineGeometry(planeGeometry, offset) {\r\n        if (defined(offset)) {\r\n            planeGeometry = PlaneOutlineGeometry.unpack(planeGeometry, offset);\r\n        }\r\n        return PlaneOutlineGeometry.createGeometry(planeGeometry);\r\n    }\r\nexport default createPlaneOutlineGeometry;\r\n"],"names":["Check","defined","Cartesian3","GeometryAttributes","GeometryAttribute","ComponentDatatype","Geometry","PrimitiveType","BoundingSphere"],"mappings":"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"}