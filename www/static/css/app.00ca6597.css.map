{"version":3,"sources":["webpack:///src/geovis/components/PluginManager/D:/wxy/Android/geovis-app-mobile/app/src/geovis/components/PluginManager/index.vue","webpack:///src/geovis/components/src/geovis/components/Earth.vue","webpack:///src/geovis/src/geovis/EarthApp.vue","webpack:///src/src/App.vue"],"names":[],"mappings":"AA4DA,aACE,iBAAA,CACA,SAAA,CACA,WAAA,CAGF,QACE,WAAA,CAOF,wBAHE,cAQA,CALF,WACE,YAAA,CAEA,gBAAA,CAEA,6BAAA,CAEA,8BALA,WAME,CAGF,kBACE,YAAA,CAGF,gBACE,iBAAA,CCnEJ,MACA,2BAAA,CACA,MAAA,CACA,KAAA,CACA,UAAA,CACA,WACA,CAEA,gBACA,mBAAA,CACA,sBACA,CACA,QACA,cAAA,CACA,SAAA,CACA,WAAA,CACA,QAAA,CACA,KAAA,CACA,qBAAA,CACA,YAAA,CACA,iBACA,CACA,cACA,gBACA,CC2CA,6BACA,cAKA,CACA,qDALA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WASA,CAPA,wBACA,iBAAA,CAKA,WACA,CCrFA,sBACA,cAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WACA","file":"app.00ca6597.css","sourcesContent":["@import \"./src/geovis/common/scss/style.scss\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.plugin-icon {\n  position: absolute;\n  left: 16px;\n  bottom: 10px;\n}\n\n.scroll {\n  height: 100%;\n}\n\n.scroll-item {\n  font-size: 16px;\n}\n\n.gv-plugin {\n  display: flex;\n  height: 34px;\n  line-height: 34px;\n  font-size: 16px;\n  justify-content: space-between;\n\n  .switch {\n    height: 34px;\n  }\n\n  .title {\n    display: flex;\n  }\n\n  span {\n    padding-left: 10px;\n  }\n}\n","<template>\n  <div>\n    <div ref=\"earthContainer\" class=\"full\" id=\"container\">\n      <div id=\"slider\"></div>\n    </div>\n    <div id=\"threeContainer\" style=\"z-index:0\" class=\"full\"></div>\n  </div>\n</template>\n\n<script>\nimport { earthStore } from \"../store\";\n\nexport default {\n  name: \"App\",\n  props: [\"onReady\"],\n  mounted() {\n    earthStore.init(this.$refs[\"earthContainer\"]);\n    // this.$props.onReady();\n  }\n};\n</script>\n\n<style>\n.full {\n  position: absolute !important;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n#threeContainer {\n  pointer-events: none;\n  background: transparent;\n}\n#slider {\n  position: fixed;\n  width: 4px;\n  height: 100%;\n  left: 50%;\n  top: 0;\n  background-color: white;\n  z-index: 1111;\n  visibility: hidden;\n}\n#slider:hover {\n  cursor: ew-resize;\n}\n</style>\n","<template>\n  <div id=\"geovis-app\">\n    <Earth />\n    <!-- <transition-group name=\"fade\"> -->\n      <div id=\"geo-drawplugin\" />\n    <iframe class=\"frame\" :src=\"app.entry\" :key=\"'micro-app-' + app.id\" v-for=\"(app, index) of frames\" :earthStore=\"earthStore\" :pluginInfo=\"{ ...app, index }\"></iframe>\n    <component :key=\"'plugin-' + plugin.id\" v-for=\"(plugin, index) of plugins\" v-bind:is=\"plugin.id\" :earthStore=\"earthStore\" :pluginInfo=\"{ ...plugin, index }\"></component>\n    <component :key=\"'widget-' + widget.id\" v-for=\"(widget, index) of widgets\" v-bind:is=\"widget.id\" :earthStore=\"earthStore\" :pluginInfo=\"{ ...widget, index }\"></component>\n    <!-- </transition-group> -->\n    <gv-micro-app :key=\"'micro-app-' + app.id\" v-for=\"(app, index) of apps\" :earthStore=\"earthStore\" :pluginInfo=\"{ ...app, index }\"></gv-micro-app>\n  <!-- <> -->\n    <PluginManager />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\n// import\nimport PluginManager from \"./components/PluginManager/index.vue\";\nimport \"./plugins\";\nimport \"./common/icons/iconfont\";\nimport { earthStore } from \"./store\";\nimport \"./components\";\nimport \"./util\";\nexport default Vue.extend({\n  name: \"EarthApp\",\n  components: {\n    PluginManager\n    // Navigation\n  },\n  data() {\n    return {\n      earthStore: earthStore,\n      earthState: earthStore.state,\n      currentMutexPlugin: \"\"\n    };\n  },\n  computed: {\n    widgets() {\n      const list = [];\n      this.earthState.pluginTree.map(mainNode => {\n        mainNode.items.map(item => {\n          if (item.enabled && item.type === \"widget\") {\n            list.push(item);\n          }\n        });\n      });\n      return list;\n    },\n    plugins() {\n      const list = [];\n      this.earthState.pluginTree.map(mainNode => {\n        mainNode.items.map(item => {\n          if (item.enabled && item.active && (item.type === \"module\" || item.type === \"tool\")) {\n            list.push(item);\n          }\n        });\n      });\n      return list;\n    },\n    apps() {\n      const list = [];\n      this.earthState.pluginTree.map(mainNode => {\n        mainNode.items.map(item => {\n          if (item.enabled && item.type === \"micro-app\") {\n            list.push(item);\n          } else if (item.enabled && item.active && item.type === \"micro-app-module\") {\n            list.push(item);\n          }\n        });\n      });\n      return list;\n    },\n    frames() {\n      const list = [];\n      this.earthState.pluginTree.map(mainNode => {\n        mainNode.items.map(item => {\n          if (item.enabled && item.type === \"iframe\") {\n            list.push(item);\n          }\n        });\n      });\n      return list;\n    }\n  },\n  methods: {}\n});\n</script>\n\n<style scoped>\n#geovis-app {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n.frame {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  border: medium none;\n}\n</style>\n","<template>\n  <div id=\"app\">\n    <EarthApp />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport EarthApp from \"./geovis/EarthApp.vue\";\n@Component({\n  name: \"App\",\n  components: {\n    EarthApp\n  }\n})\nexport default class extends Vue {}\n</script>\n\n<style scoped>\n#app {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n\n\n</style>\n"]}