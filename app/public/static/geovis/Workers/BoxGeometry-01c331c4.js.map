{"version":3,"file":"BoxGeometry-01c331c4.js","sources":["../../../../Source/Core/BoxGeometry.js"],"sourcesContent":["import arrayFill from './arrayFill.js';\r\nimport BoundingSphere from './BoundingSphere.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport ComponentDatatype from './ComponentDatatype.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport DeveloperError from './DeveloperError.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryAttribute from './GeometryAttribute.js';\r\nimport GeometryAttributes from './GeometryAttributes.js';\r\nimport GeometryOffsetAttribute from './GeometryOffsetAttribute.js';\r\nimport PrimitiveType from './PrimitiveType.js';\r\nimport VertexFormat from './VertexFormat.js';\r\n\r\n    var diffScratch = new Cartesian3();\r\n\r\n    /**\r\n     * Describes a cube centered at the origin.\r\n     *\r\n     * @alias BoxGeometry\r\n     * @constructor\r\n     *\r\n     * @param {Object} options Object with the following properties:\r\n     * @param {Cartesian3} options.minimum The minimum x, y, and z coordinates of the box.\r\n     * @param {Cartesian3} options.maximum The maximum x, y, and z coordinates of the box.\r\n     * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\r\n     *\r\n     * @see BoxGeometry.fromDimensions\r\n     * @see BoxGeometry.createGeometry\r\n     * @see Packable\r\n     *\r\n     * @demo {@link https://sandcastle.cesium.com/index.html?src=Box.html|Cesium Sandcastle Box Demo}\r\n     *\r\n     * @example\r\n     * var box = new Cesium.BoxGeometry({\r\n     *   vertexFormat : Cesium.VertexFormat.POSITION_ONLY,\r\n     *   maximum : new Cesium.Cartesian3(250000.0, 250000.0, 250000.0),\r\n     *   minimum : new Cesium.Cartesian3(-250000.0, -250000.0, -250000.0)\r\n     * });\r\n     * var geometry = Cesium.BoxGeometry.createGeometry(box);\r\n     */\r\n    function BoxGeometry(options) {\r\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n        var min = options.minimum;\r\n        var max = options.maximum;\r\n\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('min', min);\r\n        Check.typeOf.object('max', max);\r\n        if (defined(options.offsetAttribute) && options.offsetAttribute === GeometryOffsetAttribute.TOP) {\r\n            throw new DeveloperError('GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.');\r\n        }\r\n        //>>includeEnd('debug');\r\n\r\n        var vertexFormat = defaultValue(options.vertexFormat, VertexFormat.DEFAULT);\r\n\r\n        this._minimum = Cartesian3.clone(min);\r\n        this._maximum = Cartesian3.clone(max);\r\n        this._vertexFormat = vertexFormat;\r\n        this._offsetAttribute = options.offsetAttribute;\r\n        this._workerName = 'createBoxGeometry';\r\n    }\r\n\r\n    /**\r\n     * Creates a cube centered at the origin given its dimensions.\r\n     *\r\n     * @param {Object} options Object with the following properties:\r\n     * @param {Cartesian3} options.dimensions The width, depth, and height of the box stored in the x, y, and z coordinates of the <code>Cartesian3</code>, respectively.\r\n     * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\r\n     * @returns {BoxGeometry}\r\n     *\r\n     * @exception {DeveloperError} All dimensions components must be greater than or equal to zero.\r\n     *\r\n     *\r\n     * @example\r\n     * var box = Cesium.BoxGeometry.fromDimensions({\r\n     *   vertexFormat : Cesium.VertexFormat.POSITION_ONLY,\r\n     *   dimensions : new Cesium.Cartesian3(500000.0, 500000.0, 500000.0)\r\n     * });\r\n     * var geometry = Cesium.BoxGeometry.createGeometry(box);\r\n     *\r\n     * @see BoxGeometry.createGeometry\r\n     */\r\n    BoxGeometry.fromDimensions = function(options) {\r\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n        var dimensions = options.dimensions;\r\n\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('dimensions', dimensions);\r\n        Check.typeOf.number.greaterThanOrEquals('dimensions.x', dimensions.x, 0);\r\n        Check.typeOf.number.greaterThanOrEquals('dimensions.y', dimensions.y, 0);\r\n        Check.typeOf.number.greaterThanOrEquals('dimensions.z', dimensions.z, 0);\r\n        //>>includeEnd('debug');\r\n\r\n        var corner = Cartesian3.multiplyByScalar(dimensions, 0.5, new Cartesian3());\r\n\r\n        return new BoxGeometry({\r\n            minimum : Cartesian3.negate(corner, new Cartesian3()),\r\n            maximum : corner,\r\n            vertexFormat : options.vertexFormat,\r\n            offsetAttribute: options.offsetAttribute\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Creates a cube from the dimensions of an AxisAlignedBoundingBox.\r\n     *\r\n     * @param {AxisAlignedBoundingBox} boundingBox A description of the AxisAlignedBoundingBox.\r\n     * @returns {BoxGeometry}\r\n     *\r\n     *\r\n     *\r\n     * @example\r\n     * var aabb = Cesium.AxisAlignedBoundingBox.fromPoints(Cesium.Cartesian3.fromDegreesArray([\r\n     *      -72.0, 40.0,\r\n     *      -70.0, 35.0,\r\n     *      -75.0, 30.0,\r\n     *      -70.0, 30.0,\r\n     *      -68.0, 40.0\r\n     * ]));\r\n     * var box = Cesium.BoxGeometry.fromAxisAlignedBoundingBox(aabb);\r\n     *\r\n     * @see BoxGeometry.createGeometry\r\n     */\r\n    BoxGeometry.fromAxisAlignedBoundingBox = function (boundingBox) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('boundingBox', boundingBox);\r\n        //>>includeEnd('debug');\r\n\r\n        return new BoxGeometry({\r\n            minimum : boundingBox.minimum,\r\n            maximum : boundingBox.maximum\r\n        });\r\n    };\r\n\r\n    /**\r\n     * The number of elements used to pack the object into an array.\r\n     * @type {Number}\r\n     */\r\n    BoxGeometry.packedLength = 2 * Cartesian3.packedLength + VertexFormat.packedLength + 1;\r\n\r\n    /**\r\n     * Stores the provided instance into the provided array.\r\n     *\r\n     * @param {BoxGeometry} value The value to pack.\r\n     * @param {Number[]} array The array to pack into.\r\n     * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n     *\r\n     * @returns {Number[]} The array that was packed into\r\n     */\r\n    BoxGeometry.pack = function(value, array, startingIndex) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('value', value);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        startingIndex = defaultValue(startingIndex, 0);\r\n\r\n        Cartesian3.pack(value._minimum, array, startingIndex);\r\n        Cartesian3.pack(value._maximum, array, startingIndex + Cartesian3.packedLength);\r\n        VertexFormat.pack(value._vertexFormat, array, startingIndex + 2 * Cartesian3.packedLength);\r\n        array[startingIndex + 2 * Cartesian3.packedLength + VertexFormat.packedLength] = defaultValue(value._offsetAttribute, -1);\r\n\r\n        return array;\r\n    };\r\n\r\n    var scratchMin = new Cartesian3();\r\n    var scratchMax = new Cartesian3();\r\n    var scratchVertexFormat = new VertexFormat();\r\n    var scratchOptions = {\r\n        minimum: scratchMin,\r\n        maximum: scratchMax,\r\n        vertexFormat: scratchVertexFormat,\r\n        offsetAttribute : undefined\r\n    };\r\n\r\n    /**\r\n     * Retrieves an instance from a packed array.\r\n     *\r\n     * @param {Number[]} array The packed array.\r\n     * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n     * @param {BoxGeometry} [result] The object into which to store the result.\r\n     * @returns {BoxGeometry} The modified result parameter or a new BoxGeometry instance if one was not provided.\r\n     */\r\n    BoxGeometry.unpack = function(array, startingIndex, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        startingIndex = defaultValue(startingIndex, 0);\r\n\r\n        var min = Cartesian3.unpack(array, startingIndex, scratchMin);\r\n        var max = Cartesian3.unpack(array, startingIndex + Cartesian3.packedLength, scratchMax);\r\n        var vertexFormat = VertexFormat.unpack(array, startingIndex + 2 * Cartesian3.packedLength, scratchVertexFormat);\r\n        var offsetAttribute = array[startingIndex + 2 * Cartesian3.packedLength + VertexFormat.packedLength];\r\n\r\n        if (!defined(result)) {\r\n            scratchOptions.offsetAttribute = offsetAttribute === -1 ? undefined : offsetAttribute;\r\n            return new BoxGeometry(scratchOptions);\r\n        }\r\n\r\n        result._minimum = Cartesian3.clone(min, result._minimum);\r\n        result._maximum = Cartesian3.clone(max, result._maximum);\r\n        result._vertexFormat = VertexFormat.clone(vertexFormat, result._vertexFormat);\r\n        result._offsetAttribute = offsetAttribute === -1 ? undefined : offsetAttribute;\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Computes the geometric representation of a box, including its vertices, indices, and a bounding sphere.\r\n     *\r\n     * @param {BoxGeometry} boxGeometry A description of the box.\r\n     * @returns {Geometry|undefined} The computed vertices and indices.\r\n     */\r\n    BoxGeometry.createGeometry = function(boxGeometry) {\r\n        var min = boxGeometry._minimum;\r\n        var max = boxGeometry._maximum;\r\n        var vertexFormat = boxGeometry._vertexFormat;\r\n\r\n        if (Cartesian3.equals(min, max)) {\r\n            return;\r\n        }\r\n\r\n        var attributes = new GeometryAttributes();\r\n        var indices;\r\n        var positions;\r\n\r\n        if (vertexFormat.position &&\r\n                (vertexFormat.st || vertexFormat.normal || vertexFormat.tangent || vertexFormat.bitangent)) {\r\n            if (vertexFormat.position) {\r\n                // 8 corner points.  Duplicated 3 times each for each incident edge/face.\r\n                positions = new Float64Array(6 * 4 * 3);\r\n\r\n                // +z face\r\n                positions[0]  = min.x;\r\n                positions[1]  = min.y;\r\n                positions[2]  = max.z;\r\n                positions[3]  = max.x;\r\n                positions[4]  = min.y;\r\n                positions[5]  = max.z;\r\n                positions[6]  = max.x;\r\n                positions[7]  = max.y;\r\n                positions[8]  = max.z;\r\n                positions[9]  = min.x;\r\n                positions[10] = max.y;\r\n                positions[11] = max.z;\r\n\r\n                // -z face\r\n                positions[12] = min.x;\r\n                positions[13] = min.y;\r\n                positions[14] = min.z;\r\n                positions[15] = max.x;\r\n                positions[16] = min.y;\r\n                positions[17] = min.z;\r\n                positions[18] = max.x;\r\n                positions[19] = max.y;\r\n                positions[20] = min.z;\r\n                positions[21] = min.x;\r\n                positions[22] = max.y;\r\n                positions[23] = min.z;\r\n\r\n                // +x face\r\n                positions[24] = max.x;\r\n                positions[25] = min.y;\r\n                positions[26] = min.z;\r\n                positions[27] = max.x;\r\n                positions[28] = max.y;\r\n                positions[29] = min.z;\r\n                positions[30] = max.x;\r\n                positions[31] = max.y;\r\n                positions[32] = max.z;\r\n                positions[33] = max.x;\r\n                positions[34] = min.y;\r\n                positions[35] = max.z;\r\n\r\n                // -x face\r\n                positions[36] = min.x;\r\n                positions[37] = min.y;\r\n                positions[38] = min.z;\r\n                positions[39] = min.x;\r\n                positions[40] = max.y;\r\n                positions[41] = min.z;\r\n                positions[42] = min.x;\r\n                positions[43] = max.y;\r\n                positions[44] = max.z;\r\n                positions[45] = min.x;\r\n                positions[46] = min.y;\r\n                positions[47] = max.z;\r\n\r\n                // +y face\r\n                positions[48] = min.x;\r\n                positions[49] = max.y;\r\n                positions[50] = min.z;\r\n                positions[51] = max.x;\r\n                positions[52] = max.y;\r\n                positions[53] = min.z;\r\n                positions[54] = max.x;\r\n                positions[55] = max.y;\r\n                positions[56] = max.z;\r\n                positions[57] = min.x;\r\n                positions[58] = max.y;\r\n                positions[59] = max.z;\r\n\r\n                // -y face\r\n                positions[60] = min.x;\r\n                positions[61] = min.y;\r\n                positions[62] = min.z;\r\n                positions[63] = max.x;\r\n                positions[64] = min.y;\r\n                positions[65] = min.z;\r\n                positions[66] = max.x;\r\n                positions[67] = min.y;\r\n                positions[68] = max.z;\r\n                positions[69] = min.x;\r\n                positions[70] = min.y;\r\n                positions[71] = max.z;\r\n\r\n                attributes.position = new GeometryAttribute({\r\n                    componentDatatype : ComponentDatatype.DOUBLE,\r\n                    componentsPerAttribute : 3,\r\n                    values : positions\r\n                });\r\n            }\r\n\r\n            if (vertexFormat.normal) {\r\n                var normals = new Float32Array(6 * 4 * 3);\r\n\r\n                // +z face\r\n                normals[0]  = 0.0;\r\n                normals[1]  = 0.0;\r\n                normals[2]  = 1.0;\r\n                normals[3]  = 0.0;\r\n                normals[4]  = 0.0;\r\n                normals[5]  = 1.0;\r\n                normals[6]  = 0.0;\r\n                normals[7]  = 0.0;\r\n                normals[8]  = 1.0;\r\n                normals[9]  = 0.0;\r\n                normals[10] = 0.0;\r\n                normals[11] = 1.0;\r\n\r\n                // -z face\r\n                normals[12] = 0.0;\r\n                normals[13] = 0.0;\r\n                normals[14] = -1.0;\r\n                normals[15] = 0.0;\r\n                normals[16] = 0.0;\r\n                normals[17] = -1.0;\r\n                normals[18] = 0.0;\r\n                normals[19] = 0.0;\r\n                normals[20] = -1.0;\r\n                normals[21] = 0.0;\r\n                normals[22] = 0.0;\r\n                normals[23] = -1.0;\r\n\r\n                // +x face\r\n                normals[24] = 1.0;\r\n                normals[25] = 0.0;\r\n                normals[26] = 0.0;\r\n                normals[27] = 1.0;\r\n                normals[28] = 0.0;\r\n                normals[29] = 0.0;\r\n                normals[30] = 1.0;\r\n                normals[31] = 0.0;\r\n                normals[32] = 0.0;\r\n                normals[33] = 1.0;\r\n                normals[34] = 0.0;\r\n                normals[35] = 0.0;\r\n\r\n                // -x face\r\n                normals[36] = -1.0;\r\n                normals[37] = 0.0;\r\n                normals[38] = 0.0;\r\n                normals[39] = -1.0;\r\n                normals[40] = 0.0;\r\n                normals[41] = 0.0;\r\n                normals[42] = -1.0;\r\n                normals[43] = 0.0;\r\n                normals[44] = 0.0;\r\n                normals[45] = -1.0;\r\n                normals[46] = 0.0;\r\n                normals[47] = 0.0;\r\n\r\n                // +y face\r\n                normals[48] = 0.0;\r\n                normals[49] = 1.0;\r\n                normals[50] = 0.0;\r\n                normals[51] = 0.0;\r\n                normals[52] = 1.0;\r\n                normals[53] = 0.0;\r\n                normals[54] = 0.0;\r\n                normals[55] = 1.0;\r\n                normals[56] = 0.0;\r\n                normals[57] = 0.0;\r\n                normals[58] = 1.0;\r\n                normals[59] = 0.0;\r\n\r\n                // -y face\r\n                normals[60] = 0.0;\r\n                normals[61] = -1.0;\r\n                normals[62] = 0.0;\r\n                normals[63] = 0.0;\r\n                normals[64] = -1.0;\r\n                normals[65] = 0.0;\r\n                normals[66] = 0.0;\r\n                normals[67] = -1.0;\r\n                normals[68] = 0.0;\r\n                normals[69] = 0.0;\r\n                normals[70] = -1.0;\r\n                normals[71] = 0.0;\r\n\r\n                attributes.normal = new GeometryAttribute({\r\n                    componentDatatype : ComponentDatatype.FLOAT,\r\n                    componentsPerAttribute : 3,\r\n                    values : normals\r\n                });\r\n            }\r\n\r\n            if (vertexFormat.st) {\r\n                var texCoords = new Float32Array(6 * 4 * 2);\r\n\r\n                // +z face\r\n                texCoords[0]  = 0.0;\r\n                texCoords[1]  = 0.0;\r\n                texCoords[2]  = 1.0;\r\n                texCoords[3]  = 0.0;\r\n                texCoords[4]  = 1.0;\r\n                texCoords[5]  = 1.0;\r\n                texCoords[6]  = 0.0;\r\n                texCoords[7]  = 1.0;\r\n\r\n                // -z face\r\n                texCoords[8]  = 1.0;\r\n                texCoords[9]  = 0.0;\r\n                texCoords[10] = 0.0;\r\n                texCoords[11] = 0.0;\r\n                texCoords[12] = 0.0;\r\n                texCoords[13] = 1.0;\r\n                texCoords[14] = 1.0;\r\n                texCoords[15] = 1.0;\r\n\r\n                //+x face\r\n                texCoords[16] = 0.0;\r\n                texCoords[17] = 0.0;\r\n                texCoords[18] = 1.0;\r\n                texCoords[19] = 0.0;\r\n                texCoords[20] = 1.0;\r\n                texCoords[21] = 1.0;\r\n                texCoords[22] = 0.0;\r\n                texCoords[23] = 1.0;\r\n\r\n                // -x face\r\n                texCoords[24] = 1.0;\r\n                texCoords[25] = 0.0;\r\n                texCoords[26] = 0.0;\r\n                texCoords[27] = 0.0;\r\n                texCoords[28] = 0.0;\r\n                texCoords[29] = 1.0;\r\n                texCoords[30] = 1.0;\r\n                texCoords[31] = 1.0;\r\n\r\n                // +y face\r\n                texCoords[32] = 1.0;\r\n                texCoords[33] = 0.0;\r\n                texCoords[34] = 0.0;\r\n                texCoords[35] = 0.0;\r\n                texCoords[36] = 0.0;\r\n                texCoords[37] = 1.0;\r\n                texCoords[38] = 1.0;\r\n                texCoords[39] = 1.0;\r\n\r\n                // -y face\r\n                texCoords[40] = 0.0;\r\n                texCoords[41] = 0.0;\r\n                texCoords[42] = 1.0;\r\n                texCoords[43] = 0.0;\r\n                texCoords[44] = 1.0;\r\n                texCoords[45] = 1.0;\r\n                texCoords[46] = 0.0;\r\n                texCoords[47] = 1.0;\r\n\r\n                attributes.st = new GeometryAttribute({\r\n                    componentDatatype : ComponentDatatype.FLOAT,\r\n                    componentsPerAttribute : 2,\r\n                    values : texCoords\r\n                });\r\n            }\r\n\r\n            if (vertexFormat.tangent) {\r\n                var tangents = new Float32Array(6 * 4 * 3);\r\n\r\n                // +z face\r\n                tangents[0]  = 1.0;\r\n                tangents[1]  = 0.0;\r\n                tangents[2]  = 0.0;\r\n                tangents[3]  = 1.0;\r\n                tangents[4]  = 0.0;\r\n                tangents[5]  = 0.0;\r\n                tangents[6]  = 1.0;\r\n                tangents[7]  = 0.0;\r\n                tangents[8]  = 0.0;\r\n                tangents[9]  = 1.0;\r\n                tangents[10] = 0.0;\r\n                tangents[11] = 0.0;\r\n\r\n                // -z face\r\n                tangents[12] = -1.0;\r\n                tangents[13] = 0.0;\r\n                tangents[14] = 0.0;\r\n                tangents[15] = -1.0;\r\n                tangents[16] = 0.0;\r\n                tangents[17] = 0.0;\r\n                tangents[18] = -1.0;\r\n                tangents[19] = 0.0;\r\n                tangents[20] = 0.0;\r\n                tangents[21] = -1.0;\r\n                tangents[22] = 0.0;\r\n                tangents[23] = 0.0;\r\n\r\n                // +x face\r\n                tangents[24] = 0.0;\r\n                tangents[25] = 1.0;\r\n                tangents[26] = 0.0;\r\n                tangents[27] = 0.0;\r\n                tangents[28] = 1.0;\r\n                tangents[29] = 0.0;\r\n                tangents[30] = 0.0;\r\n                tangents[31] = 1.0;\r\n                tangents[32] = 0.0;\r\n                tangents[33] = 0.0;\r\n                tangents[34] = 1.0;\r\n                tangents[35] = 0.0;\r\n\r\n                // -x face\r\n                tangents[36] = 0.0;\r\n                tangents[37] = -1.0;\r\n                tangents[38] = 0.0;\r\n                tangents[39] = 0.0;\r\n                tangents[40] = -1.0;\r\n                tangents[41] = 0.0;\r\n                tangents[42] = 0.0;\r\n                tangents[43] = -1.0;\r\n                tangents[44] = 0.0;\r\n                tangents[45] = 0.0;\r\n                tangents[46] = -1.0;\r\n                tangents[47] = 0.0;\r\n\r\n                // +y face\r\n                tangents[48] = -1.0;\r\n                tangents[49] = 0.0;\r\n                tangents[50] = 0.0;\r\n                tangents[51] = -1.0;\r\n                tangents[52] = 0.0;\r\n                tangents[53] = 0.0;\r\n                tangents[54] = -1.0;\r\n                tangents[55] = 0.0;\r\n                tangents[56] = 0.0;\r\n                tangents[57] = -1.0;\r\n                tangents[58] = 0.0;\r\n                tangents[59] = 0.0;\r\n\r\n                // -y face\r\n                tangents[60] = 1.0;\r\n                tangents[61] = 0.0;\r\n                tangents[62] = 0.0;\r\n                tangents[63] = 1.0;\r\n                tangents[64] = 0.0;\r\n                tangents[65] = 0.0;\r\n                tangents[66] = 1.0;\r\n                tangents[67] = 0.0;\r\n                tangents[68] = 0.0;\r\n                tangents[69] = 1.0;\r\n                tangents[70] = 0.0;\r\n                tangents[71] = 0.0;\r\n\r\n                attributes.tangent = new GeometryAttribute({\r\n                    componentDatatype : ComponentDatatype.FLOAT,\r\n                    componentsPerAttribute : 3,\r\n                    values : tangents\r\n                });\r\n            }\r\n\r\n            if (vertexFormat.bitangent) {\r\n                var bitangents = new Float32Array(6 * 4 * 3);\r\n\r\n                // +z face\r\n                bitangents[0] = 0.0;\r\n                bitangents[1] = 1.0;\r\n                bitangents[2] = 0.0;\r\n                bitangents[3] = 0.0;\r\n                bitangents[4] = 1.0;\r\n                bitangents[5] = 0.0;\r\n                bitangents[6] = 0.0;\r\n                bitangents[7] = 1.0;\r\n                bitangents[8] = 0.0;\r\n                bitangents[9] = 0.0;\r\n                bitangents[10] = 1.0;\r\n                bitangents[11] = 0.0;\r\n\r\n                // -z face\r\n                bitangents[12] = 0.0;\r\n                bitangents[13] = 1.0;\r\n                bitangents[14] = 0.0;\r\n                bitangents[15] = 0.0;\r\n                bitangents[16] = 1.0;\r\n                bitangents[17] = 0.0;\r\n                bitangents[18] = 0.0;\r\n                bitangents[19] = 1.0;\r\n                bitangents[20] = 0.0;\r\n                bitangents[21] = 0.0;\r\n                bitangents[22] = 1.0;\r\n                bitangents[23] = 0.0;\r\n\r\n                // +x face\r\n                bitangents[24] = 0.0;\r\n                bitangents[25] = 0.0;\r\n                bitangents[26] = 1.0;\r\n                bitangents[27] = 0.0;\r\n                bitangents[28] = 0.0;\r\n                bitangents[29] = 1.0;\r\n                bitangents[30] = 0.0;\r\n                bitangents[31] = 0.0;\r\n                bitangents[32] = 1.0;\r\n                bitangents[33] = 0.0;\r\n                bitangents[34] = 0.0;\r\n                bitangents[35] = 1.0;\r\n\r\n                // -x face\r\n                bitangents[36] = 0.0;\r\n                bitangents[37] = 0.0;\r\n                bitangents[38] = 1.0;\r\n                bitangents[39] = 0.0;\r\n                bitangents[40] = 0.0;\r\n                bitangents[41] = 1.0;\r\n                bitangents[42] = 0.0;\r\n                bitangents[43] = 0.0;\r\n                bitangents[44] = 1.0;\r\n                bitangents[45] = 0.0;\r\n                bitangents[46] = 0.0;\r\n                bitangents[47] = 1.0;\r\n\r\n                // +y face\r\n                bitangents[48] = 0.0;\r\n                bitangents[49] = 0.0;\r\n                bitangents[50] = 1.0;\r\n                bitangents[51] = 0.0;\r\n                bitangents[52] = 0.0;\r\n                bitangents[53] = 1.0;\r\n                bitangents[54] = 0.0;\r\n                bitangents[55] = 0.0;\r\n                bitangents[56] = 1.0;\r\n                bitangents[57] = 0.0;\r\n                bitangents[58] = 0.0;\r\n                bitangents[59] = 1.0;\r\n\r\n                // -y face\r\n                bitangents[60] = 0.0;\r\n                bitangents[61] = 0.0;\r\n                bitangents[62] = 1.0;\r\n                bitangents[63] = 0.0;\r\n                bitangents[64] = 0.0;\r\n                bitangents[65] = 1.0;\r\n                bitangents[66] = 0.0;\r\n                bitangents[67] = 0.0;\r\n                bitangents[68] = 1.0;\r\n                bitangents[69] = 0.0;\r\n                bitangents[70] = 0.0;\r\n                bitangents[71] = 1.0;\r\n\r\n                attributes.bitangent = new GeometryAttribute({\r\n                    componentDatatype : ComponentDatatype.FLOAT,\r\n                    componentsPerAttribute : 3,\r\n                    values : bitangents\r\n                });\r\n            }\r\n\r\n            // 12 triangles:  6 faces, 2 triangles each.\r\n            indices = new Uint16Array(6 * 2 * 3);\r\n\r\n            // +z face\r\n            indices[0] = 0;\r\n            indices[1] = 1;\r\n            indices[2] = 2;\r\n            indices[3] = 0;\r\n            indices[4] = 2;\r\n            indices[5] = 3;\r\n\r\n            // -z face\r\n            indices[6] = 4 + 2;\r\n            indices[7] = 4 + 1;\r\n            indices[8] = 4 + 0;\r\n            indices[9] = 4 + 3;\r\n            indices[10] = 4 + 2;\r\n            indices[11] = 4 + 0;\r\n\r\n            // +x face\r\n            indices[12] = 8 + 0;\r\n            indices[13] = 8 + 1;\r\n            indices[14] = 8 + 2;\r\n            indices[15] = 8 + 0;\r\n            indices[16] = 8 + 2;\r\n            indices[17] = 8 + 3;\r\n\r\n            // -x face\r\n            indices[18] = 12 + 2;\r\n            indices[19] = 12 + 1;\r\n            indices[20] = 12 + 0;\r\n            indices[21] = 12 + 3;\r\n            indices[22] = 12 + 2;\r\n            indices[23] = 12 + 0;\r\n\r\n            // +y face\r\n            indices[24] = 16 + 2;\r\n            indices[25] = 16 + 1;\r\n            indices[26] = 16 + 0;\r\n            indices[27] = 16 + 3;\r\n            indices[28] = 16 + 2;\r\n            indices[29] = 16 + 0;\r\n\r\n            // -y face\r\n            indices[30] = 20 + 0;\r\n            indices[31] = 20 + 1;\r\n            indices[32] = 20 + 2;\r\n            indices[33] = 20 + 0;\r\n            indices[34] = 20 + 2;\r\n            indices[35] = 20 + 3;\r\n        } else {\r\n            // Positions only - no need to duplicate corner points\r\n            positions = new Float64Array(8 * 3);\r\n\r\n            positions[0] = min.x;\r\n            positions[1] = min.y;\r\n            positions[2] = min.z;\r\n            positions[3] = max.x;\r\n            positions[4] = min.y;\r\n            positions[5] = min.z;\r\n            positions[6] = max.x;\r\n            positions[7] = max.y;\r\n            positions[8] = min.z;\r\n            positions[9] = min.x;\r\n            positions[10] = max.y;\r\n            positions[11] = min.z;\r\n            positions[12] = min.x;\r\n            positions[13] = min.y;\r\n            positions[14] = max.z;\r\n            positions[15] = max.x;\r\n            positions[16] = min.y;\r\n            positions[17] = max.z;\r\n            positions[18] = max.x;\r\n            positions[19] = max.y;\r\n            positions[20] = max.z;\r\n            positions[21] = min.x;\r\n            positions[22] = max.y;\r\n            positions[23] = max.z;\r\n\r\n            attributes.position = new GeometryAttribute({\r\n                componentDatatype : ComponentDatatype.DOUBLE,\r\n                componentsPerAttribute : 3,\r\n                values : positions\r\n            });\r\n\r\n            // 12 triangles:  6 faces, 2 triangles each.\r\n            indices = new Uint16Array(6 * 2 * 3);\r\n\r\n            // plane z = corner.Z\r\n            indices[0] = 4;\r\n            indices[1] = 5;\r\n            indices[2] = 6;\r\n            indices[3] = 4;\r\n            indices[4] = 6;\r\n            indices[5] = 7;\r\n\r\n            // plane z = -corner.Z\r\n            indices[6] = 1;\r\n            indices[7] = 0;\r\n            indices[8] = 3;\r\n            indices[9] = 1;\r\n            indices[10] = 3;\r\n            indices[11] = 2;\r\n\r\n            // plane x = corner.X\r\n            indices[12] = 1;\r\n            indices[13] = 6;\r\n            indices[14] = 5;\r\n            indices[15] = 1;\r\n            indices[16] = 2;\r\n            indices[17] = 6;\r\n\r\n            // plane y = corner.Y\r\n            indices[18] = 2;\r\n            indices[19] = 3;\r\n            indices[20] = 7;\r\n            indices[21] = 2;\r\n            indices[22] = 7;\r\n            indices[23] = 6;\r\n\r\n            // plane x = -corner.X\r\n            indices[24] = 3;\r\n            indices[25] = 0;\r\n            indices[26] = 4;\r\n            indices[27] = 3;\r\n            indices[28] = 4;\r\n            indices[29] = 7;\r\n\r\n            // plane y = -corner.Y\r\n            indices[30] = 0;\r\n            indices[31] = 1;\r\n            indices[32] = 5;\r\n            indices[33] = 0;\r\n            indices[34] = 5;\r\n            indices[35] = 4;\r\n        }\r\n\r\n        var diff = Cartesian3.subtract(max, min, diffScratch);\r\n        var radius = Cartesian3.magnitude(diff) * 0.5;\r\n\r\n        if (defined(boxGeometry._offsetAttribute)) {\r\n            var length = positions.length;\r\n            var applyOffset = new Uint8Array(length / 3);\r\n            var offsetValue = boxGeometry._offsetAttribute === GeometryOffsetAttribute.NONE ? 0 : 1;\r\n            arrayFill(applyOffset, offsetValue);\r\n            attributes.applyOffset = new GeometryAttribute({\r\n                componentDatatype : ComponentDatatype.UNSIGNED_BYTE,\r\n                componentsPerAttribute : 1,\r\n                values: applyOffset\r\n            });\r\n        }\r\n\r\n        return new Geometry({\r\n            attributes : attributes,\r\n            indices : indices,\r\n            primitiveType : PrimitiveType.TRIANGLES,\r\n            boundingSphere : new BoundingSphere(Cartesian3.ZERO, radius),\r\n            offsetAttribute : boxGeometry._offsetAttribute\r\n        });\r\n    };\r\n\r\n    var unitBoxGeometry;\r\n\r\n    /**\r\n     * Returns the geometric representation of a unit box, including its vertices, indices, and a bounding sphere.\r\n     * @returns {Geometry} The computed vertices and indices.\r\n     *\r\n     * @private\r\n     */\r\n    BoxGeometry.getUnitBox = function() {\r\n        if (!defined(unitBoxGeometry)) {\r\n            unitBoxGeometry = BoxGeometry.createGeometry(BoxGeometry.fromDimensions({\r\n                dimensions : new Cartesian3(1.0, 1.0, 1.0),\r\n                vertexFormat : VertexFormat.POSITION_ONLY\r\n            }));\r\n        }\r\n        return unitBoxGeometry;\r\n    };\r\nexport default BoxGeometry;\r\n"],"names":["Cartesian3","defaultValue","Check","defined","GeometryOffsetAttribute","DeveloperError","VertexFormat","GeometryAttributes","GeometryAttribute","ComponentDatatype","arrayFill","Geometry","PrimitiveType","BoundingSphere"],"mappings":"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AAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;IAEtC;IACA,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;IAEtC;IACA,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;IAEtC;IACA,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;IAEtC;IACA,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;IAEtC;IACA,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAA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,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACnC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACnC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAElC;IACA,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAElC;IACA,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACnC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACnC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACnC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAClC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACnC,gBAAgB,OAAO,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAElC,gBAAgB,UAAU,CAAC,MAAM,GAAG,IAAID,mCAAiB,CAAC;IAC1D,oBAAoB,iBAAiB,GAAGC,mCAAiB,CAAC,KAAK;IAC/D,oBAAoB,sBAAsB,GAAG,CAAC;IAC9C,oBAAoB,MAAM,GAAG,OAAO;IACpC,iBAAiB,CAAC,CAAC;IACnB,aAAa;;IAEb,YAAY,IAAI,YAAY,CAAC,EAAE,EAAE;IACjC,gBAAgB,IAAI,SAAS,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;IAE5D;IACA,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;;IAEpC;IACA,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAEpC;IACA,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAEpC;IACA,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAEpC;IACA,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,SAAS,CAAC,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AAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAEnC;IACA,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACpC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACpC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACpC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACpC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAEnC;IACA,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACpC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACpC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACpC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACpC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAEnC;IACA,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACnC,gBAAgB,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAEnC,gBAAgB,UAAU,CAAC,OAAO,GAAG,IAAID,mCAAiB,CAAC;IAC3D,oBAAoB,iBAAiB,GAAGC,mCAAiB,CAAC,KAAK;IAC/D,oBAAoB,sBAAsB,GAAG,CAAC;IAC9C,oBAAoB,MAAM,GAAG,QAAQ;IACrC,iBAAiB,CAAC,CAAC;IACnB,aAAa;;IAEb,YAAY,IAAI,YAAY,CAAC,SAAS,EAAE;IACxC,gBAAgB,IAAI,UAAU,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;IAE7D;IACA,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAErC;IACA,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAErC;IACA,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAErC;IACA,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;IAErC;IACA,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBAAgB,UAAU,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACrC,gBA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"}