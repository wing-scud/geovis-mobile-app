{"version":3,"file":"createTaskProcessorWorker.js","sources":["../../../../Source/Core/formatError.js","../../../../Source/WorkersES6/createTaskProcessorWorker.js"],"sourcesContent":["import defined from './defined.js';\r\n\r\n    /**\r\n     * Formats an error object into a String.  If available, uses name, message, and stack\r\n     * properties, otherwise, falls back on toString().\r\n     *\r\n     * @exports formatError\r\n     *\r\n     * @param {*} object The item to find in the array.\r\n     * @returns {String} A string containing the formatted error.\r\n     */\r\n    function formatError(object) {\r\n        var result;\r\n\r\n        var name = object.name;\r\n        var message = object.message;\r\n        if (defined(name) && defined(message)) {\r\n            result = name + ': ' + message;\r\n        } else {\r\n            result = object.toString();\r\n        }\r\n\r\n        var stack = object.stack;\r\n        if (defined(stack)) {\r\n            result += '\\n' + stack;\r\n        }\r\n\r\n        return result;\r\n    }\r\nexport default formatError;\r\n","import defaultValue from '../Core/defaultValue.js';\r\nimport defined from '../Core/defined.js';\r\nimport formatError from '../Core/formatError.js';\r\nimport when from '../ThirdParty/when.js';\r\n\r\n    // createXXXGeometry functions may return Geometry or a Promise that resolves to Geometry\r\n    // if the function requires access to ApproximateTerrainHeights.\r\n    // For fully synchronous functions, just wrapping the function call in a `when` Promise doesn't\r\n    // handle errors correctly, hence try-catch\r\n    function callAndWrap(workerFunction, parameters, transferableObjects) {\r\n        var resultOrPromise;\r\n        try {\r\n            resultOrPromise = workerFunction(parameters, transferableObjects);\r\n            return resultOrPromise; // errors handled by Promise\r\n        } catch (e) {\r\n            return when.reject(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates an adapter function to allow a calculation function to operate as a Web Worker,\r\n     * paired with TaskProcessor, to receive tasks and return results.\r\n     *\r\n     * @exports createTaskProcessorWorker\r\n     *\r\n     * @param {createTaskProcessorWorker~WorkerFunction} workerFunction The calculation function,\r\n     *        which takes parameters and returns a result.\r\n     * @returns {createTaskProcessorWorker~TaskProcessorWorkerFunction} A function that adapts the\r\n     *          calculation function to work as a Web Worker onmessage listener with TaskProcessor.\r\n     *\r\n     *\r\n     * @example\r\n     * function doCalculation(parameters, transferableObjects) {\r\n     *   // calculate some result using the inputs in parameters\r\n     *   return result;\r\n     * }\r\n     *\r\n     * return Cesium.createTaskProcessorWorker(doCalculation);\r\n     * // the resulting function is compatible with TaskProcessor\r\n     *\r\n     * @see TaskProcessor\r\n     * @see {@link http://www.w3.org/TR/workers/|Web Workers}\r\n     * @see {@link http://www.w3.org/TR/html5/common-dom-interfaces.html#transferable-objects|Transferable objects}\r\n     */\r\n    function createTaskProcessorWorker(workerFunction) {\r\n        var postMessage;\r\n\r\n        return function(event) {\r\n            var data = event.data;\r\n\r\n            var transferableObjects = [];\r\n            var responseMessage = {\r\n                id : data.id,\r\n                result : undefined,\r\n                error : undefined\r\n            };\r\n\r\n            return when(callAndWrap(workerFunction, data.parameters, transferableObjects))\r\n                .then(function(result) {\r\n                    responseMessage.result = result;\r\n                })\r\n                .otherwise(function(e) {\r\n                    if (e instanceof Error) {\r\n                        // Errors can't be posted in a message, copy the properties\r\n                        responseMessage.error = {\r\n                            name : e.name,\r\n                            message : e.message,\r\n                            stack : e.stack\r\n                        };\r\n                    } else {\r\n                        responseMessage.error = e;\r\n                    }\r\n                })\r\n                .always(function() {\r\n                    if (!defined(postMessage)) {\r\n                        postMessage = defaultValue(self.webkitPostMessage, self.postMessage);\r\n                    }\r\n\r\n                    if (!data.canTransferArrayBuffer) {\r\n                        transferableObjects.length = 0;\r\n                    }\r\n\r\n                    try {\r\n                        postMessage(responseMessage, transferableObjects);\r\n                    } catch (e) {\r\n                        // something went wrong trying to post the message, post a simpler\r\n                        // error that we can be sure will be cloneable\r\n                        responseMessage.result = undefined;\r\n                        responseMessage.error = 'postMessage failed with error: ' + formatError(e) + '\\n  with responseMessage: ' + JSON.stringify(responseMessage);\r\n                        postMessage(responseMessage);\r\n                    }\r\n                });\r\n        };\r\n    }\r\n\r\n    /**\r\n     * A function that performs a calculation in a Web Worker.\r\n     * @callback createTaskProcessorWorker~WorkerFunction\r\n     *\r\n     * @param {Object} parameters Parameters to the calculation.\r\n     * @param {Array} transferableObjects An array that should be filled with references to objects inside\r\n     *        the result that should be transferred back to the main document instead of copied.\r\n     * @returns {Object} The result of the calculation.\r\n     *\r\n     * @example\r\n     * function calculate(parameters, transferableObjects) {\r\n     *   // perform whatever calculation is necessary.\r\n     *   var typedArray = new Float32Array(0);\r\n     *\r\n     *   // typed arrays are transferable\r\n     *   transferableObjects.push(typedArray)\r\n     *\r\n     *   return {\r\n     *      typedArray : typedArray\r\n     *   };\r\n     * }\r\n     */\r\n\r\n    /**\r\n     * A Web Worker message event handler function that handles the interaction with TaskProcessor,\r\n     * specifically, task ID management and posting a response message containing the result.\r\n     * @callback createTaskProcessorWorker~TaskProcessorWorkerFunction\r\n     *\r\n     * @param {Object} event The onmessage event object.\r\n     */\r\nexport default createTaskProcessorWorker;\r\n"],"names":["defined","when","defaultValue"],"mappings":"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"}