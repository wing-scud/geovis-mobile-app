{"version":3,"file":"EllipsoidGeodesic-2bb0e6b5.js","sources":["../../../../Source/Core/EllipsoidGeodesic.js"],"sourcesContent":["import Cartesian3 from './Cartesian3.js';\r\nimport Cartographic from './Cartographic.js';\r\nimport Check from './Check.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport Ellipsoid from './Ellipsoid.js';\r\nimport CesiumMath from './Math.js';\r\n\r\n    function setConstants(ellipsoidGeodesic) {\r\n        var uSquared = ellipsoidGeodesic._uSquared;\r\n        var a = ellipsoidGeodesic._ellipsoid.maximumRadius;\r\n        var b = ellipsoidGeodesic._ellipsoid.minimumRadius;\r\n        var f = (a - b) / a;\r\n\r\n        var cosineHeading = Math.cos(ellipsoidGeodesic._startHeading);\r\n        var sineHeading = Math.sin(ellipsoidGeodesic._startHeading);\r\n\r\n        var tanU = (1 - f) * Math.tan(ellipsoidGeodesic._start.latitude);\r\n\r\n        var cosineU = 1.0 / Math.sqrt(1.0 + tanU * tanU);\r\n        var sineU = cosineU * tanU;\r\n\r\n        var sigma = Math.atan2(tanU, cosineHeading);\r\n\r\n        var sineAlpha = cosineU * sineHeading;\r\n        var sineSquaredAlpha = sineAlpha * sineAlpha;\r\n\r\n        var cosineSquaredAlpha = 1.0 - sineSquaredAlpha;\r\n        var cosineAlpha = Math.sqrt(cosineSquaredAlpha);\r\n\r\n        var u2Over4 = uSquared / 4.0;\r\n        var u4Over16 = u2Over4 * u2Over4;\r\n        var u6Over64 = u4Over16 * u2Over4;\r\n        var u8Over256 = u4Over16 * u4Over16;\r\n\r\n        var a0 = (1.0 + u2Over4 - 3.0 * u4Over16 / 4.0 + 5.0 * u6Over64 / 4.0 - 175.0 * u8Over256 / 64.0);\r\n        var a1 = (1.0 - u2Over4 + 15.0 * u4Over16 / 8.0 - 35.0 * u6Over64 / 8.0);\r\n        var a2 = (1.0 - 3.0 * u2Over4 + 35.0 * u4Over16 / 4.0);\r\n        var a3 = (1.0 - 5.0 * u2Over4);\r\n\r\n        var distanceRatio = a0 * sigma - a1 * Math.sin(2.0 * sigma) * u2Over4 / 2.0 - a2 * Math.sin(4.0 * sigma) * u4Over16 / 16.0 -\r\n                            a3 * Math.sin(6.0 * sigma) * u6Over64 / 48.0 - Math.sin(8.0 * sigma) * 5.0 * u8Over256 / 512;\r\n\r\n        var constants = ellipsoidGeodesic._constants;\r\n\r\n        constants.a = a;\r\n        constants.b = b;\r\n        constants.f = f;\r\n        constants.cosineHeading = cosineHeading;\r\n        constants.sineHeading = sineHeading;\r\n        constants.tanU = tanU;\r\n        constants.cosineU = cosineU;\r\n        constants.sineU = sineU;\r\n        constants.sigma = sigma;\r\n        constants.sineAlpha = sineAlpha;\r\n        constants.sineSquaredAlpha = sineSquaredAlpha;\r\n        constants.cosineSquaredAlpha = cosineSquaredAlpha;\r\n        constants.cosineAlpha = cosineAlpha;\r\n        constants.u2Over4 = u2Over4;\r\n        constants.u4Over16 = u4Over16;\r\n        constants.u6Over64 = u6Over64;\r\n        constants.u8Over256 = u8Over256;\r\n        constants.a0 = a0;\r\n        constants.a1 = a1;\r\n        constants.a2 = a2;\r\n        constants.a3 = a3;\r\n        constants.distanceRatio = distanceRatio;\r\n    }\r\n\r\n    function computeC(f, cosineSquaredAlpha) {\r\n        return f * cosineSquaredAlpha * (4.0 + f * (4.0 - 3.0 * cosineSquaredAlpha)) / 16.0;\r\n    }\r\n\r\n    function computeDeltaLambda(f, sineAlpha, cosineSquaredAlpha, sigma, sineSigma, cosineSigma, cosineTwiceSigmaMidpoint) {\r\n        var C = computeC(f, cosineSquaredAlpha);\r\n\r\n        return (1.0 - C) * f * sineAlpha * (sigma + C * sineSigma * (cosineTwiceSigmaMidpoint +\r\n                C * cosineSigma * (2.0 * cosineTwiceSigmaMidpoint * cosineTwiceSigmaMidpoint - 1.0)));\r\n    }\r\n\r\n    function vincentyInverseFormula(ellipsoidGeodesic, major, minor, firstLongitude, firstLatitude, secondLongitude, secondLatitude) {\r\n        var eff = (major - minor) / major;\r\n        var l = secondLongitude - firstLongitude;\r\n\r\n        var u1 = Math.atan((1 - eff) * Math.tan(firstLatitude));\r\n        var u2 = Math.atan((1 - eff) * Math.tan(secondLatitude));\r\n\r\n        var cosineU1 = Math.cos(u1);\r\n        var sineU1 = Math.sin(u1);\r\n        var cosineU2 = Math.cos(u2);\r\n        var sineU2 = Math.sin(u2);\r\n\r\n        var cc = cosineU1 * cosineU2;\r\n        var cs = cosineU1 * sineU2;\r\n        var ss = sineU1 * sineU2;\r\n        var sc = sineU1 * cosineU2;\r\n\r\n        var lambda = l;\r\n        var lambdaDot = CesiumMath.TWO_PI;\r\n\r\n        var cosineLambda = Math.cos(lambda);\r\n        var sineLambda = Math.sin(lambda);\r\n\r\n        var sigma;\r\n        var cosineSigma;\r\n        var sineSigma;\r\n        var cosineSquaredAlpha;\r\n        var cosineTwiceSigmaMidpoint;\r\n\r\n        do {\r\n            cosineLambda = Math.cos(lambda);\r\n            sineLambda = Math.sin(lambda);\r\n\r\n            var temp = cs - sc * cosineLambda;\r\n            sineSigma = Math.sqrt(cosineU2 * cosineU2 * sineLambda * sineLambda + temp * temp);\r\n            cosineSigma = ss + cc * cosineLambda;\r\n\r\n            sigma = Math.atan2(sineSigma, cosineSigma);\r\n\r\n            var sineAlpha;\r\n\r\n            if (sineSigma === 0.0) {\r\n                sineAlpha = 0.0;\r\n                cosineSquaredAlpha = 1.0;\r\n            } else {\r\n                sineAlpha = cc * sineLambda / sineSigma;\r\n                cosineSquaredAlpha = 1.0 - sineAlpha * sineAlpha;\r\n            }\r\n\r\n            lambdaDot = lambda;\r\n\r\n            cosineTwiceSigmaMidpoint = cosineSigma - 2.0 * ss / cosineSquaredAlpha;\r\n\r\n            if (isNaN(cosineTwiceSigmaMidpoint)) {\r\n                cosineTwiceSigmaMidpoint = 0.0;\r\n            }\r\n\r\n            lambda = l + computeDeltaLambda(eff, sineAlpha, cosineSquaredAlpha,\r\n                                            sigma, sineSigma, cosineSigma, cosineTwiceSigmaMidpoint);\r\n        } while (Math.abs(lambda - lambdaDot) > CesiumMath.EPSILON12);\r\n\r\n        var uSquared = cosineSquaredAlpha * (major * major - minor * minor) / (minor * minor);\r\n        var A = 1.0 + uSquared * (4096.0 + uSquared * (uSquared * (320.0 - 175.0 * uSquared) - 768.0)) / 16384.0;\r\n        var B = uSquared * (256.0 + uSquared * (uSquared * (74.0 - 47.0 * uSquared) - 128.0)) / 1024.0;\r\n\r\n        var cosineSquaredTwiceSigmaMidpoint = cosineTwiceSigmaMidpoint * cosineTwiceSigmaMidpoint;\r\n        var deltaSigma = B * sineSigma * (cosineTwiceSigmaMidpoint + B * (cosineSigma *\r\n                (2.0 * cosineSquaredTwiceSigmaMidpoint - 1.0) - B * cosineTwiceSigmaMidpoint *\r\n                (4.0 * sineSigma * sineSigma - 3.0) * (4.0 * cosineSquaredTwiceSigmaMidpoint - 3.0) / 6.0) / 4.0);\r\n\r\n        var distance = minor * A * (sigma - deltaSigma);\r\n\r\n        var startHeading = Math.atan2(cosineU2 * sineLambda, cs - sc * cosineLambda);\r\n        var endHeading = Math.atan2(cosineU1 * sineLambda, cs * cosineLambda - sc);\r\n\r\n        ellipsoidGeodesic._distance = distance;\r\n        ellipsoidGeodesic._startHeading = startHeading;\r\n        ellipsoidGeodesic._endHeading = endHeading;\r\n        ellipsoidGeodesic._uSquared = uSquared;\r\n    }\r\n\r\n    var scratchCart1 = new Cartesian3();\r\n    var scratchCart2 = new Cartesian3();\r\n    function computeProperties(ellipsoidGeodesic, start, end, ellipsoid) {\r\n        var firstCartesian = Cartesian3.normalize(ellipsoid.cartographicToCartesian(start, scratchCart2), scratchCart1);\r\n        var lastCartesian = Cartesian3.normalize(ellipsoid.cartographicToCartesian(end, scratchCart2), scratchCart2);\r\n\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.number.greaterThanOrEquals('value', Math.abs(Math.abs(Cartesian3.angleBetween(firstCartesian, lastCartesian)) - Math.PI), 0.0125);\r\n        //>>includeEnd('debug');\r\n\r\n        vincentyInverseFormula(ellipsoidGeodesic, ellipsoid.maximumRadius, ellipsoid.minimumRadius,\r\n                               start.longitude, start.latitude, end.longitude, end.latitude);\r\n\r\n        ellipsoidGeodesic._start = Cartographic.clone(start, ellipsoidGeodesic._start);\r\n        ellipsoidGeodesic._end = Cartographic.clone(end, ellipsoidGeodesic._end);\r\n        ellipsoidGeodesic._start.height = 0;\r\n        ellipsoidGeodesic._end.height = 0;\r\n\r\n        setConstants(ellipsoidGeodesic);\r\n    }\r\n\r\n    /**\r\n     * Initializes a geodesic on the ellipsoid connecting the two provided planetodetic points.\r\n     *\r\n     * @alias EllipsoidGeodesic\r\n     * @constructor\r\n     *\r\n     * @param {Cartographic} [start] The initial planetodetic point on the path.\r\n     * @param {Cartographic} [end] The final planetodetic point on the path.\r\n     * @param {Ellipsoid} [ellipsoid=Ellipsoid.WGS84] The ellipsoid on which the geodesic lies.\r\n     */\r\n    function EllipsoidGeodesic(start, end, ellipsoid) {\r\n        var e = defaultValue(ellipsoid, Ellipsoid.WGS84);\r\n        this._ellipsoid = e;\r\n        this._start = new Cartographic();\r\n        this._end = new Cartographic();\r\n\r\n        this._constants = {};\r\n        this._startHeading = undefined;\r\n        this._endHeading = undefined;\r\n        this._distance = undefined;\r\n        this._uSquared = undefined;\r\n\r\n        if (defined(start) && defined(end)) {\r\n            computeProperties(this, start, end, e);\r\n        }\r\n    }\r\n\r\n    Object.defineProperties(EllipsoidGeodesic.prototype, {\r\n        /**\r\n         * Gets the ellipsoid.\r\n         * @memberof EllipsoidGeodesic.prototype\r\n         * @type {Ellipsoid}\r\n         * @readonly\r\n         */\r\n        ellipsoid : {\r\n            get : function() {\r\n                return this._ellipsoid;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the surface distance between the start and end point\r\n         * @memberof EllipsoidGeodesic.prototype\r\n         * @type {Number}\r\n         * @readonly\r\n         */\r\n        surfaceDistance : {\r\n            get : function() {\r\n                //>>includeStart('debug', pragmas.debug);\r\n                Check.defined('distance', this._distance);\r\n                //>>includeEnd('debug');\r\n\r\n                return this._distance;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the initial planetodetic point on the path.\r\n         * @memberof EllipsoidGeodesic.prototype\r\n         * @type {Cartographic}\r\n         * @readonly\r\n         */\r\n        start : {\r\n            get : function() {\r\n                return this._start;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the final planetodetic point on the path.\r\n         * @memberof EllipsoidGeodesic.prototype\r\n         * @type {Cartographic}\r\n         * @readonly\r\n         */\r\n        end : {\r\n            get : function() {\r\n                return this._end;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the heading at the initial point.\r\n         * @memberof EllipsoidGeodesic.prototype\r\n         * @type {Number}\r\n         * @readonly\r\n         */\r\n        startHeading : {\r\n            get : function() {\r\n                //>>includeStart('debug', pragmas.debug);\r\n                Check.defined('distance', this._distance);\r\n                //>>includeEnd('debug');\r\n\r\n                return this._startHeading;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the heading at the final point.\r\n         * @memberof EllipsoidGeodesic.prototype\r\n         * @type {Number}\r\n         * @readonly\r\n         */\r\n        endHeading : {\r\n            get : function() {\r\n                //>>includeStart('debug', pragmas.debug);\r\n                Check.defined('distance', this._distance);\r\n                //>>includeEnd('debug');\r\n\r\n                return this._endHeading;\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Sets the start and end points of the geodesic\r\n     *\r\n     * @param {Cartographic} start The initial planetodetic point on the path.\r\n     * @param {Cartographic} end The final planetodetic point on the path.\r\n     */\r\n    EllipsoidGeodesic.prototype.setEndPoints = function(start, end) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('start', start);\r\n        Check.defined('end', end);\r\n        //>>includeEnd('debug');\r\n\r\n        computeProperties(this, start, end, this._ellipsoid);\r\n    };\r\n\r\n    /**\r\n     * Provides the location of a point at the indicated portion along the geodesic.\r\n     *\r\n     * @param {Number} fraction The portion of the distance between the initial and final points.\r\n     * @param {Cartographic} result The object in which to store the result.\r\n     * @returns {Cartographic} The location of the point along the geodesic.\r\n     */\r\n    EllipsoidGeodesic.prototype.interpolateUsingFraction = function(fraction, result) {\r\n        return this.interpolateUsingSurfaceDistance(this._distance * fraction, result);\r\n    };\r\n\r\n    /**\r\n     * Provides the location of a point at the indicated distance along the geodesic.\r\n     *\r\n     * @param {Number} distance The distance from the inital point to the point of interest along the geodesic\r\n     * @param {Cartographic} result The object in which to store the result.\r\n     * @returns {Cartographic} The location of the point along the geodesic.\r\n     *\r\n     * @exception {DeveloperError} start and end must be set before calling function interpolateUsingSurfaceDistance\r\n     */\r\n    EllipsoidGeodesic.prototype.interpolateUsingSurfaceDistance = function(distance, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('distance', this._distance);\r\n        //>>includeEnd('debug');\r\n\r\n        var constants = this._constants;\r\n\r\n        var s = constants.distanceRatio + distance / constants.b;\r\n\r\n        var cosine2S = Math.cos(2.0 * s);\r\n        var cosine4S = Math.cos(4.0 * s);\r\n        var cosine6S = Math.cos(6.0 * s);\r\n        var sine2S = Math.sin(2.0 * s);\r\n        var sine4S = Math.sin(4.0 * s);\r\n        var sine6S = Math.sin(6.0 * s);\r\n        var sine8S = Math.sin(8.0 * s);\r\n\r\n        var s2 = s * s;\r\n        var s3 = s * s2;\r\n\r\n        var u8Over256 = constants.u8Over256;\r\n        var u2Over4 = constants.u2Over4;\r\n        var u6Over64 = constants.u6Over64;\r\n        var u4Over16 = constants.u4Over16;\r\n        var sigma = 2.0 * s3 * u8Over256 * cosine2S / 3.0 +\r\n            s * (1.0 - u2Over4 + 7.0 * u4Over16 / 4.0 - 15.0 * u6Over64 / 4.0 + 579.0 * u8Over256 / 64.0 -\r\n            (u4Over16 - 15.0 * u6Over64 / 4.0 + 187.0 * u8Over256 / 16.0) * cosine2S -\r\n            (5.0 * u6Over64 / 4.0 - 115.0 * u8Over256 / 16.0) * cosine4S -\r\n            29.0 * u8Over256 * cosine6S / 16.0) +\r\n            (u2Over4 / 2.0 - u4Over16 + 71.0 * u6Over64 / 32.0 - 85.0 * u8Over256 / 16.0) * sine2S +\r\n            (5.0 * u4Over16 / 16.0 - 5.0 * u6Over64 / 4.0 + 383.0 * u8Over256 / 96.0) * sine4S -\r\n            s2 * ((u6Over64 - 11.0 * u8Over256 / 2.0) * sine2S + 5.0 * u8Over256 * sine4S / 2.0) +\r\n            (29.0 * u6Over64 / 96.0 - 29.0 * u8Over256 / 16.0) * sine6S +\r\n            539.0 * u8Over256 * sine8S / 1536.0;\r\n\r\n        var theta = Math.asin(Math.sin(sigma) * constants.cosineAlpha);\r\n        var latitude = Math.atan(constants.a / constants.b * Math.tan(theta));\r\n\r\n        // Redefine in terms of relative argument of latitude.\r\n        sigma = sigma - constants.sigma;\r\n\r\n        var cosineTwiceSigmaMidpoint = Math.cos(2.0 * constants.sigma + sigma);\r\n\r\n        var sineSigma = Math.sin(sigma);\r\n        var cosineSigma = Math.cos(sigma);\r\n\r\n        var cc = constants.cosineU * cosineSigma;\r\n        var ss = constants.sineU * sineSigma;\r\n\r\n        var lambda = Math.atan2(sineSigma * constants.sineHeading, cc - ss * constants.cosineHeading);\r\n\r\n        var l = lambda - computeDeltaLambda(constants.f, constants.sineAlpha, constants.cosineSquaredAlpha,\r\n                                            sigma, sineSigma, cosineSigma, cosineTwiceSigmaMidpoint);\r\n\r\n        if (defined(result)) {\r\n            result.longitude = this._start.longitude + l;\r\n            result.latitude = latitude;\r\n            result.height = 0.0;\r\n            return result;\r\n        }\r\n\r\n        return new Cartographic(this._start.longitude + l, latitude, 0.0);\r\n    };\r\nexport default EllipsoidGeodesic;\r\n"],"names":["CesiumMath","Cartesian3","Check","Cartographic","defaultValue","Ellipsoid","defined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAQI,SAAS,YAAY,CAAC,iBAAiB,EAAE;IAC7C,QAAQ,IAAI,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC;IACnD,QAAQ,IAAI,CAAC,GAAG,iBAAiB,CAAC,UAAU,CAAC,aAAa,CAAC;IAC3D,QAAQ,IAAI,CAAC,GAAG,iBAAiB,CAAC,UAAU,CAAC,aAAa,CAAC;IAC3D,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;IAE5B,QAAQ,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;IACtE,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;;IAEpE,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;;IAEzE,QAAQ,IAAI,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;IACzD,QAAQ,IAAI,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC;;IAEnC,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;;IAEpD,QAAQ,IAAI,SAAS,GAAG,OAAO,GAAG,WAAW,CAAC;IAC9C,QAAQ,IAAI,gBAAgB,GAAG,SAAS,GAAG,SAAS,CAAC;;IAErD,QAAQ,IAAI,kBAAkB,GAAG,GAAG,GAAG,gBAAgB,CAAC;IACxD,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;;IAExD,QAAQ,IAAI,OAAO,GAAG,QAAQ,GAAG,GAAG,CAAC;IACrC,QAAQ,IAAI,QAAQ,GAAG,OAAO,GAAG,OAAO,CAAC;IACzC,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC;IAC1C,QAAQ,IAAI,SAAS,GAAG,QAAQ,GAAG,QAAQ,CAAC;;IAE5C,QAAQ,IAAI,EAAE,IAAI,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,CAAC;IAC1G,QAAQ,IAAI,EAAE,IAAI,GAAG,GAAG,OAAO,GAAG,IAAI,GAAG,QAAQ,GAAG,GAAG,GAAG,IAAI,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;IACjF,QAAQ,IAAI,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,OAAO,GAAG,IAAI,GAAG,QAAQ,GAAG,GAAG,CAAC,CAAC;IAC/D,QAAQ,IAAI,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;;IAEvC,QAAQ,IAAI,aAAa,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,OAAO,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,QAAQ,GAAG,IAAI;IAClI,4BAA4B,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,CAAC;;IAEzH,QAAQ,IAAI,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC;;IAErD,QAAQ,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;IACxB,QAAQ,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;IACxB,QAAQ,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC;IACxB,QAAQ,SAAS,CAAC,aAAa,GAAG,aAAa,CAAC;IAChD,QAAQ,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;IAC5C,QAAQ,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;IAC9B,QAAQ,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;IACpC,QAAQ,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;IAChC,QAAQ,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;IAChC,QAAQ,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;IACxC,QAAQ,SAAS,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IACtD,QAAQ,SAAS,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;IAC1D,QAAQ,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;IAC5C,QAAQ,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;IACpC,QAAQ,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACtC,QAAQ,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACtC,QAAQ,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;IACxC,QAAQ,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC;IAC1B,QAAQ,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC;IAC1B,QAAQ,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC;IAC1B,QAAQ,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC;IAC1B,QAAQ,SAAS,CAAC,aAAa,GAAG,aAAa,CAAC;IAChD,KAAK;;IAEL,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAE,kBAAkB,EAAE;IAC7C,QAAQ,OAAO,CAAC,GAAG,kBAAkB,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,kBAAkB,CAAC,CAAC,GAAG,IAAI,CAAC;IAC5F,KAAK;;IAEL,IAAI,SAAS,kBAAkB,CAAC,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE,wBAAwB,EAAE;IAC3H,QAAQ,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC;;IAEhD,QAAQ,OAAO,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,SAAS,IAAI,KAAK,GAAG,CAAC,GAAG,SAAS,IAAI,wBAAwB;IAC7F,gBAAgB,CAAC,GAAG,WAAW,IAAI,GAAG,GAAG,wBAAwB,GAAG,wBAAwB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACtG,KAAK;;IAEL,IAAI,SAAS,sBAAsB,CAAC,iBAAiB,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,cAAc,EAAE;IACrI,QAAQ,IAAI,GAAG,GAAG,CAAC,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC;IAC1C,QAAQ,IAAI,CAAC,GAAG,eAAe,GAAG,cAAc,CAAC;;IAEjD,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;IAChE,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;;IAEjE,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACpC,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAClC,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACpC,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;;IAElC,QAAQ,IAAI,EAAE,GAAG,QAAQ,GAAG,QAAQ,CAAC;IACrC,QAAQ,IAAI,EAAE,GAAG,QAAQ,GAAG,MAAM,CAAC;IACnC,QAAQ,IAAI,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;IACjC,QAAQ,IAAI,EAAE,GAAG,MAAM,GAAG,QAAQ,CAAC;;IAEnC,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC;IACvB,QAAQ,IAAI,SAAS,GAAGA,gBAAU,CAAC,MAAM,CAAC;;IAE1C,QAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC5C,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;IAE1C,QAAQ,IAAI,KAAK,CAAC;IAClB,QAAQ,IAAI,WAAW,CAAC;IACxB,QAAQ,IAAI,SAAS,CAAC;IACtB,QAAQ,IAAI,kBAAkB,CAAC;IAC/B,QAAQ,IAAI,wBAAwB,CAAC;;IAErC,QAAQ,GAAG;IACX,YAAY,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC5C,YAAY,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;IAE1C,YAAY,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,YAAY,CAAC;IAC9C,YAAY,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,UAAU,GAAG,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;IAC/F,YAAY,WAAW,GAAG,EAAE,GAAG,EAAE,GAAG,YAAY,CAAC;;IAEjD,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;;IAEvD,YAAY,IAAI,SAAS,CAAC;;IAE1B,YAAY,IAAI,SAAS,KAAK,GAAG,EAAE;IACnC,gBAAgB,SAAS,GAAG,GAAG,CAAC;IAChC,gBAAgB,kBAAkB,GAAG,GAAG,CAAC;IACzC,aAAa,MAAM;IACnB,gBAAgB,SAAS,GAAG,EAAE,GAAG,UAAU,GAAG,SAAS,CAAC;IACxD,gBAAgB,kBAAkB,GAAG,GAAG,GAAG,SAAS,GAAG,SAAS,CAAC;IACjE,aAAa;;IAEb,YAAY,SAAS,GAAG,MAAM,CAAC;;IAE/B,YAAY,wBAAwB,GAAG,WAAW,GAAG,GAAG,GAAG,EAAE,GAAG,kBAAkB,CAAC;;IAEnF,YAAY,IAAI,KAAK,CAAC,wBAAwB,CAAC,EAAE;IACjD,gBAAgB,wBAAwB,GAAG,GAAG,CAAC;IAC/C,aAAa;;IAEb,YAAY,MAAM,GAAG,CAAC,GAAG,kBAAkB,CAAC,GAAG,EAAE,SAAS,EAAE,kBAAkB;IAC9E,4CAA4C,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE,wBAAwB,CAAC,CAAC;IACrG,SAAS,QAAQ,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,SAAS,CAAC,GAAGA,gBAAU,CAAC,SAAS,EAAE;;IAEtE,QAAQ,IAAI,QAAQ,GAAG,kBAAkB,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC;IAC9F,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,QAAQ,IAAI,MAAM,GAAG,QAAQ,IAAI,QAAQ,IAAI,KAAK,GAAG,KAAK,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC;IACjH,QAAQ,IAAI,CAAC,GAAG,QAAQ,IAAI,KAAK,GAAG,QAAQ,IAAI,QAAQ,IAAI,IAAI,GAAG,IAAI,GAAG,QAAQ,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;;IAEvG,QAAQ,IAAI,+BAA+B,GAAG,wBAAwB,GAAG,wBAAwB,CAAC;IAClG,QAAQ,IAAI,UAAU,GAAG,CAAC,GAAG,SAAS,IAAI,wBAAwB,GAAG,CAAC,IAAI,WAAW;IACrF,iBAAiB,GAAG,GAAG,+BAA+B,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,wBAAwB;IAC5F,iBAAiB,GAAG,GAAG,SAAS,GAAG,SAAS,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,+BAA+B,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;;IAElH,QAAQ,IAAI,QAAQ,GAAG,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,UAAU,CAAC,CAAC;;IAExD,QAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,EAAE,EAAE,GAAG,EAAE,GAAG,YAAY,CAAC,CAAC;IACrF,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,EAAE,EAAE,GAAG,YAAY,GAAG,EAAE,CAAC,CAAC;;IAEnF,QAAQ,iBAAiB,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC/C,QAAQ,iBAAiB,CAAC,aAAa,GAAG,YAAY,CAAC;IACvD,QAAQ,iBAAiB,CAAC,WAAW,GAAG,UAAU,CAAC;IACnD,QAAQ,iBAAiB,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC/C,KAAK;;IAEL,IAAI,IAAI,YAAY,GAAG,IAAIC,qBAAU,EAAE,CAAC;IACxC,IAAI,IAAI,YAAY,GAAG,IAAIA,qBAAU,EAAE,CAAC;IACxC,IAAI,SAAS,iBAAiB,CAAC,iBAAiB,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE;IACzE,QAAQ,IAAI,cAAc,GAAGA,qBAAU,CAAC,SAAS,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC;IACxH,QAAQ,IAAI,aAAa,GAAGA,qBAAU,CAAC,SAAS,CAAC,SAAS,CAAC,uBAAuB,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC;;IAErH;IACA,QAAQC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAACD,qBAAU,CAAC,YAAY,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IACvJ;;IAEA,QAAQ,sBAAsB,CAAC,iBAAiB,EAAE,SAAS,CAAC,aAAa,EAAE,SAAS,CAAC,aAAa;IAClG,+BAA+B,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;;IAE7F,QAAQ,iBAAiB,CAAC,MAAM,GAAGE,uBAAY,CAAC,KAAK,CAAC,KAAK,EAAE,iBAAiB,CAAC,MAAM,CAAC,CAAC;IACvF,QAAQ,iBAAiB,CAAC,IAAI,GAAGA,uBAAY,CAAC,KAAK,CAAC,GAAG,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACjF,QAAQ,iBAAiB,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5C,QAAQ,iBAAiB,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;IAE1C,QAAQ,YAAY,CAAC,iBAAiB,CAAC,CAAC;IACxC,KAAK;;IAEL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,iBAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE;IACtD,QAAQ,IAAI,CAAC,GAAGC,yBAAY,CAAC,SAAS,EAAEC,oBAAS,CAAC,KAAK,CAAC,CAAC;IACzD,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IAC5B,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAIF,uBAAY,EAAE,CAAC;IACzC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAIA,uBAAY,EAAE,CAAC;;IAEvC,QAAQ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IAC7B,QAAQ,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;IACvC,QAAQ,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;IACrC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IACnC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;IAEnC,QAAQ,IAAIG,eAAO,CAAC,KAAK,CAAC,IAAIA,eAAO,CAAC,GAAG,CAAC,EAAE;IAC5C,YAAY,iBAAiB,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACnD,SAAS;IACT,KAAK;;IAEL,IAAI,MAAM,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,SAAS,EAAE;IACzD;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,GAAG;IACpB,YAAY,GAAG,GAAG,WAAW;IAC7B,gBAAgB,OAAO,IAAI,CAAC,UAAU,CAAC;IACvC,aAAa;IACb,SAAS;;IAET;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,eAAe,GAAG;IAC1B,YAAY,GAAG,GAAG,WAAW;IAC7B;IACA,gBAAgBJ,WAAK,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1D;;IAEA,gBAAgB,OAAO,IAAI,CAAC,SAAS,CAAC;IACtC,aAAa;IACb,SAAS;;IAET;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,KAAK,GAAG;IAChB,YAAY,GAAG,GAAG,WAAW;IAC7B,gBAAgB,OAAO,IAAI,CAAC,MAAM,CAAC;IACnC,aAAa;IACb,SAAS;;IAET;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,GAAG,GAAG;IACd,YAAY,GAAG,GAAG,WAAW;IAC7B,gBAAgB,OAAO,IAAI,CAAC,IAAI,CAAC;IACjC,aAAa;IACb,SAAS;;IAET;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,YAAY,GAAG;IACvB,YAAY,GAAG,GAAG,WAAW;IAC7B;IACA,gBAAgBA,WAAK,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1D;;IAEA,gBAAgB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC1C,aAAa;IACb,SAAS;;IAET;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,UAAU,GAAG;IACrB,YAAY,GAAG,GAAG,WAAW;IAC7B;IACA,gBAAgBA,WAAK,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1D;;IAEA,gBAAgB,OAAO,IAAI,CAAC,WAAW,CAAC;IACxC,aAAa;IACb,SAAS;IACT,KAAK,CAAC,CAAC;;IAEP;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,iBAAiB,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;IACpE;IACA,QAAQA,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACtC,QAAQA,WAAK,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAClC;;IAEA,QAAQ,iBAAiB,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7D,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,iBAAiB,CAAC,SAAS,CAAC,wBAAwB,GAAG,SAAS,QAAQ,EAAE,MAAM,EAAE;IACtF,QAAQ,OAAO,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,EAAE,MAAM,CAAC,CAAC;IACvF,KAAK,CAAC;;IAEN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,iBAAiB,CAAC,SAAS,CAAC,+BAA+B,GAAG,SAAS,QAAQ,EAAE,MAAM,EAAE;IAC7F;IACA,QAAQA,WAAK,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAClD;;IAEA,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;;IAExC,QAAQ,IAAI,CAAC,GAAG,SAAS,CAAC,aAAa,GAAG,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC;;IAEjE,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACzC,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACzC,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACzC,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACvC,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACvC,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IACvC,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;IAEvC,QAAQ,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACvB,QAAQ,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;;IAExB,QAAQ,IAAI,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;IAC5C,QAAQ,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;IACxC,QAAQ,IAAI,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;IAC1C,QAAQ,IAAI,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;IAC1C,QAAQ,IAAI,KAAK,GAAG,GAAG,GAAG,EAAE,GAAG,SAAS,GAAG,QAAQ,GAAG,GAAG;IACzD,YAAY,CAAC,IAAI,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,IAAI,GAAG,QAAQ,GAAG,GAAG,GAAG,KAAK,GAAG,SAAS,GAAG,IAAI;IACxG,YAAY,CAAC,QAAQ,GAAG,IAAI,GAAG,QAAQ,GAAG,GAAG,GAAG,KAAK,GAAG,SAAS,GAAG,IAAI,IAAI,QAAQ;IACpF,YAAY,CAAC,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,KAAK,GAAG,SAAS,GAAG,IAAI,IAAI,QAAQ;IACxE,YAAY,IAAI,GAAG,SAAS,GAAG,QAAQ,GAAG,IAAI,CAAC;IAC/C,YAAY,CAAC,OAAO,GAAG,GAAG,GAAG,QAAQ,GAAG,IAAI,GAAG,QAAQ,GAAG,IAAI,GAAG,IAAI,GAAG,SAAS,GAAG,IAAI,IAAI,MAAM;IAClG,YAAY,CAAC,GAAG,GAAG,QAAQ,GAAG,IAAI,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,KAAK,GAAG,SAAS,GAAG,IAAI,IAAI,MAAM;IAC9F,YAAY,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,SAAS,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,GAAG,SAAS,GAAG,MAAM,GAAG,GAAG,CAAC;IAChG,YAAY,CAAC,IAAI,GAAG,QAAQ,GAAG,IAAI,GAAG,IAAI,GAAG,SAAS,GAAG,IAAI,IAAI,MAAM;IACvE,YAAY,KAAK,GAAG,SAAS,GAAG,MAAM,GAAG,MAAM,CAAC;;IAEhD,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,WAAW,CAAC,CAAC;IACvE,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;;IAE9E;IACA,QAAQ,KAAK,GAAG,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;;IAExC,QAAQ,IAAI,wBAAwB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;;IAE/E,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACxC,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;IAE1C,QAAQ,IAAI,EAAE,GAAG,SAAS,CAAC,OAAO,GAAG,WAAW,CAAC;IACjD,QAAQ,IAAI,EAAE,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC;;IAE7C,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC,WAAW,EAAE,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;;IAEtG,QAAQ,IAAI,CAAC,GAAG,MAAM,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,kBAAkB;IAC1G,4CAA4C,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE,wBAAwB,CAAC,CAAC;;IAErG,QAAQ,IAAII,eAAO,CAAC,MAAM,CAAC,EAAE;IAC7B,YAAY,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;IACzD,YAAY,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACvC,YAAY,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;IAChC,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;;IAET,QAAQ,OAAO,IAAIH,uBAAY,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;IAC1E,KAAK,CAAC;;;;;;;;"}