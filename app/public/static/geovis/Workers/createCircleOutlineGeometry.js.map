{"version":3,"file":"createCircleOutlineGeometry.js","sources":["../../../../Source/Core/CircleOutlineGeometry.js","../../../../Source/WorkersES6/createCircleOutlineGeometry.js"],"sourcesContent":["import Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport EllipseOutlineGeometry from './EllipseOutlineGeometry.js';\r\nimport Ellipsoid from './Ellipsoid.js';\r\n\r\n    /**\r\n     * A description of the outline of a circle on the ellipsoid.\r\n     *\r\n     * @alias CircleOutlineGeometry\r\n     * @constructor\r\n     *\r\n     * @param {Object} options Object with the following properties:\r\n     * @param {Cartesian3} options.center The circle's center point in the fixed frame.\r\n     * @param {Number} options.radius The radius in meters.\r\n     * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid the circle will be on.\r\n     * @param {Number} [options.height=0.0] The distance in meters between the circle and the ellipsoid surface.\r\n     * @param {Number} [options.granularity=0.02] The angular distance between points on the circle in radians.\r\n     * @param {Number} [options.extrudedHeight=0.0] The distance in meters between the circle's extruded face and the ellipsoid surface.\r\n     * @param {Number} [options.numberOfVerticalLines=16] Number of lines to draw between the top and bottom of an extruded circle.\r\n     *\r\n     * @exception {DeveloperError} radius must be greater than zero.\r\n     * @exception {DeveloperError} granularity must be greater than zero.\r\n     *\r\n     * @see CircleOutlineGeometry.createGeometry\r\n     * @see Packable\r\n     *\r\n     * @example\r\n     * // Create a circle.\r\n     * var circle = new Cesium.CircleOutlineGeometry({\r\n     *   center : Cesium.Cartesian3.fromDegrees(-75.59777, 40.03883),\r\n     *   radius : 100000.0\r\n     * });\r\n     * var geometry = Cesium.CircleOutlineGeometry.createGeometry(circle);\r\n     */\r\n    function CircleOutlineGeometry(options) {\r\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n        var radius = options.radius;\r\n\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.number('radius', radius);\r\n        //>>includeEnd('debug');\r\n\r\n        var ellipseGeometryOptions = {\r\n            center : options.center,\r\n            semiMajorAxis : radius,\r\n            semiMinorAxis : radius,\r\n            ellipsoid : options.ellipsoid,\r\n            height : options.height,\r\n            extrudedHeight : options.extrudedHeight,\r\n            granularity : options.granularity,\r\n            numberOfVerticalLines : options.numberOfVerticalLines\r\n        };\r\n        this._ellipseGeometry = new EllipseOutlineGeometry(ellipseGeometryOptions);\r\n        this._workerName = 'createCircleOutlineGeometry';\r\n    }\r\n\r\n    /**\r\n     * The number of elements used to pack the object into an array.\r\n     * @type {Number}\r\n     */\r\n    CircleOutlineGeometry.packedLength = EllipseOutlineGeometry.packedLength;\r\n\r\n    /**\r\n     * Stores the provided instance into the provided array.\r\n     *\r\n     * @param {CircleOutlineGeometry} value The value to pack.\r\n     * @param {Number[]} array The array to pack into.\r\n     * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n     *\r\n     * @returns {Number[]} The array that was packed into\r\n     */\r\n    CircleOutlineGeometry.pack = function(value, array, startingIndex) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('value', value);\r\n        //>>includeEnd('debug');\r\n        return EllipseOutlineGeometry.pack(value._ellipseGeometry, array, startingIndex);\r\n    };\r\n\r\n    var scratchEllipseGeometry = new EllipseOutlineGeometry({\r\n        center : new Cartesian3(),\r\n        semiMajorAxis : 1.0,\r\n        semiMinorAxis : 1.0\r\n    });\r\n    var scratchOptions = {\r\n        center : new Cartesian3(),\r\n        radius : undefined,\r\n        ellipsoid : Ellipsoid.clone(Ellipsoid.UNIT_SPHERE),\r\n        height : undefined,\r\n        extrudedHeight : undefined,\r\n        granularity : undefined,\r\n        numberOfVerticalLines : undefined,\r\n        semiMajorAxis : undefined,\r\n        semiMinorAxis : undefined\r\n    };\r\n\r\n    /**\r\n     * Retrieves an instance from a packed array.\r\n     *\r\n     * @param {Number[]} array The packed array.\r\n     * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n     * @param {CircleOutlineGeometry} [result] The object into which to store the result.\r\n     * @returns {CircleOutlineGeometry} The modified result parameter or a new CircleOutlineGeometry instance if one was not provided.\r\n     */\r\n    CircleOutlineGeometry.unpack = function(array, startingIndex, result) {\r\n        var ellipseGeometry = EllipseOutlineGeometry.unpack(array, startingIndex, scratchEllipseGeometry);\r\n        scratchOptions.center = Cartesian3.clone(ellipseGeometry._center, scratchOptions.center);\r\n        scratchOptions.ellipsoid = Ellipsoid.clone(ellipseGeometry._ellipsoid, scratchOptions.ellipsoid);\r\n        scratchOptions.height = ellipseGeometry._height;\r\n        scratchOptions.extrudedHeight = ellipseGeometry._extrudedHeight;\r\n        scratchOptions.granularity = ellipseGeometry._granularity;\r\n        scratchOptions.numberOfVerticalLines = ellipseGeometry._numberOfVerticalLines;\r\n\r\n        if (!defined(result)) {\r\n            scratchOptions.radius = ellipseGeometry._semiMajorAxis;\r\n            return new CircleOutlineGeometry(scratchOptions);\r\n        }\r\n\r\n        scratchOptions.semiMajorAxis = ellipseGeometry._semiMajorAxis;\r\n        scratchOptions.semiMinorAxis = ellipseGeometry._semiMinorAxis;\r\n        result._ellipseGeometry = new EllipseOutlineGeometry(scratchOptions);\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Computes the geometric representation of an outline of a circle on an ellipsoid, including its vertices, indices, and a bounding sphere.\r\n     *\r\n     * @param {CircleOutlineGeometry} circleGeometry A description of the circle.\r\n     * @returns {Geometry|undefined} The computed vertices and indices.\r\n     */\r\n    CircleOutlineGeometry.createGeometry = function(circleGeometry) {\r\n        return EllipseOutlineGeometry.createGeometry(circleGeometry._ellipseGeometry);\r\n    };\r\nexport default CircleOutlineGeometry;\r\n","import Cartesian3 from '../Core/Cartesian3.js';\r\nimport CircleOutlineGeometry from '../Core/CircleOutlineGeometry.js';\r\nimport defined from '../Core/defined.js';\r\nimport Ellipsoid from '../Core/Ellipsoid.js';\r\n\r\n    function createCircleOutlineGeometry(circleGeometry, offset) {\r\n        if (defined(offset)) {\r\n            circleGeometry = CircleOutlineGeometry.unpack(circleGeometry, offset);\r\n        }\r\n        circleGeometry._ellipseGeometry._center = Cartesian3.clone(circleGeometry._ellipseGeometry._center);\r\n        circleGeometry._ellipseGeometry._ellipsoid = Ellipsoid.clone(circleGeometry._ellipseGeometry._ellipsoid);\r\n        return CircleOutlineGeometry.createGeometry(circleGeometry);\r\n    }\r\nexport default createCircleOutlineGeometry;\r\n"],"names":["defaultValue","Check","EllipseOutlineGeometry","Cartesian3","Ellipsoid","defined"],"mappings":"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"}