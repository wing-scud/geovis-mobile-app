{"version":3,"file":"WallGeometryLibrary-aa158174.js","sources":["../../../../Source/Core/WallGeometryLibrary.js"],"sourcesContent":["import Cartographic from './Cartographic.js';\r\nimport defined from './defined.js';\r\nimport EllipsoidTangentPlane from './EllipsoidTangentPlane.js';\r\nimport CesiumMath from './Math.js';\r\nimport PolygonPipeline from './PolygonPipeline.js';\r\nimport PolylinePipeline from './PolylinePipeline.js';\r\nimport WindingOrder from './WindingOrder.js';\r\n\r\n    /**\r\n     * private\r\n     */\r\n    var WallGeometryLibrary = {};\r\n\r\n    function latLonEquals(c0, c1) {\r\n        return ((CesiumMath.equalsEpsilon(c0.latitude, c1.latitude, CesiumMath.EPSILON14)) && (CesiumMath.equalsEpsilon(c0.longitude, c1.longitude, CesiumMath.EPSILON14)));\r\n    }\r\n\r\n    var scratchCartographic1 = new Cartographic();\r\n    var scratchCartographic2 = new Cartographic();\r\n    function removeDuplicates(ellipsoid, positions, topHeights, bottomHeights) {\r\n        var length = positions.length;\r\n        if (length < 2) {\r\n            return;\r\n        }\r\n\r\n        var hasBottomHeights = defined(bottomHeights);\r\n        var hasTopHeights = defined(topHeights);\r\n        var hasAllZeroHeights = true;\r\n\r\n        var cleanedPositions = new Array(length);\r\n        var cleanedTopHeights = new Array(length);\r\n        var cleanedBottomHeights = new Array(length);\r\n\r\n        var v0 = positions[0];\r\n        cleanedPositions[0] = v0;\r\n\r\n        var c0 = ellipsoid.cartesianToCartographic(v0, scratchCartographic1);\r\n        if (hasTopHeights) {\r\n            c0.height = topHeights[0];\r\n        }\r\n\r\n        hasAllZeroHeights = hasAllZeroHeights && c0.height <= 0;\r\n\r\n        cleanedTopHeights[0] = c0.height;\r\n\r\n        if (hasBottomHeights) {\r\n            cleanedBottomHeights[0] = bottomHeights[0];\r\n        } else {\r\n            cleanedBottomHeights[0] = 0.0;\r\n        }\r\n\r\n        var index = 1;\r\n        for (var i = 1; i < length; ++i) {\r\n            var v1 = positions[i];\r\n            var c1 = ellipsoid.cartesianToCartographic(v1, scratchCartographic2);\r\n            if (hasTopHeights) {\r\n                c1.height = topHeights[i];\r\n            }\r\n            hasAllZeroHeights = hasAllZeroHeights && c1.height <= 0;\r\n\r\n            if (!latLonEquals(c0, c1)) {\r\n                cleanedPositions[index] = v1; // Shallow copy!\r\n                cleanedTopHeights[index] = c1.height;\r\n\r\n                if (hasBottomHeights) {\r\n                    cleanedBottomHeights[index] = bottomHeights[i];\r\n                } else {\r\n                    cleanedBottomHeights[index] = 0.0;\r\n                }\r\n\r\n                Cartographic.clone(c1, c0);\r\n                ++index;\r\n            } else if (c0.height < c1.height) {\r\n                cleanedTopHeights[index - 1] = c1.height;\r\n            }\r\n        }\r\n\r\n        if (hasAllZeroHeights || index < 2) {\r\n            return;\r\n        }\r\n\r\n        cleanedPositions.length = index;\r\n        cleanedTopHeights.length = index;\r\n        cleanedBottomHeights.length = index;\r\n\r\n        return {\r\n            positions: cleanedPositions,\r\n            topHeights: cleanedTopHeights,\r\n            bottomHeights: cleanedBottomHeights\r\n        };\r\n    }\r\n\r\n    var positionsArrayScratch = new Array(2);\r\n    var heightsArrayScratch = new Array(2);\r\n    var generateArcOptionsScratch = {\r\n        positions : undefined,\r\n        height : undefined,\r\n        granularity : undefined,\r\n        ellipsoid : undefined\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    WallGeometryLibrary.computePositions = function(ellipsoid, wallPositions, maximumHeights, minimumHeights, granularity, duplicateCorners) {\r\n        var o = removeDuplicates(ellipsoid, wallPositions, maximumHeights, minimumHeights);\r\n\r\n        if (!defined(o)) {\r\n            return;\r\n        }\r\n\r\n        wallPositions = o.positions;\r\n        maximumHeights = o.topHeights;\r\n        minimumHeights = o.bottomHeights;\r\n\r\n        if (wallPositions.length >= 3) {\r\n            // Order positions counter-clockwise\r\n            var tangentPlane = EllipsoidTangentPlane.fromPoints(wallPositions, ellipsoid);\r\n            var positions2D = tangentPlane.projectPointsOntoPlane(wallPositions);\r\n\r\n            if (PolygonPipeline.computeWindingOrder2D(positions2D) === WindingOrder.CLOCKWISE) {\r\n                wallPositions.reverse();\r\n                maximumHeights.reverse();\r\n                minimumHeights.reverse();\r\n            }\r\n        }\r\n\r\n        var length = wallPositions.length;\r\n        var numCorners = length - 2;\r\n        var topPositions;\r\n        var bottomPositions;\r\n\r\n        var minDistance = CesiumMath.chordLength(granularity, ellipsoid.maximumRadius);\r\n\r\n        var generateArcOptions = generateArcOptionsScratch;\r\n        generateArcOptions.minDistance = minDistance;\r\n        generateArcOptions.ellipsoid = ellipsoid;\r\n\r\n        if (duplicateCorners) {\r\n            var count = 0;\r\n            var i;\r\n\r\n            for (i = 0; i < length - 1; i++) {\r\n                count += PolylinePipeline.numberOfPoints(wallPositions[i], wallPositions[i+1], minDistance) + 1;\r\n            }\r\n\r\n            topPositions = new Float64Array(count * 3);\r\n            bottomPositions = new Float64Array(count * 3);\r\n\r\n            var generateArcPositions = positionsArrayScratch;\r\n            var generateArcHeights = heightsArrayScratch;\r\n            generateArcOptions.positions = generateArcPositions;\r\n            generateArcOptions.height = generateArcHeights;\r\n\r\n            var offset = 0;\r\n            for (i = 0; i < length - 1; i++) {\r\n                generateArcPositions[0] = wallPositions[i];\r\n                generateArcPositions[1] = wallPositions[i + 1];\r\n\r\n                generateArcHeights[0] = maximumHeights[i];\r\n                generateArcHeights[1] = maximumHeights[i + 1];\r\n\r\n                var pos = PolylinePipeline.generateArc(generateArcOptions);\r\n                topPositions.set(pos, offset);\r\n\r\n                generateArcHeights[0] = minimumHeights[i];\r\n                generateArcHeights[1] = minimumHeights[i + 1];\r\n\r\n                bottomPositions.set(PolylinePipeline.generateArc(generateArcOptions), offset);\r\n\r\n                offset += pos.length;\r\n            }\r\n        } else {\r\n            generateArcOptions.positions = wallPositions;\r\n            generateArcOptions.height = maximumHeights;\r\n            topPositions = new Float64Array(PolylinePipeline.generateArc(generateArcOptions));\r\n\r\n            generateArcOptions.height = minimumHeights;\r\n            bottomPositions = new Float64Array(PolylinePipeline.generateArc(generateArcOptions));\r\n        }\r\n\r\n        return {\r\n            bottomPositions: bottomPositions,\r\n            topPositions: topPositions,\r\n            numCorners: numCorners\r\n        };\r\n    };\r\nexport default WallGeometryLibrary;\r\n"],"names":["CesiumMath","Cartographic","defined","EllipsoidTangentPlane","PolygonPipeline","WindingOrder","PolylinePipeline"],"mappings":"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"}