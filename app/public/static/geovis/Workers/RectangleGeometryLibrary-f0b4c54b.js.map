{"version":3,"file":"RectangleGeometryLibrary-f0b4c54b.js","sources":["../../../../Source/Core/RectangleGeometryLibrary.js"],"sourcesContent":["import Cartesian3 from './Cartesian3.js';\r\nimport Cartographic from './Cartographic.js';\r\nimport defined from './defined.js';\r\nimport DeveloperError from './DeveloperError.js';\r\nimport GeographicProjection from './GeographicProjection.js';\r\nimport CesiumMath from './Math.js';\r\nimport Matrix2 from './Matrix2.js';\r\nimport Rectangle from './Rectangle.js';\r\n\r\n    var cos = Math.cos;\r\n    var sin = Math.sin;\r\n    var sqrt = Math.sqrt;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    var RectangleGeometryLibrary = {};\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    RectangleGeometryLibrary.computePosition = function(computedOptions, ellipsoid, computeST, row, col, position, st) {\r\n        var radiiSquared = ellipsoid.radiiSquared;\r\n        var nwCorner = computedOptions.nwCorner;\r\n        var rectangle = computedOptions.boundingRectangle;\r\n\r\n        var stLatitude = nwCorner.latitude - computedOptions.granYCos * row + col * computedOptions.granXSin;\r\n        var cosLatitude = cos(stLatitude);\r\n        var nZ = sin(stLatitude);\r\n        var kZ = radiiSquared.z * nZ;\r\n\r\n        var stLongitude = nwCorner.longitude + row * computedOptions.granYSin + col * computedOptions.granXCos;\r\n        var nX = cosLatitude * cos(stLongitude);\r\n        var nY = cosLatitude * sin(stLongitude);\r\n\r\n        var kX = radiiSquared.x * nX;\r\n        var kY = radiiSquared.y * nY;\r\n\r\n        var gamma = sqrt((kX * nX) + (kY * nY) + (kZ * nZ));\r\n\r\n        position.x = kX / gamma;\r\n        position.y = kY / gamma;\r\n        position.z = kZ / gamma;\r\n\r\n        if (computeST) {\r\n            var stNwCorner = computedOptions.stNwCorner;\r\n            if (defined(stNwCorner)) {\r\n                stLatitude = stNwCorner.latitude - computedOptions.stGranYCos * row + col * computedOptions.stGranXSin;\r\n                stLongitude = stNwCorner.longitude + row * computedOptions.stGranYSin + col * computedOptions.stGranXCos;\r\n\r\n                st.x = (stLongitude - computedOptions.stWest) * computedOptions.lonScalar;\r\n                st.y = (stLatitude - computedOptions.stSouth) * computedOptions.latScalar;\r\n            } else {\r\n                st.x = (stLongitude - rectangle.west) * computedOptions.lonScalar;\r\n                st.y = (stLatitude - rectangle.south) * computedOptions.latScalar;\r\n            }\r\n        }\r\n    };\r\n\r\n    var rotationMatrixScratch = new Matrix2();\r\n    var nwCartesian = new Cartesian3();\r\n    var centerScratch = new Cartographic();\r\n    var centerCartesian = new Cartesian3();\r\n    var proj = new GeographicProjection();\r\n\r\n    function getRotationOptions(nwCorner, rotation, granularityX, granularityY, center, width, height) {\r\n        var cosRotation = Math.cos(rotation);\r\n        var granYCos = granularityY * cosRotation;\r\n        var granXCos = granularityX * cosRotation;\r\n\r\n        var sinRotation = Math.sin(rotation);\r\n        var granYSin = granularityY * sinRotation;\r\n        var granXSin = granularityX * sinRotation;\r\n\r\n        nwCartesian = proj.project(nwCorner, nwCartesian);\r\n\r\n        nwCartesian = Cartesian3.subtract(nwCartesian, centerCartesian, nwCartesian);\r\n        var rotationMatrix = Matrix2.fromRotation(rotation, rotationMatrixScratch);\r\n        nwCartesian = Matrix2.multiplyByVector(rotationMatrix, nwCartesian, nwCartesian);\r\n        nwCartesian = Cartesian3.add(nwCartesian, centerCartesian, nwCartesian);\r\n        nwCorner = proj.unproject(nwCartesian, nwCorner);\r\n\r\n        width -= 1;\r\n        height -= 1;\r\n\r\n        var latitude = nwCorner.latitude;\r\n        var latitude0 = latitude + width * granXSin;\r\n        var latitude1 = latitude - granYCos * height;\r\n        var latitude2 = latitude - granYCos * height + width * granXSin;\r\n\r\n        var north = Math.max(latitude, latitude0, latitude1, latitude2);\r\n        var south = Math.min(latitude, latitude0, latitude1, latitude2);\r\n\r\n        var longitude = nwCorner.longitude;\r\n        var longitude0 = longitude + width * granXCos;\r\n        var longitude1 = longitude + height * granYSin;\r\n        var longitude2 = longitude + height * granYSin + width * granXCos;\r\n\r\n        var east = Math.max(longitude, longitude0, longitude1, longitude2);\r\n        var west = Math.min(longitude, longitude0, longitude1, longitude2);\r\n\r\n        return {\r\n            north: north,\r\n            south: south,\r\n            east: east,\r\n            west: west,\r\n            granYCos : granYCos,\r\n            granYSin : granYSin,\r\n            granXCos : granXCos,\r\n            granXSin : granXSin,\r\n            nwCorner : nwCorner\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    RectangleGeometryLibrary.computeOptions = function(rectangle, granularity, rotation, stRotation, boundingRectangleScratch, nwCornerResult, stNwCornerResult) {\r\n        var east = rectangle.east;\r\n        var west = rectangle.west;\r\n        var north = rectangle.north;\r\n        var south = rectangle.south;\r\n\r\n        var northCap = false;\r\n        var southCap = false;\r\n\r\n        if (north === CesiumMath.PI_OVER_TWO) {\r\n            northCap = true;\r\n        }\r\n        if (south === -CesiumMath.PI_OVER_TWO) {\r\n            southCap = true;\r\n        }\r\n\r\n        var width;\r\n        var height;\r\n        var granularityX;\r\n        var granularityY;\r\n        var dx;\r\n        var dy = north - south;\r\n        if (west > east) {\r\n            dx = (CesiumMath.TWO_PI - west + east);\r\n        } else {\r\n            dx = east - west;\r\n        }\r\n\r\n        width = Math.ceil(dx / granularity) + 1;\r\n        height = Math.ceil(dy / granularity) + 1;\r\n        granularityX = dx / (width - 1);\r\n        granularityY = dy / (height - 1);\r\n\r\n        var nwCorner = Rectangle.northwest(rectangle, nwCornerResult);\r\n        var center = Rectangle.center(rectangle, centerScratch);\r\n        if (rotation !== 0 || stRotation !== 0) {\r\n            if (center.longitude < nwCorner.longitude) {\r\n                center.longitude += CesiumMath.TWO_PI;\r\n            }\r\n            centerCartesian = proj.project(center, centerCartesian);\r\n        }\r\n\r\n        var granYCos = granularityY;\r\n        var granXCos = granularityX;\r\n        var granYSin = 0.0;\r\n        var granXSin = 0.0;\r\n\r\n        var boundingRectangle = Rectangle.clone(rectangle, boundingRectangleScratch);\r\n\r\n        var computedOptions = {\r\n            granYCos : granYCos,\r\n            granYSin : granYSin,\r\n            granXCos : granXCos,\r\n            granXSin : granXSin,\r\n            nwCorner : nwCorner,\r\n            boundingRectangle : boundingRectangle,\r\n            width: width,\r\n            height: height,\r\n            northCap: northCap,\r\n            southCap: southCap\r\n        };\r\n\r\n        if (rotation !== 0) {\r\n            var rotationOptions = getRotationOptions(nwCorner, rotation, granularityX, granularityY, center, width, height);\r\n            north = rotationOptions.north;\r\n            south = rotationOptions.south;\r\n            east = rotationOptions.east;\r\n            west = rotationOptions.west;\r\n\r\n            //>>includeStart('debug', pragmas.debug);\r\n            if (north < -CesiumMath.PI_OVER_TWO || north > CesiumMath.PI_OVER_TWO ||\r\n                south < -CesiumMath.PI_OVER_TWO || south > CesiumMath.PI_OVER_TWO) {\r\n                throw new DeveloperError('Rotated rectangle is invalid.  It crosses over either the north or south pole.');\r\n            }\r\n            //>>includeEnd('debug')\r\n\r\n            computedOptions.granYCos = rotationOptions.granYCos;\r\n            computedOptions.granYSin = rotationOptions.granYSin;\r\n            computedOptions.granXCos = rotationOptions.granXCos;\r\n            computedOptions.granXSin = rotationOptions.granXSin;\r\n\r\n            boundingRectangle.north = north;\r\n            boundingRectangle.south = south;\r\n            boundingRectangle.east = east;\r\n            boundingRectangle.west = west;\r\n        }\r\n\r\n        if (stRotation !== 0) {\r\n            rotation = rotation - stRotation;\r\n            var stNwCorner = Rectangle.northwest(boundingRectangle, stNwCornerResult);\r\n\r\n            var stRotationOptions = getRotationOptions(stNwCorner, rotation, granularityX, granularityY, center, width, height);\r\n\r\n            computedOptions.stGranYCos =  stRotationOptions.granYCos;\r\n            computedOptions.stGranXCos = stRotationOptions.granXCos;\r\n            computedOptions.stGranYSin = stRotationOptions.granYSin;\r\n            computedOptions.stGranXSin = stRotationOptions.granXSin;\r\n            computedOptions.stNwCorner = stNwCorner;\r\n            computedOptions.stWest = stRotationOptions.west;\r\n            computedOptions.stSouth = stRotationOptions.south;\r\n        }\r\n\r\n        return computedOptions;\r\n    };\r\nexport default RectangleGeometryLibrary;\r\n"],"names":["defined","Matrix2","Cartesian3","Cartographic","GeographicProjection","CesiumMath","Rectangle","DeveloperError"],"mappings":"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"}