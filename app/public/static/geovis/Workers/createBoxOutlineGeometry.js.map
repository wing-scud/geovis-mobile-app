{"version":3,"file":"createBoxOutlineGeometry.js","sources":["../../../../Source/Core/BoxOutlineGeometry.js","../../../../Source/WorkersES6/createBoxOutlineGeometry.js"],"sourcesContent":["import arrayFill from './arrayFill.js';\r\nimport BoundingSphere from './BoundingSphere.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport ComponentDatatype from './ComponentDatatype.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport DeveloperError from './DeveloperError.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryAttribute from './GeometryAttribute.js';\r\nimport GeometryAttributes from './GeometryAttributes.js';\r\nimport GeometryOffsetAttribute from './GeometryOffsetAttribute.js';\r\nimport PrimitiveType from './PrimitiveType.js';\r\n\r\n    var diffScratch = new Cartesian3();\r\n\r\n    /**\r\n     * A description of the outline of a cube centered at the origin.\r\n     *\r\n     * @alias BoxOutlineGeometry\r\n     * @constructor\r\n     *\r\n     * @param {Object} options Object with the following properties:\r\n     * @param {Cartesian3} options.minimum The minimum x, y, and z coordinates of the box.\r\n     * @param {Cartesian3} options.maximum The maximum x, y, and z coordinates of the box.\r\n     *\r\n     * @see BoxOutlineGeometry.fromDimensions\r\n     * @see BoxOutlineGeometry.createGeometry\r\n     * @see Packable\r\n     *\r\n     * @example\r\n     * var box = new Cesium.BoxOutlineGeometry({\r\n     *   maximum : new Cesium.Cartesian3(250000.0, 250000.0, 250000.0),\r\n     *   minimum : new Cesium.Cartesian3(-250000.0, -250000.0, -250000.0)\r\n     * });\r\n     * var geometry = Cesium.BoxOutlineGeometry.createGeometry(box);\r\n     */\r\n    function BoxOutlineGeometry(options) {\r\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n        var min = options.minimum;\r\n        var max = options.maximum;\r\n\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('min', min);\r\n        Check.typeOf.object('max', max);\r\n        if (defined(options.offsetAttribute) && options.offsetAttribute === GeometryOffsetAttribute.TOP) {\r\n            throw new DeveloperError('GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.');\r\n        }\r\n        //>>includeEnd('debug');\r\n\r\n        this._min = Cartesian3.clone(min);\r\n        this._max = Cartesian3.clone(max);\r\n        this._offsetAttribute = options.offsetAttribute;\r\n        this._workerName = 'createBoxOutlineGeometry';\r\n    }\r\n\r\n    /**\r\n     * Creates an outline of a cube centered at the origin given its dimensions.\r\n     *\r\n     * @param {Object} options Object with the following properties:\r\n     * @param {Cartesian3} options.dimensions The width, depth, and height of the box stored in the x, y, and z coordinates of the <code>Cartesian3</code>, respectively.\r\n     * @returns {BoxOutlineGeometry}\r\n     *\r\n     * @exception {DeveloperError} All dimensions components must be greater than or equal to zero.\r\n     *\r\n     *\r\n     * @example\r\n     * var box = Cesium.BoxOutlineGeometry.fromDimensions({\r\n     *   dimensions : new Cesium.Cartesian3(500000.0, 500000.0, 500000.0)\r\n     * });\r\n     * var geometry = Cesium.BoxOutlineGeometry.createGeometry(box);\r\n     *\r\n     * @see BoxOutlineGeometry.createGeometry\r\n     */\r\n    BoxOutlineGeometry.fromDimensions = function(options) {\r\n        options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n        var dimensions = options.dimensions;\r\n\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('dimensions', dimensions);\r\n        Check.typeOf.number.greaterThanOrEquals('dimensions.x', dimensions.x, 0);\r\n        Check.typeOf.number.greaterThanOrEquals('dimensions.y', dimensions.y, 0);\r\n        Check.typeOf.number.greaterThanOrEquals('dimensions.z', dimensions.z, 0);\r\n        //>>includeEnd('debug');\r\n\r\n        var corner = Cartesian3.multiplyByScalar(dimensions, 0.5, new Cartesian3());\r\n\r\n        return new BoxOutlineGeometry({\r\n            minimum : Cartesian3.negate(corner, new Cartesian3()),\r\n            maximum : corner,\r\n            offsetAttribute: options.offsetAttribute\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Creates an outline of a cube from the dimensions of an AxisAlignedBoundingBox.\r\n     *\r\n     * @param {AxisAlignedBoundingBox} boundingBox A description of the AxisAlignedBoundingBox.\r\n     * @returns {BoxOutlineGeometry}\r\n     *\r\n     *\r\n     *\r\n     * @example\r\n     * var aabb = Cesium.AxisAlignedBoundingBox.fromPoints(Cesium.Cartesian3.fromDegreesArray([\r\n     *      -72.0, 40.0,\r\n     *      -70.0, 35.0,\r\n     *      -75.0, 30.0,\r\n     *      -70.0, 30.0,\r\n     *      -68.0, 40.0\r\n     * ]));\r\n     * var box = Cesium.BoxOutlineGeometry.fromAxisAlignedBoundingBox(aabb);\r\n     *\r\n     *  @see BoxOutlineGeometry.createGeometry\r\n     */\r\n    BoxOutlineGeometry.fromAxisAlignedBoundingBox = function(boundingBox) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('boundindBox', boundingBox);\r\n        //>>includeEnd('debug');\r\n\r\n        return new BoxOutlineGeometry({\r\n            minimum : boundingBox.minimum,\r\n            maximum : boundingBox.maximum\r\n        });\r\n    };\r\n\r\n    /**\r\n     * The number of elements used to pack the object into an array.\r\n     * @type {Number}\r\n     */\r\n    BoxOutlineGeometry.packedLength = 2 * Cartesian3.packedLength + 1;\r\n\r\n    /**\r\n     * Stores the provided instance into the provided array.\r\n     *\r\n     * @param {BoxOutlineGeometry} value The value to pack.\r\n     * @param {Number[]} array The array to pack into.\r\n     * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n     *\r\n     * @returns {Number[]} The array that was packed into\r\n     */\r\n    BoxOutlineGeometry.pack = function(value, array, startingIndex) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.typeOf.object('value', value);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        startingIndex = defaultValue(startingIndex, 0);\r\n\r\n        Cartesian3.pack(value._min, array, startingIndex);\r\n        Cartesian3.pack(value._max, array, startingIndex + Cartesian3.packedLength);\r\n        array[startingIndex + (Cartesian3.packedLength * 2)] = defaultValue(value._offsetAttribute, -1);\r\n\r\n        return array;\r\n    };\r\n\r\n    var scratchMin = new Cartesian3();\r\n    var scratchMax = new Cartesian3();\r\n    var scratchOptions = {\r\n        minimum : scratchMin,\r\n        maximum : scratchMax,\r\n        offsetAttribute : undefined\r\n    };\r\n\r\n    /**\r\n     * Retrieves an instance from a packed array.\r\n     *\r\n     * @param {Number[]} array The packed array.\r\n     * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n     * @param {BoxOutlineGeometry} [result] The object into which to store the result.\r\n     * @returns {BoxOutlineGeometry} The modified result parameter or a new BoxOutlineGeometry instance if one was not provided.\r\n     */\r\n    BoxOutlineGeometry.unpack = function(array, startingIndex, result) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        Check.defined('array', array);\r\n        //>>includeEnd('debug');\r\n\r\n        startingIndex = defaultValue(startingIndex, 0);\r\n\r\n        var min = Cartesian3.unpack(array, startingIndex, scratchMin);\r\n        var max = Cartesian3.unpack(array, startingIndex + Cartesian3.packedLength, scratchMax);\r\n        var offsetAttribute = array[startingIndex + Cartesian3.packedLength * 2];\r\n\r\n        if (!defined(result)) {\r\n            scratchOptions.offsetAttribute = offsetAttribute === -1 ? undefined : offsetAttribute;\r\n            return new BoxOutlineGeometry(scratchOptions);\r\n        }\r\n\r\n        result._min = Cartesian3.clone(min, result._min);\r\n        result._max = Cartesian3.clone(max, result._max);\r\n        result._offsetAttribute = offsetAttribute === -1 ? undefined : offsetAttribute;\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Computes the geometric representation of an outline of a box, including its vertices, indices, and a bounding sphere.\r\n     *\r\n     * @param {BoxOutlineGeometry} boxGeometry A description of the box outline.\r\n     * @returns {Geometry|undefined} The computed vertices and indices.\r\n     */\r\n    BoxOutlineGeometry.createGeometry = function(boxGeometry) {\r\n        var min = boxGeometry._min;\r\n        var max = boxGeometry._max;\r\n\r\n        if (Cartesian3.equals(min, max)) {\r\n            return;\r\n        }\r\n\r\n        var attributes = new GeometryAttributes();\r\n        var indices = new Uint16Array(12 * 2);\r\n        var positions = new Float64Array(8 * 3);\r\n\r\n        positions[0] = min.x;\r\n        positions[1] = min.y;\r\n        positions[2] = min.z;\r\n        positions[3] = max.x;\r\n        positions[4] = min.y;\r\n        positions[5] = min.z;\r\n        positions[6] = max.x;\r\n        positions[7] = max.y;\r\n        positions[8] = min.z;\r\n        positions[9] = min.x;\r\n        positions[10] = max.y;\r\n        positions[11] = min.z;\r\n\r\n        positions[12] = min.x;\r\n        positions[13] = min.y;\r\n        positions[14] = max.z;\r\n        positions[15] = max.x;\r\n        positions[16] = min.y;\r\n        positions[17] = max.z;\r\n        positions[18] = max.x;\r\n        positions[19] = max.y;\r\n        positions[20] = max.z;\r\n        positions[21] = min.x;\r\n        positions[22] = max.y;\r\n        positions[23] = max.z;\r\n\r\n        attributes.position = new GeometryAttribute({\r\n            componentDatatype : ComponentDatatype.DOUBLE,\r\n            componentsPerAttribute : 3,\r\n            values : positions\r\n        });\r\n\r\n        // top\r\n        indices[0] = 4;\r\n        indices[1] = 5;\r\n        indices[2] = 5;\r\n        indices[3] = 6;\r\n        indices[4] = 6;\r\n        indices[5] = 7;\r\n        indices[6] = 7;\r\n        indices[7] = 4;\r\n\r\n        // bottom\r\n        indices[8] = 0;\r\n        indices[9] = 1;\r\n        indices[10] = 1;\r\n        indices[11] = 2;\r\n        indices[12] = 2;\r\n        indices[13] = 3;\r\n        indices[14] = 3;\r\n        indices[15] = 0;\r\n\r\n        // left\r\n        indices[16] = 0;\r\n        indices[17] = 4;\r\n        indices[18] = 1;\r\n        indices[19] = 5;\r\n\r\n        //right\r\n        indices[20] = 2;\r\n        indices[21] = 6;\r\n        indices[22] = 3;\r\n        indices[23] = 7;\r\n\r\n        var diff = Cartesian3.subtract(max, min, diffScratch);\r\n        var radius = Cartesian3.magnitude(diff) * 0.5;\r\n\r\n        if (defined(boxGeometry._offsetAttribute)) {\r\n            var length = positions.length;\r\n            var applyOffset = new Uint8Array(length / 3);\r\n            var offsetValue = boxGeometry._offsetAttribute === GeometryOffsetAttribute.NONE ? 0 : 1;\r\n            arrayFill(applyOffset, offsetValue);\r\n            attributes.applyOffset = new GeometryAttribute({\r\n                componentDatatype : ComponentDatatype.UNSIGNED_BYTE,\r\n                componentsPerAttribute : 1,\r\n                values: applyOffset\r\n            });\r\n        }\r\n\r\n        return new Geometry({\r\n            attributes : attributes,\r\n            indices : indices,\r\n            primitiveType : PrimitiveType.LINES,\r\n            boundingSphere : new BoundingSphere(Cartesian3.ZERO, radius),\r\n            offsetAttribute : boxGeometry._offsetAttribute\r\n        });\r\n    };\r\nexport default BoxOutlineGeometry;\r\n","import BoxOutlineGeometry from '../Core/BoxOutlineGeometry.js';\r\nimport defined from '../Core/defined.js';\r\n\r\n    function createBoxOutlineGeometry(boxGeometry, offset) {\r\n        if (defined(offset)) {\r\n            boxGeometry = BoxOutlineGeometry.unpack(boxGeometry, offset);\r\n        }\r\n        return BoxOutlineGeometry.createGeometry(boxGeometry);\r\n    }\r\nexport default createBoxOutlineGeometry;\r\n"],"names":["Cartesian3","defaultValue","Check","defined","GeometryOffsetAttribute","DeveloperError","GeometryAttributes","GeometryAttribute","ComponentDatatype","arrayFill","Geometry","PrimitiveType","BoundingSphere"],"mappings":"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"}