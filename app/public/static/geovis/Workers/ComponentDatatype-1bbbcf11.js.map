{"version":3,"file":"ComponentDatatype-1bbbcf11.js","sources":["../../../../Source/Core/ComponentDatatype.js"],"sourcesContent":["import defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport DeveloperError from './DeveloperError.js';\r\nimport WebGLConstants from './WebGLConstants.js';\r\n\r\n    /**\r\n     * WebGL component datatypes.  Components are intrinsics,\r\n     * which form attributes, which form vertices.\r\n     *\r\n     * @exports ComponentDatatype\r\n     */\r\n    var ComponentDatatype = {\r\n        /**\r\n         * 8-bit signed byte corresponding to <code>gl.BYTE</code> and the type\r\n         * of an element in <code>Int8Array</code>.\r\n         *\r\n         * @type {Number}\r\n         * @constant\r\n         */\r\n        BYTE : WebGLConstants.BYTE,\r\n\r\n        /**\r\n         * 8-bit unsigned byte corresponding to <code>UNSIGNED_BYTE</code> and the type\r\n         * of an element in <code>Uint8Array</code>.\r\n         *\r\n         * @type {Number}\r\n         * @constant\r\n         */\r\n        UNSIGNED_BYTE : WebGLConstants.UNSIGNED_BYTE,\r\n\r\n        /**\r\n         * 16-bit signed short corresponding to <code>SHORT</code> and the type\r\n         * of an element in <code>Int16Array</code>.\r\n         *\r\n         * @type {Number}\r\n         * @constant\r\n         */\r\n        SHORT : WebGLConstants.SHORT,\r\n\r\n        /**\r\n         * 16-bit unsigned short corresponding to <code>UNSIGNED_SHORT</code> and the type\r\n         * of an element in <code>Uint16Array</code>.\r\n         *\r\n         * @type {Number}\r\n         * @constant\r\n         */\r\n        UNSIGNED_SHORT : WebGLConstants.UNSIGNED_SHORT,\r\n\r\n        /**\r\n         * 32-bit signed int corresponding to <code>INT</code> and the type\r\n         * of an element in <code>Int32Array</code>.\r\n         *\r\n         * @memberOf ComponentDatatype\r\n         *\r\n         * @type {Number}\r\n         * @constant\r\n         */\r\n        INT : WebGLConstants.INT,\r\n\r\n        /**\r\n         * 32-bit unsigned int corresponding to <code>UNSIGNED_INT</code> and the type\r\n         * of an element in <code>Uint32Array</code>.\r\n         *\r\n         * @memberOf ComponentDatatype\r\n         *\r\n         * @type {Number}\r\n         * @constant\r\n         */\r\n        UNSIGNED_INT : WebGLConstants.UNSIGNED_INT,\r\n\r\n        /**\r\n         * 32-bit floating-point corresponding to <code>FLOAT</code> and the type\r\n         * of an element in <code>Float32Array</code>.\r\n         *\r\n         * @type {Number}\r\n         * @constant\r\n         */\r\n        FLOAT : WebGLConstants.FLOAT,\r\n\r\n        /**\r\n         * 64-bit floating-point corresponding to <code>gl.DOUBLE</code> (in Desktop OpenGL;\r\n         * this is not supported in WebGL, and is emulated in Cesium via {@link GeometryPipeline.encodeAttribute})\r\n         * and the type of an element in <code>Float64Array</code>.\r\n         *\r\n         * @memberOf ComponentDatatype\r\n         *\r\n         * @type {Number}\r\n         * @constant\r\n         * @default 0x140A\r\n         */\r\n        DOUBLE : WebGLConstants.DOUBLE\r\n    };\r\n\r\n    /**\r\n     * Returns the size, in bytes, of the corresponding datatype.\r\n     *\r\n     * @param {ComponentDatatype} componentDatatype The component datatype to get the size of.\r\n     * @returns {Number} The size in bytes.\r\n     *\r\n     * @exception {DeveloperError} componentDatatype is not a valid value.\r\n     *\r\n     * @example\r\n     * // Returns Int8Array.BYTES_PER_ELEMENT\r\n     * var size = Cesium.ComponentDatatype.getSizeInBytes(Cesium.ComponentDatatype.BYTE);\r\n     */\r\n    ComponentDatatype.getSizeInBytes = function(componentDatatype){\r\n        //>>includeStart('debug', pragmas.debug);\r\n        if (!defined(componentDatatype)) {\r\n            throw new DeveloperError('value is required.');\r\n        }\r\n        //>>includeEnd('debug');\r\n\r\n        switch (componentDatatype) {\r\n        case ComponentDatatype.BYTE:\r\n            return Int8Array.BYTES_PER_ELEMENT;\r\n        case ComponentDatatype.UNSIGNED_BYTE:\r\n            return Uint8Array.BYTES_PER_ELEMENT;\r\n        case ComponentDatatype.SHORT:\r\n            return Int16Array.BYTES_PER_ELEMENT;\r\n        case ComponentDatatype.UNSIGNED_SHORT:\r\n            return Uint16Array.BYTES_PER_ELEMENT;\r\n        case ComponentDatatype.INT:\r\n            return Int32Array.BYTES_PER_ELEMENT;\r\n        case ComponentDatatype.UNSIGNED_INT:\r\n            return Uint32Array.BYTES_PER_ELEMENT;\r\n        case ComponentDatatype.FLOAT:\r\n            return Float32Array.BYTES_PER_ELEMENT;\r\n        case ComponentDatatype.DOUBLE:\r\n            return Float64Array.BYTES_PER_ELEMENT;\r\n        //>>includeStart('debug', pragmas.debug);\r\n        default:\r\n            throw new DeveloperError('componentDatatype is not a valid value.');\r\n        //>>includeEnd('debug');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the {@link ComponentDatatype} for the provided TypedArray instance.\r\n     *\r\n     * @param {TypedArray} array The typed array.\r\n     * @returns {ComponentDatatype} The ComponentDatatype for the provided array, or undefined if the array is not a TypedArray.\r\n     */\r\n    ComponentDatatype.fromTypedArray = function(array) {\r\n        if (array instanceof Int8Array) {\r\n            return ComponentDatatype.BYTE;\r\n        }\r\n        if (array instanceof Uint8Array) {\r\n            return ComponentDatatype.UNSIGNED_BYTE;\r\n        }\r\n        if (array instanceof Int16Array) {\r\n            return ComponentDatatype.SHORT;\r\n        }\r\n        if (array instanceof Uint16Array) {\r\n            return ComponentDatatype.UNSIGNED_SHORT;\r\n        }\r\n        if (array instanceof Int32Array) {\r\n            return ComponentDatatype.INT;\r\n        }\r\n        if (array instanceof Uint32Array) {\r\n            return ComponentDatatype.UNSIGNED_INT;\r\n        }\r\n        if (array instanceof Float32Array) {\r\n            return ComponentDatatype.FLOAT;\r\n        }\r\n        if (array instanceof Float64Array) {\r\n            return ComponentDatatype.DOUBLE;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Validates that the provided component datatype is a valid {@link ComponentDatatype}\r\n     *\r\n     * @param {ComponentDatatype} componentDatatype The component datatype to validate.\r\n     * @returns {Boolean} <code>true</code> if the provided component datatype is a valid value; otherwise, <code>false</code>.\r\n     *\r\n     * @example\r\n     * if (!Cesium.ComponentDatatype.validate(componentDatatype)) {\r\n     *   throw new Cesium.DeveloperError('componentDatatype must be a valid value.');\r\n     * }\r\n     */\r\n    ComponentDatatype.validate = function(componentDatatype) {\r\n        return defined(componentDatatype) &&\r\n               (componentDatatype === ComponentDatatype.BYTE ||\r\n                componentDatatype === ComponentDatatype.UNSIGNED_BYTE ||\r\n                componentDatatype === ComponentDatatype.SHORT ||\r\n                componentDatatype === ComponentDatatype.UNSIGNED_SHORT ||\r\n                componentDatatype === ComponentDatatype.INT ||\r\n                componentDatatype === ComponentDatatype.UNSIGNED_INT ||\r\n                componentDatatype === ComponentDatatype.FLOAT ||\r\n                componentDatatype === ComponentDatatype.DOUBLE);\r\n    };\r\n\r\n    /**\r\n     * Creates a typed array corresponding to component data type.\r\n     *\r\n     * @param {ComponentDatatype} componentDatatype The component data type.\r\n     * @param {Number|Array} valuesOrLength The length of the array to create or an array.\r\n     * @returns {Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array} A typed array.\r\n     *\r\n     * @exception {DeveloperError} componentDatatype is not a valid value.\r\n     *\r\n     * @example\r\n     * // creates a Float32Array with length of 100\r\n     * var typedArray = Cesium.ComponentDatatype.createTypedArray(Cesium.ComponentDatatype.FLOAT, 100);\r\n     */\r\n    ComponentDatatype.createTypedArray = function(componentDatatype, valuesOrLength) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        if (!defined(componentDatatype)) {\r\n            throw new DeveloperError('componentDatatype is required.');\r\n        }\r\n        if (!defined(valuesOrLength)) {\r\n            throw new DeveloperError('valuesOrLength is required.');\r\n        }\r\n        //>>includeEnd('debug');\r\n\r\n        switch (componentDatatype) {\r\n        case ComponentDatatype.BYTE:\r\n            return new Int8Array(valuesOrLength);\r\n        case ComponentDatatype.UNSIGNED_BYTE:\r\n            return new Uint8Array(valuesOrLength);\r\n        case ComponentDatatype.SHORT:\r\n            return new Int16Array(valuesOrLength);\r\n        case ComponentDatatype.UNSIGNED_SHORT:\r\n            return new Uint16Array(valuesOrLength);\r\n        case ComponentDatatype.INT:\r\n            return new Int32Array(valuesOrLength);\r\n        case ComponentDatatype.UNSIGNED_INT:\r\n            return new Uint32Array(valuesOrLength);\r\n        case ComponentDatatype.FLOAT:\r\n            return new Float32Array(valuesOrLength);\r\n        case ComponentDatatype.DOUBLE:\r\n            return new Float64Array(valuesOrLength);\r\n        //>>includeStart('debug', pragmas.debug);\r\n        default:\r\n            throw new DeveloperError('componentDatatype is not a valid value.');\r\n        //>>includeEnd('debug');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Creates a typed view of an array of bytes.\r\n     *\r\n     * @param {ComponentDatatype} componentDatatype The type of the view to create.\r\n     * @param {ArrayBuffer} buffer The buffer storage to use for the view.\r\n     * @param {Number} [byteOffset] The offset, in bytes, to the first element in the view.\r\n     * @param {Number} [length] The number of elements in the view.\r\n     * @returns {Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array} A typed array view of the buffer.\r\n     *\r\n     * @exception {DeveloperError} componentDatatype is not a valid value.\r\n     */\r\n    ComponentDatatype.createArrayBufferView = function(componentDatatype, buffer, byteOffset, length) {\r\n        //>>includeStart('debug', pragmas.debug);\r\n        if (!defined(componentDatatype)) {\r\n            throw new DeveloperError('componentDatatype is required.');\r\n        }\r\n        if (!defined(buffer)) {\r\n            throw new DeveloperError('buffer is required.');\r\n        }\r\n        //>>includeEnd('debug');\r\n\r\n        byteOffset = defaultValue(byteOffset, 0);\r\n        length = defaultValue(length, (buffer.byteLength - byteOffset) / ComponentDatatype.getSizeInBytes(componentDatatype));\r\n\r\n        switch (componentDatatype) {\r\n        case ComponentDatatype.BYTE:\r\n            return new Int8Array(buffer, byteOffset, length);\r\n        case ComponentDatatype.UNSIGNED_BYTE:\r\n            return new Uint8Array(buffer, byteOffset, length);\r\n        case ComponentDatatype.SHORT:\r\n            return new Int16Array(buffer, byteOffset, length);\r\n        case ComponentDatatype.UNSIGNED_SHORT:\r\n            return new Uint16Array(buffer, byteOffset, length);\r\n        case ComponentDatatype.INT:\r\n            return new Int32Array(buffer, byteOffset, length);\r\n        case ComponentDatatype.UNSIGNED_INT:\r\n            return new Uint32Array(buffer, byteOffset, length);\r\n        case ComponentDatatype.FLOAT:\r\n            return new Float32Array(buffer, byteOffset, length);\r\n        case ComponentDatatype.DOUBLE:\r\n            return new Float64Array(buffer, byteOffset, length);\r\n        //>>includeStart('debug', pragmas.debug);\r\n        default:\r\n            throw new DeveloperError('componentDatatype is not a valid value.');\r\n        //>>includeEnd('debug');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the ComponentDatatype from its name.\r\n     *\r\n     * @param {String} name The name of the ComponentDatatype.\r\n     * @returns {ComponentDatatype} The ComponentDatatype.\r\n     *\r\n     * @exception {DeveloperError} name is not a valid value.\r\n     */\r\n    ComponentDatatype.fromName = function(name) {\r\n        switch (name) {\r\n            case 'BYTE':\r\n                return ComponentDatatype.BYTE;\r\n            case 'UNSIGNED_BYTE':\r\n                return ComponentDatatype.UNSIGNED_BYTE;\r\n            case 'SHORT':\r\n                return ComponentDatatype.SHORT;\r\n            case 'UNSIGNED_SHORT':\r\n                return ComponentDatatype.UNSIGNED_SHORT;\r\n            case 'INT':\r\n                return ComponentDatatype.INT;\r\n            case 'UNSIGNED_INT':\r\n                return ComponentDatatype.UNSIGNED_INT;\r\n            case 'FLOAT':\r\n                return ComponentDatatype.FLOAT;\r\n            case 'DOUBLE':\r\n                return ComponentDatatype.DOUBLE;\r\n            //>>includeStart('debug', pragmas.debug);\r\n            default:\r\n                throw new DeveloperError('name is not a valid value.');\r\n            //>>includeEnd('debug');\r\n        }\r\n    };\r\nexport default Object.freeze(ComponentDatatype);\r\n"],"names":["WebGLConstants","defined","DeveloperError","defaultValue"],"mappings":"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"}